/* ========================================================================
 * Copyright (c) 2005-2016 The OPC Foundation, Inc. All rights reserved.
 *
 * OPC Foundation MIT License 1.00
 *
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following
 * conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 *
 * The complete license agreement can be found here:
 * http://opcfoundation.org/License/MIT/1.00/
 * ======================================================================*/

using System;
using System.Collections.Generic;
using System.Text;
using System.Xml;
using System.Runtime.Serialization;
using Prefix0;

namespace Prefix2
{
    #region DataType Identifiers
    /// <summary>
    /// A class that declares constants for all DataTypes in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class DataTypes
    {
        /// <summary>
        /// The identifier for the SystemStateDataType DataType.
        /// </summary>
        public const uint SystemStateDataType = 1;

        /// <summary>
        /// The identifier for the TriStateBooleanDataType DataType.
        /// </summary>
        public const uint TriStateBooleanDataType = 3;

        /// <summary>
        /// The identifier for the ResultStateDataType DataType.
        /// </summary>
        public const uint ResultStateDataType = 6;

        /// <summary>
        /// The identifier for the Handle DataType.
        /// </summary>
        public const uint Handle = 7;

        /// <summary>
        /// The identifier for the TrimmedString DataType.
        /// </summary>
        public const uint TrimmedString = 8;

        /// <summary>
        /// The identifier for the BinaryIdBaseDataType DataType.
        /// </summary>
        public const uint BinaryIdBaseDataType = 9;

        /// <summary>
        /// The identifier for the ConfigurationIdDataType DataType.
        /// </summary>
        public const uint ConfigurationIdDataType = 10;

        /// <summary>
        /// The identifier for the RecipeIdExternalDataType DataType.
        /// </summary>
        public const uint RecipeIdExternalDataType = 11;

        /// <summary>
        /// The identifier for the RecipeIdInternalDataType DataType.
        /// </summary>
        public const uint RecipeIdInternalDataType = 12;

        /// <summary>
        /// The identifier for the ConfigurationDataType DataType.
        /// </summary>
        public const uint ConfigurationDataType = 13;

        /// <summary>
        /// The identifier for the ConfigurationTransferOptions DataType.
        /// </summary>
        public const uint ConfigurationTransferOptions = 14;

        /// <summary>
        /// The identifier for the JobIdDataType DataType.
        /// </summary>
        public const uint JobIdDataType = 15;

        /// <summary>
        /// The identifier for the MeasIdDataType DataType.
        /// </summary>
        public const uint MeasIdDataType = 16;

        /// <summary>
        /// The identifier for the PartIdDataType DataType.
        /// </summary>
        public const uint PartIdDataType = 17;

        /// <summary>
        /// The identifier for the ProcessingTimesDataType DataType.
        /// </summary>
        public const uint ProcessingTimesDataType = 18;

        /// <summary>
        /// The identifier for the ProductDataType DataType.
        /// </summary>
        public const uint ProductDataType = 19;

        /// <summary>
        /// The identifier for the ProductIdDataType DataType.
        /// </summary>
        public const uint ProductIdDataType = 20;

        /// <summary>
        /// The identifier for the RecipeTransferOptions DataType.
        /// </summary>
        public const uint RecipeTransferOptions = 21;

        /// <summary>
        /// The identifier for the ResultDataType DataType.
        /// </summary>
        public const uint ResultDataType = 22;

        /// <summary>
        /// The identifier for the ResultIdDataType DataType.
        /// </summary>
        public const uint ResultIdDataType = 23;

        /// <summary>
        /// The identifier for the ResultTransferOptions DataType.
        /// </summary>
        public const uint ResultTransferOptions = 24;

        /// <summary>
        /// The identifier for the SystemStateDescriptionDataType DataType.
        /// </summary>
        public const uint SystemStateDescriptionDataType = 25;
    }
    #endregion

    #region Method Identifiers
    /// <summary>
    /// A class that declares constants for all Methods in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class Methods
    {
        /// <summary>
        /// The identifier for the ConfigurationManagementType_ActivateConfiguration Method.
        /// </summary>
        public const uint ConfigurationManagementType_ActivateConfiguration = 607;

        /// <summary>
        /// The identifier for the ConfigurationManagementType_AddConfiguration Method.
        /// </summary>
        public const uint ConfigurationManagementType_AddConfiguration = 611;

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ConfigurationTransfer_GenerateFileForRead Method.
        /// </summary>
        public const uint ConfigurationManagementType_ConfigurationTransfer_GenerateFileForRead = 617;

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ConfigurationTransfer_GenerateFileForWrite Method.
        /// </summary>
        public const uint ConfigurationManagementType_ConfigurationTransfer_GenerateFileForWrite = 620;

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ConfigurationTransfer_CloseAndCommit Method.
        /// </summary>
        public const uint ConfigurationManagementType_ConfigurationTransfer_CloseAndCommit = 623;

        /// <summary>
        /// The identifier for the ConfigurationManagementType_GetConfigurationById Method.
        /// </summary>
        public const uint ConfigurationManagementType_GetConfigurationById = 626;

        /// <summary>
        /// The identifier for the ConfigurationManagementType_GetConfigurationList Method.
        /// </summary>
        public const uint ConfigurationManagementType_GetConfigurationList = 629;

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ReleaseConfigurationHandle Method.
        /// </summary>
        public const uint ConfigurationManagementType_ReleaseConfigurationHandle = 632;

        /// <summary>
        /// The identifier for the ConfigurationManagementType_RemoveConfiguration Method.
        /// </summary>
        public const uint ConfigurationManagementType_RemoveConfiguration = 635;

        /// <summary>
        /// The identifier for the ConfigurationTransferType_GenerateFileForRead Method.
        /// </summary>
        public const uint ConfigurationTransferType_GenerateFileForRead = 642;

        /// <summary>
        /// The identifier for the ConfigurationTransferType_GenerateFileForWrite Method.
        /// </summary>
        public const uint ConfigurationTransferType_GenerateFileForWrite = 645;

        /// <summary>
        /// The identifier for the ConfigurationTransferType_TransferState_Placeholder_Reset Method.
        /// </summary>
        public const uint ConfigurationTransferType_TransferState_Placeholder_Reset = 665;

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_Open Method.
        /// </summary>
        public const uint RecipeFolderType_Recipe_Handle_Open = 677;

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_Close Method.
        /// </summary>
        public const uint RecipeFolderType_Recipe_Handle_Close = 680;

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_Read Method.
        /// </summary>
        public const uint RecipeFolderType_Recipe_Handle_Read = 682;

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_Write Method.
        /// </summary>
        public const uint RecipeFolderType_Recipe_Handle_Write = 685;

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_GetPosition Method.
        /// </summary>
        public const uint RecipeFolderType_Recipe_Handle_GetPosition = 687;

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_SetPosition Method.
        /// </summary>
        public const uint RecipeFolderType_Recipe_Handle_SetPosition = 690;

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Prepare Method.
        /// </summary>
        public const uint RecipeFolderType_Recipe_Prepare = 699;

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Unprepare Method.
        /// </summary>
        public const uint RecipeFolderType_Recipe_Unprepare = 704;

        /// <summary>
        /// The identifier for the RecipeType_Handle_Open Method.
        /// </summary>
        public const uint RecipeType_Handle_Open = 714;

        /// <summary>
        /// The identifier for the RecipeType_Handle_Close Method.
        /// </summary>
        public const uint RecipeType_Handle_Close = 717;

        /// <summary>
        /// The identifier for the RecipeType_Handle_Read Method.
        /// </summary>
        public const uint RecipeType_Handle_Read = 719;

        /// <summary>
        /// The identifier for the RecipeType_Handle_Write Method.
        /// </summary>
        public const uint RecipeType_Handle_Write = 722;

        /// <summary>
        /// The identifier for the RecipeType_Handle_GetPosition Method.
        /// </summary>
        public const uint RecipeType_Handle_GetPosition = 724;

        /// <summary>
        /// The identifier for the RecipeType_Handle_SetPosition Method.
        /// </summary>
        public const uint RecipeType_Handle_SetPosition = 727;

        /// <summary>
        /// The identifier for the RecipeType_LinkProduct Method.
        /// </summary>
        public const uint RecipeType_LinkProduct = 733;

        /// <summary>
        /// The identifier for the RecipeType_Prepare Method.
        /// </summary>
        public const uint RecipeType_Prepare = 736;

        /// <summary>
        /// The identifier for the RecipeType_UnlinkProduct Method.
        /// </summary>
        public const uint RecipeType_UnlinkProduct = 738;

        /// <summary>
        /// The identifier for the RecipeType_Unprepare Method.
        /// </summary>
        public const uint RecipeType_Unprepare = 741;

        /// <summary>
        /// The identifier for the RecipeManagementType_AddRecipe Method.
        /// </summary>
        public const uint RecipeManagementType_AddRecipe = 762;

        /// <summary>
        /// The identifier for the RecipeManagementType_GetRecipeListFiltered Method.
        /// </summary>
        public const uint RecipeManagementType_GetRecipeListFiltered = 765;

        /// <summary>
        /// The identifier for the RecipeManagementType_PrepareProduct Method.
        /// </summary>
        public const uint RecipeManagementType_PrepareProduct = 768;

        /// <summary>
        /// The identifier for the RecipeManagementType_PrepareRecipe Method.
        /// </summary>
        public const uint RecipeManagementType_PrepareRecipe = 771;

        /// <summary>
        /// The identifier for the RecipeManagementType_RecipeTransfer_GenerateFileForRead Method.
        /// </summary>
        public const uint RecipeManagementType_RecipeTransfer_GenerateFileForRead = 778;

        /// <summary>
        /// The identifier for the RecipeManagementType_RecipeTransfer_GenerateFileForWrite Method.
        /// </summary>
        public const uint RecipeManagementType_RecipeTransfer_GenerateFileForWrite = 781;

        /// <summary>
        /// The identifier for the RecipeManagementType_RecipeTransfer_CloseAndCommit Method.
        /// </summary>
        public const uint RecipeManagementType_RecipeTransfer_CloseAndCommit = 784;

        /// <summary>
        /// The identifier for the RecipeManagementType_ReleaseRecipeHandle Method.
        /// </summary>
        public const uint RecipeManagementType_ReleaseRecipeHandle = 787;

        /// <summary>
        /// The identifier for the RecipeManagementType_RemoveRecipe Method.
        /// </summary>
        public const uint RecipeManagementType_RemoveRecipe = 790;

        /// <summary>
        /// The identifier for the RecipeManagementType_UnlinkProduct Method.
        /// </summary>
        public const uint RecipeManagementType_UnlinkProduct = 793;

        /// <summary>
        /// The identifier for the RecipeManagementType_UnprepareProduct Method.
        /// </summary>
        public const uint RecipeManagementType_UnprepareProduct = 796;

        /// <summary>
        /// The identifier for the RecipeManagementType_UnprepareRecipe Method.
        /// </summary>
        public const uint RecipeManagementType_UnprepareRecipe = 799;

        /// <summary>
        /// The identifier for the RecipeTransferType_GenerateFileForRead Method.
        /// </summary>
        public const uint RecipeTransferType_GenerateFileForRead = 804;

        /// <summary>
        /// The identifier for the RecipeTransferType_GenerateFileForWrite Method.
        /// </summary>
        public const uint RecipeTransferType_GenerateFileForWrite = 807;

        /// <summary>
        /// The identifier for the RecipeTransferType_TransferState_Placeholder_Reset Method.
        /// </summary>
        public const uint RecipeTransferType_TransferState_Placeholder_Reset = 827;

        /// <summary>
        /// The identifier for the ResultManagementType_GetResultById Method.
        /// </summary>
        public const uint ResultManagementType_GetResultById = 829;

        /// <summary>
        /// The identifier for the ResultManagementType_GetResultComponentsById Method.
        /// </summary>
        public const uint ResultManagementType_GetResultComponentsById = 832;

        /// <summary>
        /// The identifier for the ResultManagementType_GetResultListFiltered Method.
        /// </summary>
        public const uint ResultManagementType_GetResultListFiltered = 835;

        /// <summary>
        /// The identifier for the ResultManagementType_ReleaseResultHandle Method.
        /// </summary>
        public const uint ResultManagementType_ReleaseResultHandle = 838;

        /// <summary>
        /// The identifier for the ResultManagementType_ResultTransfer_GenerateFileForRead Method.
        /// </summary>
        public const uint ResultManagementType_ResultTransfer_GenerateFileForRead = 844;

        /// <summary>
        /// The identifier for the ResultManagementType_ResultTransfer_GenerateFileForWrite Method.
        /// </summary>
        public const uint ResultManagementType_ResultTransfer_GenerateFileForWrite = 847;

        /// <summary>
        /// The identifier for the ResultManagementType_ResultTransfer_CloseAndCommit Method.
        /// </summary>
        public const uint ResultManagementType_ResultTransfer_CloseAndCommit = 850;

        /// <summary>
        /// The identifier for the ResultTransferType_GenerateFileForRead Method.
        /// </summary>
        public const uint ResultTransferType_GenerateFileForRead = 855;

        /// <summary>
        /// The identifier for the ResultTransferType_TransferState_Placeholder_Reset Method.
        /// </summary>
        public const uint ResultTransferType_TransferState_Placeholder_Reset = 878;

        /// <summary>
        /// The identifier for the SafetyStateManagementType_ReportSafetyState Method.
        /// </summary>
        public const uint SafetyStateManagementType_ReportSafetyState = 880;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_Abort Method.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_Abort = 899;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Sync Method.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Sync = 932;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_Sync Method.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedStepModel_Sync = 977;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_Sync Method.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyStepModel_Sync = 1022;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SimulationMode Method.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SimulationMode = 1045;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Sync Method.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Sync = 1078;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_StartContinuous Method.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_StartContinuous = 1093;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_StartSingleJob Method.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_StartSingleJob = 1096;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_Stop Method.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_Stop = 1099;

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_Sync Method.
        /// </summary>
        public const uint VisionStepModelStateMachineType_Sync = 1130;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_Abort Method.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_Abort = 1167;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Sync Method.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Sync = 1200;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Sync Method.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Sync = 1245;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Sync Method.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Sync = 1290;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Sync Method.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Sync = 1346;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_StartContinuous Method.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_StartContinuous = 1361;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_StartSingleJob Method.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_StartSingleJob = 1364;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_Stop Method.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_Stop = 1367;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ConfirmAll Method.
        /// </summary>
        public const uint VisionStateMachineType_ConfirmAll = 1370;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_Sync Method.
        /// </summary>
        public const uint VisionStateMachineType_ErrorStepModel_Sync = 1402;

        /// <summary>
        /// The identifier for the VisionStateMachineType_Halt Method.
        /// </summary>
        public const uint VisionStateMachineType_Halt = 1421;

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_Sync Method.
        /// </summary>
        public const uint VisionStateMachineType_HaltedStepModel_Sync = 1454;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_Sync Method.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalStepModel_Sync = 1509;

        /// <summary>
        /// The identifier for the VisionStateMachineType_Reset Method.
        /// </summary>
        public const uint VisionStateMachineType_Reset = 1532;

        /// <summary>
        /// The identifier for the VisionStateMachineType_SelectModeAutomatic Method.
        /// </summary>
        public const uint VisionStateMachineType_SelectModeAutomatic = 1535;

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ActivateConfiguration Method.
        /// </summary>
        public const uint VisionSystemType_ConfigurationManagement_ActivateConfiguration = 1539;

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ConfigurationTransfer_GenerateFileForRead Method.
        /// </summary>
        public const uint VisionSystemType_ConfigurationManagement_ConfigurationTransfer_GenerateFileForRead = 1549;

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ConfigurationTransfer_GenerateFileForWrite Method.
        /// </summary>
        public const uint VisionSystemType_ConfigurationManagement_ConfigurationTransfer_GenerateFileForWrite = 1552;

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ConfigurationTransfer_CloseAndCommit Method.
        /// </summary>
        public const uint VisionSystemType_ConfigurationManagement_ConfigurationTransfer_CloseAndCommit = 1555;

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_GetConfigurationById Method.
        /// </summary>
        public const uint VisionSystemType_ConfigurationManagement_GetConfigurationById = 1558;

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_GetConfigurationList Method.
        /// </summary>
        public const uint VisionSystemType_ConfigurationManagement_GetConfigurationList = 1561;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_GetRecipeListFiltered Method.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement_GetRecipeListFiltered = 1575;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_PrepareRecipe Method.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement_PrepareRecipe = 1581;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_RecipeTransfer_GenerateFileForRead Method.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement_RecipeTransfer_GenerateFileForRead = 1588;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_RecipeTransfer_GenerateFileForWrite Method.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement_RecipeTransfer_GenerateFileForWrite = 1591;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_RecipeTransfer_CloseAndCommit Method.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement_RecipeTransfer_CloseAndCommit = 1594;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_UnprepareRecipe Method.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement_UnprepareRecipe = 1609;

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_GetResultById Method.
        /// </summary>
        public const uint VisionSystemType_ResultManagement_GetResultById = 1613;

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_GetResultComponentsById Method.
        /// </summary>
        public const uint VisionSystemType_ResultManagement_GetResultComponentsById = 1616;

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_GetResultListFiltered Method.
        /// </summary>
        public const uint VisionSystemType_ResultManagement_GetResultListFiltered = 1619;

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_ResultTransfer_GenerateFileForRead Method.
        /// </summary>
        public const uint VisionSystemType_ResultManagement_ResultTransfer_GenerateFileForRead = 1628;

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_ResultTransfer_GenerateFileForWrite Method.
        /// </summary>
        public const uint VisionSystemType_ResultManagement_ResultTransfer_GenerateFileForWrite = 1631;

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_ResultTransfer_CloseAndCommit Method.
        /// </summary>
        public const uint VisionSystemType_ResultManagement_ResultTransfer_CloseAndCommit = 1634;

        /// <summary>
        /// The identifier for the VisionSystemType_SafetyStateManagement_ReportSafetyState Method.
        /// </summary>
        public const uint VisionSystemType_SafetyStateManagement_ReportSafetyState = 1638;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Abort Method.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Abort = 1672;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Sync Method.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Sync = 1705;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Sync Method.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Sync = 1750;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Sync Method.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Sync = 1795;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Sync Method.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Sync = 1851;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_StartContinuous Method.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_StartContinuous = 1866;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_StartSingleJob Method.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_StartSingleJob = 1869;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Stop Method.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Stop = 1872;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_Sync Method.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorStepModel_Sync = 1907;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_Halt Method.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_Halt = 1926;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_Sync Method.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_HaltedStepModel_Sync = 1959;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_Sync Method.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalStepModel_Sync = 2014;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_Reset Method.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_Reset = 2037;
    }
    #endregion

    #region Object Identifiers
    /// <summary>
    /// A class that declares constants for all Objects in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class Objects
    {
        /// <summary>
        /// The identifier for the ConfigurationManagementType_Configurations Object.
        /// </summary>
        public const uint ConfigurationManagementType_Configurations = 614;

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ConfigurationTransfer Object.
        /// </summary>
        public const uint ConfigurationManagementType_ConfigurationTransfer = 615;

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe Object.
        /// </summary>
        public const uint RecipeFolderType_Recipe = 669;

        /// <summary>
        /// The identifier for the RecipeType_Handle Object.
        /// </summary>
        public const uint RecipeType_Handle = 708;

        /// <summary>
        /// The identifier for the RecipeManagementType_Products Object.
        /// </summary>
        public const uint RecipeManagementType_Products = 774;

        /// <summary>
        /// The identifier for the RecipeManagementType_Recipes Object.
        /// </summary>
        public const uint RecipeManagementType_Recipes = 775;

        /// <summary>
        /// The identifier for the RecipeManagementType_RecipeTransfer Object.
        /// </summary>
        public const uint RecipeManagementType_RecipeTransfer = 776;

        /// <summary>
        /// The identifier for the ResultManagementType_Results Object.
        /// </summary>
        public const uint ResultManagementType_Results = 841;

        /// <summary>
        /// The identifier for the ResultManagementType_ResultTransfer Object.
        /// </summary>
        public const uint ResultManagementType_ResultTransfer = 842;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecution Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecution = 902;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel = 904;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Entry Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Entry = 918;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_EntryToExitAuto Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_EntryToExitAuto = 920;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_EntryToWaitAuto Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_EntryToWaitAuto = 922;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Exit Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Exit = 924;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Step Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Step = 926;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_StepToExitAuto Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_StepToExitAuto = 928;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_StepToWaitAuto Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_StepToWaitAuto = 930;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Wait Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Wait = 935;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_WaitToStep Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_WaitToStep = 937;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_WaitToStepAuto Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_WaitToStepAuto = 939;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionToReadyAbort Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionToReadyAbort = 941;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionToReadyAuto Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionToReadyAuto = 943;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionToReadyStop Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionToReadyStop = 945;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_Initialized Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_Initialized = 947;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedStepModel = 949;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_Entry Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedStepModel_Entry = 963;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_EntryToExitAuto Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedStepModel_EntryToExitAuto = 965;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_EntryToWaitAuto Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedStepModel_EntryToWaitAuto = 967;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_Exit Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedStepModel_Exit = 969;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_Step Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedStepModel_Step = 971;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_StepToExitAuto Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedStepModel_StepToExitAuto = 973;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_StepToWaitAuto Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedStepModel_StepToWaitAuto = 975;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_Wait Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedStepModel_Wait = 980;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_WaitToStep Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedStepModel_WaitToStep = 982;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_WaitToStepAuto Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedStepModel_WaitToStepAuto = 984;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedToReadyAuto Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedToReadyAuto = 986;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedToReadyProduct Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedToReadyProduct = 988;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedToReadyRecipe Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedToReadyRecipe = 990;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_Ready Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_Ready = 992;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyStepModel = 994;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_Entry Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyStepModel_Entry = 1008;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_EntryToExitAuto Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyStepModel_EntryToExitAuto = 1010;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_EntryToWaitAuto Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyStepModel_EntryToWaitAuto = 1012;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_Exit Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyStepModel_Exit = 1014;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_Step Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyStepModel_Step = 1016;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_StepToExitAuto Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyStepModel_StepToExitAuto = 1018;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_StepToWaitAuto Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyStepModel_StepToWaitAuto = 1020;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_Wait Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyStepModel_Wait = 1025;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_WaitToStep Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyStepModel_WaitToStep = 1027;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_WaitToStepAuto Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyStepModel_WaitToStepAuto = 1029;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyToContinuousExecution Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyToContinuousExecution = 1031;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyToContinuousExecutionAuto Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyToContinuousExecutionAuto = 1033;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyToInitializedAuto Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyToInitializedAuto = 1035;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyToInitializedProduct Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyToInitializedProduct = 1037;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyToInitializedRecipe Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyToInitializedRecipe = 1039;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyToSingleExecution Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyToSingleExecution = 1041;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyToSingleExecutionAuto Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyToSingleExecutionAuto = 1043;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecution Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecution = 1048;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionStepModel = 1050;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Entry Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Entry = 1064;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_EntryToExitAuto Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionStepModel_EntryToExitAuto = 1066;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_EntryToWaitAuto Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionStepModel_EntryToWaitAuto = 1068;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Exit Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Exit = 1070;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Step Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Step = 1072;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_StepToExitAuto Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionStepModel_StepToExitAuto = 1074;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_StepToWaitAuto Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionStepModel_StepToWaitAuto = 1076;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Wait Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Wait = 1081;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_WaitToStep Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionStepModel_WaitToStep = 1083;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_WaitToStepAuto Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionStepModel_WaitToStepAuto = 1085;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionToReadyAbort Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionToReadyAbort = 1087;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionToReadyAuto Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionToReadyAuto = 1089;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionToReadyStop Object.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionToReadyStop = 1091;

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_Entry Object.
        /// </summary>
        public const uint VisionStepModelStateMachineType_Entry = 1116;

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_EntryToExitAuto Object.
        /// </summary>
        public const uint VisionStepModelStateMachineType_EntryToExitAuto = 1118;

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_EntryToWaitAuto Object.
        /// </summary>
        public const uint VisionStepModelStateMachineType_EntryToWaitAuto = 1120;

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_Exit Object.
        /// </summary>
        public const uint VisionStepModelStateMachineType_Exit = 1122;

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_Step Object.
        /// </summary>
        public const uint VisionStepModelStateMachineType_Step = 1124;

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_StepToExitAuto Object.
        /// </summary>
        public const uint VisionStepModelStateMachineType_StepToExitAuto = 1126;

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_StepToWaitAuto Object.
        /// </summary>
        public const uint VisionStepModelStateMachineType_StepToWaitAuto = 1128;

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_Wait Object.
        /// </summary>
        public const uint VisionStepModelStateMachineType_Wait = 1133;

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_WaitToStep Object.
        /// </summary>
        public const uint VisionStepModelStateMachineType_WaitToStep = 1135;

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_WaitToStepAuto Object.
        /// </summary>
        public const uint VisionStepModelStateMachineType_WaitToStepAuto = 1137;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine = 1153;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecution Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecution = 1170;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Entry Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Entry = 1186;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToExitAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToExitAuto = 1188;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToWaitAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToWaitAuto = 1190;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Exit Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Exit = 1192;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Step Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Step = 1194;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToExitAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToExitAuto = 1196;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToWaitAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToWaitAuto = 1198;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Wait Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Wait = 1203;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStep Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStep = 1205;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStepAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStepAuto = 1207;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionToReadyAbort Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionToReadyAbort = 1209;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionToReadyAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionToReadyAuto = 1211;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionToReadyStop Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionToReadyStop = 1213;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_Initialized Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_Initialized = 1215;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Entry Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Entry = 1231;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_EntryToExitAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_EntryToExitAuto = 1233;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_EntryToWaitAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_EntryToWaitAuto = 1235;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Exit Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Exit = 1237;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Step Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Step = 1239;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_StepToExitAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_StepToExitAuto = 1241;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_StepToWaitAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_StepToWaitAuto = 1243;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Wait Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Wait = 1248;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_WaitToStep Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_WaitToStep = 1250;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_WaitToStepAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_WaitToStepAuto = 1252;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedToReadyAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedToReadyAuto = 1254;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedToReadyProduct Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedToReadyProduct = 1256;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedToReadyRecipe Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedToReadyRecipe = 1258;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_Ready Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_Ready = 1260;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Entry Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Entry = 1276;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_EntryToExitAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_EntryToExitAuto = 1278;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_EntryToWaitAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_EntryToWaitAuto = 1280;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Exit Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Exit = 1282;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Step Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Step = 1284;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_StepToExitAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_StepToExitAuto = 1286;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_StepToWaitAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_StepToWaitAuto = 1288;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Wait Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Wait = 1293;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_WaitToStep Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_WaitToStep = 1295;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_WaitToStepAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_WaitToStepAuto = 1297;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyToContinuousExecution Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyToContinuousExecution = 1299;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyToContinuousExecutionAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyToContinuousExecutionAuto = 1301;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyToInitializedAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyToInitializedAuto = 1303;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyToInitializedProduct Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyToInitializedProduct = 1305;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyToInitializedRecipe Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyToInitializedRecipe = 1307;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyToSingleExecution Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyToSingleExecution = 1309;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyToSingleExecutionAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyToSingleExecutionAuto = 1311;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecution Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecution = 1316;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Entry Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Entry = 1332;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToExitAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToExitAuto = 1334;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToWaitAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToWaitAuto = 1336;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Exit Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Exit = 1338;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Step Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Step = 1340;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_StepToExitAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_StepToExitAuto = 1342;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_StepToWaitAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_StepToWaitAuto = 1344;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Wait Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Wait = 1349;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStep Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStep = 1351;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStepAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStepAuto = 1353;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionToReadyAbort Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionToReadyAbort = 1355;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionToReadyAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionToReadyAuto = 1357;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionToReadyStop Object.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionToReadyStop = 1359;

        /// <summary>
        /// The identifier for the VisionStateMachineType_Error Object.
        /// </summary>
        public const uint VisionStateMachineType_Error = 1372;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel Object.
        /// </summary>
        public const uint VisionStateMachineType_ErrorStepModel = 1374;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_Entry Object.
        /// </summary>
        public const uint VisionStateMachineType_ErrorStepModel_Entry = 1388;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_EntryToExitAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_ErrorStepModel_EntryToExitAuto = 1390;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_EntryToWaitAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_ErrorStepModel_EntryToWaitAuto = 1392;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_Exit Object.
        /// </summary>
        public const uint VisionStateMachineType_ErrorStepModel_Exit = 1394;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_Step Object.
        /// </summary>
        public const uint VisionStateMachineType_ErrorStepModel_Step = 1396;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_StepToExitAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_ErrorStepModel_StepToExitAuto = 1398;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_StepToWaitAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_ErrorStepModel_StepToWaitAuto = 1400;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_Wait Object.
        /// </summary>
        public const uint VisionStateMachineType_ErrorStepModel_Wait = 1405;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_WaitToStep Object.
        /// </summary>
        public const uint VisionStateMachineType_ErrorStepModel_WaitToStep = 1407;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_WaitToStepAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_ErrorStepModel_WaitToStepAuto = 1409;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorToHalted Object.
        /// </summary>
        public const uint VisionStateMachineType_ErrorToHalted = 1411;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorToHaltedAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_ErrorToHaltedAuto = 1413;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorToOperationalAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_ErrorToOperationalAuto = 1415;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorToPreoperational Object.
        /// </summary>
        public const uint VisionStateMachineType_ErrorToPreoperational = 1417;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorToPreoperationalAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_ErrorToPreoperationalAuto = 1419;

        /// <summary>
        /// The identifier for the VisionStateMachineType_Halted Object.
        /// </summary>
        public const uint VisionStateMachineType_Halted = 1424;

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel Object.
        /// </summary>
        public const uint VisionStateMachineType_HaltedStepModel = 1426;

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_Entry Object.
        /// </summary>
        public const uint VisionStateMachineType_HaltedStepModel_Entry = 1440;

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_EntryToExitAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_HaltedStepModel_EntryToExitAuto = 1442;

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_EntryToWaitAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_HaltedStepModel_EntryToWaitAuto = 1444;

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_Exit Object.
        /// </summary>
        public const uint VisionStateMachineType_HaltedStepModel_Exit = 1446;

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_Step Object.
        /// </summary>
        public const uint VisionStateMachineType_HaltedStepModel_Step = 1448;

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_StepToExitAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_HaltedStepModel_StepToExitAuto = 1450;

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_StepToWaitAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_HaltedStepModel_StepToWaitAuto = 1452;

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_Wait Object.
        /// </summary>
        public const uint VisionStateMachineType_HaltedStepModel_Wait = 1457;

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_WaitToStep Object.
        /// </summary>
        public const uint VisionStateMachineType_HaltedStepModel_WaitToStep = 1459;

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_WaitToStepAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_HaltedStepModel_WaitToStepAuto = 1461;

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedToPreoperational Object.
        /// </summary>
        public const uint VisionStateMachineType_HaltedToPreoperational = 1463;

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedToPreoperationalAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_HaltedToPreoperationalAuto = 1465;

        /// <summary>
        /// The identifier for the VisionStateMachineType_Operational Object.
        /// </summary>
        public const uint VisionStateMachineType_Operational = 1467;

        /// <summary>
        /// The identifier for the VisionStateMachineType_OperationalToErrorAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_OperationalToErrorAuto = 1469;

        /// <summary>
        /// The identifier for the VisionStateMachineType_OperationalToHalted Object.
        /// </summary>
        public const uint VisionStateMachineType_OperationalToHalted = 1471;

        /// <summary>
        /// The identifier for the VisionStateMachineType_OperationalToHaltedAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_OperationalToHaltedAuto = 1473;

        /// <summary>
        /// The identifier for the VisionStateMachineType_OperationalToPreoperational Object.
        /// </summary>
        public const uint VisionStateMachineType_OperationalToPreoperational = 1475;

        /// <summary>
        /// The identifier for the VisionStateMachineType_OperationalToPreoperationalAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_OperationalToPreoperationalAuto = 1477;

        /// <summary>
        /// The identifier for the VisionStateMachineType_Preoperational Object.
        /// </summary>
        public const uint VisionStateMachineType_Preoperational = 1479;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel Object.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalStepModel = 1481;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_Entry Object.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalStepModel_Entry = 1495;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_EntryToExitAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalStepModel_EntryToExitAuto = 1497;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_EntryToWaitAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalStepModel_EntryToWaitAuto = 1499;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_Exit Object.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalStepModel_Exit = 1501;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_Step Object.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalStepModel_Step = 1503;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_StepToExitAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalStepModel_StepToExitAuto = 1505;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_StepToWaitAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalStepModel_StepToWaitAuto = 1507;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_Wait Object.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalStepModel_Wait = 1512;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_WaitToStep Object.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalStepModel_WaitToStep = 1514;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_WaitToStepAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalStepModel_WaitToStepAuto = 1516;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalToErrorAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalToErrorAuto = 1518;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalToHalted Object.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalToHalted = 1520;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalToHaltedAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalToHaltedAuto = 1522;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalToInitialized Object.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalToInitialized = 1524;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalToInitializedAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalToInitializedAuto = 1526;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalToOperational Object.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalToOperational = 1528;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalToOperationalAuto Object.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalToOperationalAuto = 1530;

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement Object.
        /// </summary>
        public const uint VisionSystemType_ConfigurationManagement = 1538;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement Object.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement = 1571;

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement Object.
        /// </summary>
        public const uint VisionSystemType_ResultManagement = 1612;

        /// <summary>
        /// The identifier for the VisionSystemType_SafetyStateManagement Object.
        /// </summary>
        public const uint VisionSystemType_SafetyStateManagement = 1637;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine = 1644;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecution Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecution = 1675;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Entry Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Entry = 1691;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToExitAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToExitAuto = 1693;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToWaitAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToWaitAuto = 1695;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Exit Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Exit = 1697;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Step Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Step = 1699;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToExitAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToExitAuto = 1701;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToWaitAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToWaitAuto = 1703;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Wait Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Wait = 1708;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStep Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStep = 1710;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStepAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStepAuto = 1712;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionToReadyAbort Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionToReadyAbort = 1714;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionToReadyAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionToReadyAuto = 1716;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionToReadyStop Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionToReadyStop = 1718;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Initialized Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Initialized = 1720;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Entry Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Entry = 1736;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_EntryToExitAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_EntryToExitAuto = 1738;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_EntryToWaitAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_EntryToWaitAuto = 1740;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Exit Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Exit = 1742;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Step Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Step = 1744;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_StepToExitAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_StepToExitAuto = 1746;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_StepToWaitAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_StepToWaitAuto = 1748;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Wait Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Wait = 1753;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_WaitToStep Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_WaitToStep = 1755;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_WaitToStepAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_WaitToStepAuto = 1757;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedToReadyAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedToReadyAuto = 1759;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedToReadyProduct Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedToReadyProduct = 1761;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedToReadyRecipe Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedToReadyRecipe = 1763;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Ready Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Ready = 1765;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Entry Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Entry = 1781;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_EntryToExitAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_EntryToExitAuto = 1783;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_EntryToWaitAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_EntryToWaitAuto = 1785;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Exit Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Exit = 1787;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Step Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Step = 1789;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_StepToExitAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_StepToExitAuto = 1791;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_StepToWaitAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_StepToWaitAuto = 1793;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Wait Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Wait = 1798;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_WaitToStep Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_WaitToStep = 1800;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_WaitToStepAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_WaitToStepAuto = 1802;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToContinuousExecution Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToContinuousExecution = 1804;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToContinuousExecutionAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToContinuousExecutionAuto = 1806;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToInitializedAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToInitializedAuto = 1808;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToInitializedProduct Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToInitializedProduct = 1810;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToInitializedRecipe Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToInitializedRecipe = 1812;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToSingleExecution Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToSingleExecution = 1814;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToSingleExecutionAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToSingleExecutionAuto = 1816;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecution Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecution = 1821;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Entry Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Entry = 1837;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToExitAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToExitAuto = 1839;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToWaitAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToWaitAuto = 1841;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Exit Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Exit = 1843;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Step Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Step = 1845;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_StepToExitAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_StepToExitAuto = 1847;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_StepToWaitAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_StepToWaitAuto = 1849;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Wait Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Wait = 1854;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStep Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStep = 1856;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStepAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStepAuto = 1858;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionToReadyAbort Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionToReadyAbort = 1860;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionToReadyAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionToReadyAuto = 1862;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionToReadyStop Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionToReadyStop = 1864;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_Error Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_Error = 1877;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_Entry Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorStepModel_Entry = 1893;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_EntryToExitAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorStepModel_EntryToExitAuto = 1895;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_EntryToWaitAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorStepModel_EntryToWaitAuto = 1897;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_Exit Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorStepModel_Exit = 1899;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_Step Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorStepModel_Step = 1901;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_StepToExitAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorStepModel_StepToExitAuto = 1903;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_StepToWaitAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorStepModel_StepToWaitAuto = 1905;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_Wait Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorStepModel_Wait = 1910;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_WaitToStep Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorStepModel_WaitToStep = 1912;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_WaitToStepAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorStepModel_WaitToStepAuto = 1914;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorToHalted Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorToHalted = 1916;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorToHaltedAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorToHaltedAuto = 1918;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorToOperationalAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorToOperationalAuto = 1920;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorToPreoperational Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorToPreoperational = 1922;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorToPreoperationalAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorToPreoperationalAuto = 1924;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_Halted Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_Halted = 1929;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_Entry Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_HaltedStepModel_Entry = 1945;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_EntryToExitAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_HaltedStepModel_EntryToExitAuto = 1947;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_EntryToWaitAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_HaltedStepModel_EntryToWaitAuto = 1949;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_Exit Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_HaltedStepModel_Exit = 1951;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_Step Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_HaltedStepModel_Step = 1953;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_StepToExitAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_HaltedStepModel_StepToExitAuto = 1955;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_StepToWaitAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_HaltedStepModel_StepToWaitAuto = 1957;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_Wait Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_HaltedStepModel_Wait = 1962;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_WaitToStep Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_HaltedStepModel_WaitToStep = 1964;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_WaitToStepAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_HaltedStepModel_WaitToStepAuto = 1966;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedToPreoperational Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_HaltedToPreoperational = 1968;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedToPreoperationalAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_HaltedToPreoperationalAuto = 1970;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_Operational Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_Operational = 1972;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_OperationalToErrorAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_OperationalToErrorAuto = 1974;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_OperationalToHalted Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_OperationalToHalted = 1976;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_OperationalToHaltedAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_OperationalToHaltedAuto = 1978;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_OperationalToPreoperational Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_OperationalToPreoperational = 1980;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_OperationalToPreoperationalAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_OperationalToPreoperationalAuto = 1982;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_Preoperational Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_Preoperational = 1984;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_Entry Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalStepModel_Entry = 2000;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_EntryToExitAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalStepModel_EntryToExitAuto = 2002;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_EntryToWaitAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalStepModel_EntryToWaitAuto = 2004;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_Exit Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalStepModel_Exit = 2006;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_Step Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalStepModel_Step = 2008;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_StepToExitAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalStepModel_StepToExitAuto = 2010;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_StepToWaitAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalStepModel_StepToWaitAuto = 2012;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_Wait Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalStepModel_Wait = 2017;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_WaitToStep Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalStepModel_WaitToStep = 2019;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_WaitToStepAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalStepModel_WaitToStepAuto = 2021;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalToErrorAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalToErrorAuto = 2023;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalToHalted Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalToHalted = 2025;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalToHaltedAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalToHaltedAuto = 2027;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalToInitialized Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalToInitialized = 2029;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalToInitializedAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalToInitializedAuto = 2031;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalToOperational Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalToOperational = 2033;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalToOperationalAuto Object.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalToOperationalAuto = 2035;

        /// <summary>
        /// The identifier for the BinaryIdBaseDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint BinaryIdBaseDataType_Encoding_DefaultXml = 2042;

        /// <summary>
        /// The identifier for the ConfigurationIdDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ConfigurationIdDataType_Encoding_DefaultXml = 2043;

        /// <summary>
        /// The identifier for the RecipeIdExternalDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint RecipeIdExternalDataType_Encoding_DefaultXml = 2044;

        /// <summary>
        /// The identifier for the RecipeIdInternalDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint RecipeIdInternalDataType_Encoding_DefaultXml = 2045;

        /// <summary>
        /// The identifier for the ConfigurationDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ConfigurationDataType_Encoding_DefaultXml = 2046;

        /// <summary>
        /// The identifier for the ConfigurationTransferOptions_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ConfigurationTransferOptions_Encoding_DefaultXml = 2047;

        /// <summary>
        /// The identifier for the JobIdDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint JobIdDataType_Encoding_DefaultXml = 2048;

        /// <summary>
        /// The identifier for the MeasIdDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint MeasIdDataType_Encoding_DefaultXml = 2049;

        /// <summary>
        /// The identifier for the PartIdDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint PartIdDataType_Encoding_DefaultXml = 2050;

        /// <summary>
        /// The identifier for the ProcessingTimesDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ProcessingTimesDataType_Encoding_DefaultXml = 2051;

        /// <summary>
        /// The identifier for the ProductDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ProductDataType_Encoding_DefaultXml = 2052;

        /// <summary>
        /// The identifier for the ProductIdDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ProductIdDataType_Encoding_DefaultXml = 2053;

        /// <summary>
        /// The identifier for the RecipeTransferOptions_Encoding_DefaultXml Object.
        /// </summary>
        public const uint RecipeTransferOptions_Encoding_DefaultXml = 2054;

        /// <summary>
        /// The identifier for the ResultDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ResultDataType_Encoding_DefaultXml = 2055;

        /// <summary>
        /// The identifier for the ResultIdDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ResultIdDataType_Encoding_DefaultXml = 2056;

        /// <summary>
        /// The identifier for the ResultTransferOptions_Encoding_DefaultXml Object.
        /// </summary>
        public const uint ResultTransferOptions_Encoding_DefaultXml = 2057;

        /// <summary>
        /// The identifier for the SystemStateDescriptionDataType_Encoding_DefaultXml Object.
        /// </summary>
        public const uint SystemStateDescriptionDataType_Encoding_DefaultXml = 2058;

        /// <summary>
        /// The identifier for the BinaryIdBaseDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint BinaryIdBaseDataType_Encoding_DefaultBinary = 2113;

        /// <summary>
        /// The identifier for the ConfigurationIdDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ConfigurationIdDataType_Encoding_DefaultBinary = 2114;

        /// <summary>
        /// The identifier for the RecipeIdExternalDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint RecipeIdExternalDataType_Encoding_DefaultBinary = 2115;

        /// <summary>
        /// The identifier for the RecipeIdInternalDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint RecipeIdInternalDataType_Encoding_DefaultBinary = 2116;

        /// <summary>
        /// The identifier for the ConfigurationDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ConfigurationDataType_Encoding_DefaultBinary = 2117;

        /// <summary>
        /// The identifier for the ConfigurationTransferOptions_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ConfigurationTransferOptions_Encoding_DefaultBinary = 2118;

        /// <summary>
        /// The identifier for the JobIdDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint JobIdDataType_Encoding_DefaultBinary = 2119;

        /// <summary>
        /// The identifier for the MeasIdDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint MeasIdDataType_Encoding_DefaultBinary = 2120;

        /// <summary>
        /// The identifier for the PartIdDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint PartIdDataType_Encoding_DefaultBinary = 2121;

        /// <summary>
        /// The identifier for the ProcessingTimesDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ProcessingTimesDataType_Encoding_DefaultBinary = 2122;

        /// <summary>
        /// The identifier for the ProductDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ProductDataType_Encoding_DefaultBinary = 2123;

        /// <summary>
        /// The identifier for the ProductIdDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ProductIdDataType_Encoding_DefaultBinary = 2124;

        /// <summary>
        /// The identifier for the RecipeTransferOptions_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint RecipeTransferOptions_Encoding_DefaultBinary = 2125;

        /// <summary>
        /// The identifier for the ResultDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ResultDataType_Encoding_DefaultBinary = 2126;

        /// <summary>
        /// The identifier for the ResultIdDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ResultIdDataType_Encoding_DefaultBinary = 2127;

        /// <summary>
        /// The identifier for the ResultTransferOptions_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint ResultTransferOptions_Encoding_DefaultBinary = 2128;

        /// <summary>
        /// The identifier for the SystemStateDescriptionDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public const uint SystemStateDescriptionDataType_Encoding_DefaultBinary = 2129;
    }
    #endregion

    #region ObjectType Identifiers
    /// <summary>
    /// A class that declares constants for all ObjectTypes in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class ObjectTypes
    {
        /// <summary>
        /// The identifier for the AcquisitionDoneEventType ObjectType.
        /// </summary>
        public const uint AcquisitionDoneEventType = 45;

        /// <summary>
        /// The identifier for the VisionConditionType ObjectType.
        /// </summary>
        public const uint VisionConditionType = 56;

        /// <summary>
        /// The identifier for the VisionErrorConditionType ObjectType.
        /// </summary>
        public const uint VisionErrorConditionType = 133;

        /// <summary>
        /// The identifier for the VisionPersistentErrorConditionType ObjectType.
        /// </summary>
        public const uint VisionPersistentErrorConditionType = 210;

        /// <summary>
        /// The identifier for the VisionWarningConditionType ObjectType.
        /// </summary>
        public const uint VisionWarningConditionType = 287;

        /// <summary>
        /// The identifier for the EnterStepSequenceEventType ObjectType.
        /// </summary>
        public const uint EnterStepSequenceEventType = 364;

        /// <summary>
        /// The identifier for the JobStartedEventType ObjectType.
        /// </summary>
        public const uint JobStartedEventType = 375;

        /// <summary>
        /// The identifier for the LeaveStepSequenceEventType ObjectType.
        /// </summary>
        public const uint LeaveStepSequenceEventType = 386;

        /// <summary>
        /// The identifier for the NextStepEventType ObjectType.
        /// </summary>
        public const uint NextStepEventType = 396;

        /// <summary>
        /// The identifier for the ReadyEventType ObjectType.
        /// </summary>
        public const uint ReadyEventType = 407;

        /// <summary>
        /// The identifier for the RecipePreparedEventType ObjectType.
        /// </summary>
        public const uint RecipePreparedEventType = 418;

        /// <summary>
        /// The identifier for the ResultReadyEventType ObjectType.
        /// </summary>
        public const uint ResultReadyEventType = 431;

        /// <summary>
        /// The identifier for the ErrorEventType ObjectType.
        /// </summary>
        public const uint ErrorEventType = 456;

        /// <summary>
        /// The identifier for the ErrorResolvedEventType ObjectType.
        /// </summary>
        public const uint ErrorResolvedEventType = 482;

        /// <summary>
        /// The identifier for the StateChangedEventType ObjectType.
        /// </summary>
        public const uint StateChangedEventType = 508;

        /// <summary>
        /// The identifier for the VisionEventType ObjectType.
        /// </summary>
        public const uint VisionEventType = 534;

        /// <summary>
        /// The identifier for the VisionDiagnosticInfoEventType ObjectType.
        /// </summary>
        public const uint VisionDiagnosticInfoEventType = 554;

        /// <summary>
        /// The identifier for the VisionInformationEventType ObjectType.
        /// </summary>
        public const uint VisionInformationEventType = 574;

        /// <summary>
        /// The identifier for the VisionSafetyEventType ObjectType.
        /// </summary>
        public const uint VisionSafetyEventType = 594;

        /// <summary>
        /// The identifier for the ConfigurationManagementType ObjectType.
        /// </summary>
        public const uint ConfigurationManagementType = 606;

        /// <summary>
        /// The identifier for the ConfigurationFolderType ObjectType.
        /// </summary>
        public const uint ConfigurationFolderType = 638;

        /// <summary>
        /// The identifier for the ConfigurationTransferType ObjectType.
        /// </summary>
        public const uint ConfigurationTransferType = 640;

        /// <summary>
        /// The identifier for the ProductFolderType ObjectType.
        /// </summary>
        public const uint ProductFolderType = 666;

        /// <summary>
        /// The identifier for the RecipeFolderType ObjectType.
        /// </summary>
        public const uint RecipeFolderType = 668;

        /// <summary>
        /// The identifier for the RecipeType ObjectType.
        /// </summary>
        public const uint RecipeType = 706;

        /// <summary>
        /// The identifier for the ResultFolderType ObjectType.
        /// </summary>
        public const uint ResultFolderType = 743;

        /// <summary>
        /// The identifier for the RecipeManagementType ObjectType.
        /// </summary>
        public const uint RecipeManagementType = 761;

        /// <summary>
        /// The identifier for the RecipeTransferType ObjectType.
        /// </summary>
        public const uint RecipeTransferType = 802;

        /// <summary>
        /// The identifier for the ResultManagementType ObjectType.
        /// </summary>
        public const uint ResultManagementType = 828;

        /// <summary>
        /// The identifier for the ResultTransferType ObjectType.
        /// </summary>
        public const uint ResultTransferType = 853;

        /// <summary>
        /// The identifier for the SafetyStateManagementType ObjectType.
        /// </summary>
        public const uint SafetyStateManagementType = 879;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType ObjectType.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType = 885;

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType ObjectType.
        /// </summary>
        public const uint VisionStepModelStateMachineType = 1102;

        /// <summary>
        /// The identifier for the VisionStateMachineType ObjectType.
        /// </summary>
        public const uint VisionStateMachineType = 1139;

        /// <summary>
        /// The identifier for the VisionSystemType ObjectType.
        /// </summary>
        public const uint VisionSystemType = 1537;
    }
    #endregion

    #region ReferenceType Identifiers
    /// <summary>
    /// A class that declares constants for all ReferenceTypes in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class ReferenceTypes
    {
        /// <summary>
        /// The identifier for the FromTransition ReferenceType.
        /// </summary>
        public const uint FromTransition = 26;

        /// <summary>
        /// The identifier for the ToTransition ReferenceType.
        /// </summary>
        public const uint ToTransition = 27;
    }
    #endregion

    #region Variable Identifiers
    /// <summary>
    /// A class that declares constants for all Variables in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class Variables
    {
        /// <summary>
        /// The identifier for the SystemStateDataType_EnumValues Variable.
        /// </summary>
        public const uint SystemStateDataType_EnumValues = 2;

        /// <summary>
        /// The identifier for the TriStateBooleanDataType_EnumValues Variable.
        /// </summary>
        public const uint TriStateBooleanDataType_EnumValues = 4;

        /// <summary>
        /// The identifier for the TriStateBooleanDataType_EnumStrings Variable.
        /// </summary>
        public const uint TriStateBooleanDataType_EnumStrings = 5;

        /// <summary>
        /// The identifier for the ResultType_CreationTime Variable.
        /// </summary>
        public const uint ResultType_CreationTime = 29;

        /// <summary>
        /// The identifier for the ResultType_ExternalConfigurationId Variable.
        /// </summary>
        public const uint ResultType_ExternalConfigurationId = 30;

        /// <summary>
        /// The identifier for the ResultType_ExternalRecipeId Variable.
        /// </summary>
        public const uint ResultType_ExternalRecipeId = 31;

        /// <summary>
        /// The identifier for the ResultType_HasTransferableDataOnFile Variable.
        /// </summary>
        public const uint ResultType_HasTransferableDataOnFile = 32;

        /// <summary>
        /// The identifier for the ResultType_InternalConfigurationId Variable.
        /// </summary>
        public const uint ResultType_InternalConfigurationId = 33;

        /// <summary>
        /// The identifier for the ResultType_InternalRecipeId Variable.
        /// </summary>
        public const uint ResultType_InternalRecipeId = 34;

        /// <summary>
        /// The identifier for the ResultType_IsPartial Variable.
        /// </summary>
        public const uint ResultType_IsPartial = 35;

        /// <summary>
        /// The identifier for the ResultType_IsSimulated Variable.
        /// </summary>
        public const uint ResultType_IsSimulated = 36;

        /// <summary>
        /// The identifier for the ResultType_JobId Variable.
        /// </summary>
        public const uint ResultType_JobId = 37;

        /// <summary>
        /// The identifier for the ResultType_MeasId Variable.
        /// </summary>
        public const uint ResultType_MeasId = 38;

        /// <summary>
        /// The identifier for the ResultType_PartId Variable.
        /// </summary>
        public const uint ResultType_PartId = 39;

        /// <summary>
        /// The identifier for the ResultType_ProcessingTimes Variable.
        /// </summary>
        public const uint ResultType_ProcessingTimes = 40;

        /// <summary>
        /// The identifier for the ResultType_ProductId Variable.
        /// </summary>
        public const uint ResultType_ProductId = 41;

        /// <summary>
        /// The identifier for the ResultType_ResultContent Variable.
        /// </summary>
        public const uint ResultType_ResultContent = 42;

        /// <summary>
        /// The identifier for the ResultType_ResultId Variable.
        /// </summary>
        public const uint ResultType_ResultId = 43;

        /// <summary>
        /// The identifier for the ResultType_ResultState Variable.
        /// </summary>
        public const uint ResultType_ResultState = 44;

        /// <summary>
        /// The identifier for the AcquisitionDoneEventType_JobId Variable.
        /// </summary>
        public const uint AcquisitionDoneEventType_JobId = 55;

        /// <summary>
        /// The identifier for the VisionConditionType_EnabledState_Id Variable.
        /// </summary>
        public const uint VisionConditionType_EnabledState_Id = 74;

        /// <summary>
        /// The identifier for the VisionConditionType_Quality_SourceTimestamp Variable.
        /// </summary>
        public const uint VisionConditionType_Quality_SourceTimestamp = 83;

        /// <summary>
        /// The identifier for the VisionConditionType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public const uint VisionConditionType_LastSeverity_SourceTimestamp = 85;

        /// <summary>
        /// The identifier for the VisionConditionType_Comment_SourceTimestamp Variable.
        /// </summary>
        public const uint VisionConditionType_Comment_SourceTimestamp = 87;

        /// <summary>
        /// The identifier for the VisionConditionType_AddComment_InputArguments Variable.
        /// </summary>
        public const uint VisionConditionType_AddComment_InputArguments = 92;

        /// <summary>
        /// The identifier for the VisionConditionType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public const uint VisionConditionType_ConditionRefresh_InputArguments = 94;

        /// <summary>
        /// The identifier for the VisionConditionType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public const uint VisionConditionType_ConditionRefresh2_InputArguments = 96;

        /// <summary>
        /// The identifier for the VisionConditionType_AckedState_Id Variable.
        /// </summary>
        public const uint VisionConditionType_AckedState_Id = 98;

        /// <summary>
        /// The identifier for the VisionConditionType_ConfirmedState_Id Variable.
        /// </summary>
        public const uint VisionConditionType_ConfirmedState_Id = 107;

        /// <summary>
        /// The identifier for the VisionConditionType_Acknowledge_InputArguments Variable.
        /// </summary>
        public const uint VisionConditionType_Acknowledge_InputArguments = 116;

        /// <summary>
        /// The identifier for the VisionConditionType_Confirm_InputArguments Variable.
        /// </summary>
        public const uint VisionConditionType_Confirm_InputArguments = 118;

        /// <summary>
        /// The identifier for the VisionConditionType_BlockReaction Variable.
        /// </summary>
        public const uint VisionConditionType_BlockReaction = 119;

        /// <summary>
        /// The identifier for the VisionConditionType_CausePath Variable.
        /// </summary>
        public const uint VisionConditionType_CausePath = 120;

        /// <summary>
        /// The identifier for the VisionConditionType_ErrorCode Variable.
        /// </summary>
        public const uint VisionConditionType_ErrorCode = 121;

        /// <summary>
        /// The identifier for the VisionConditionType_ErrorString Variable.
        /// </summary>
        public const uint VisionConditionType_ErrorString = 122;

        /// <summary>
        /// The identifier for the VisionConditionType_ExternalConfigurationId Variable.
        /// </summary>
        public const uint VisionConditionType_ExternalConfigurationId = 123;

        /// <summary>
        /// The identifier for the VisionConditionType_ExternalRecipeId Variable.
        /// </summary>
        public const uint VisionConditionType_ExternalRecipeId = 124;

        /// <summary>
        /// The identifier for the VisionConditionType_InternalConfigurationId Variable.
        /// </summary>
        public const uint VisionConditionType_InternalConfigurationId = 125;

        /// <summary>
        /// The identifier for the VisionConditionType_InternalRecipeId Variable.
        /// </summary>
        public const uint VisionConditionType_InternalRecipeId = 126;

        /// <summary>
        /// The identifier for the VisionConditionType_JobId Variable.
        /// </summary>
        public const uint VisionConditionType_JobId = 127;

        /// <summary>
        /// The identifier for the VisionConditionType_MeasId Variable.
        /// </summary>
        public const uint VisionConditionType_MeasId = 128;

        /// <summary>
        /// The identifier for the VisionConditionType_PartId Variable.
        /// </summary>
        public const uint VisionConditionType_PartId = 129;

        /// <summary>
        /// The identifier for the VisionConditionType_ProductId Variable.
        /// </summary>
        public const uint VisionConditionType_ProductId = 130;

        /// <summary>
        /// The identifier for the VisionConditionType_ResultId Variable.
        /// </summary>
        public const uint VisionConditionType_ResultId = 131;

        /// <summary>
        /// The identifier for the VisionConditionType_StopReaction Variable.
        /// </summary>
        public const uint VisionConditionType_StopReaction = 132;

        /// <summary>
        /// The identifier for the VisionErrorConditionType_EnabledState_Id Variable.
        /// </summary>
        public const uint VisionErrorConditionType_EnabledState_Id = 151;

        /// <summary>
        /// The identifier for the VisionErrorConditionType_Quality_SourceTimestamp Variable.
        /// </summary>
        public const uint VisionErrorConditionType_Quality_SourceTimestamp = 160;

        /// <summary>
        /// The identifier for the VisionErrorConditionType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public const uint VisionErrorConditionType_LastSeverity_SourceTimestamp = 162;

        /// <summary>
        /// The identifier for the VisionErrorConditionType_Comment_SourceTimestamp Variable.
        /// </summary>
        public const uint VisionErrorConditionType_Comment_SourceTimestamp = 164;

        /// <summary>
        /// The identifier for the VisionErrorConditionType_AddComment_InputArguments Variable.
        /// </summary>
        public const uint VisionErrorConditionType_AddComment_InputArguments = 169;

        /// <summary>
        /// The identifier for the VisionErrorConditionType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public const uint VisionErrorConditionType_ConditionRefresh_InputArguments = 171;

        /// <summary>
        /// The identifier for the VisionErrorConditionType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public const uint VisionErrorConditionType_ConditionRefresh2_InputArguments = 173;

        /// <summary>
        /// The identifier for the VisionErrorConditionType_AckedState_Id Variable.
        /// </summary>
        public const uint VisionErrorConditionType_AckedState_Id = 175;

        /// <summary>
        /// The identifier for the VisionErrorConditionType_ConfirmedState_Id Variable.
        /// </summary>
        public const uint VisionErrorConditionType_ConfirmedState_Id = 184;

        /// <summary>
        /// The identifier for the VisionErrorConditionType_Acknowledge_InputArguments Variable.
        /// </summary>
        public const uint VisionErrorConditionType_Acknowledge_InputArguments = 193;

        /// <summary>
        /// The identifier for the VisionErrorConditionType_Confirm_InputArguments Variable.
        /// </summary>
        public const uint VisionErrorConditionType_Confirm_InputArguments = 195;

        /// <summary>
        /// The identifier for the VisionPersistentErrorConditionType_EnabledState_Id Variable.
        /// </summary>
        public const uint VisionPersistentErrorConditionType_EnabledState_Id = 228;

        /// <summary>
        /// The identifier for the VisionPersistentErrorConditionType_Quality_SourceTimestamp Variable.
        /// </summary>
        public const uint VisionPersistentErrorConditionType_Quality_SourceTimestamp = 237;

        /// <summary>
        /// The identifier for the VisionPersistentErrorConditionType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public const uint VisionPersistentErrorConditionType_LastSeverity_SourceTimestamp = 239;

        /// <summary>
        /// The identifier for the VisionPersistentErrorConditionType_Comment_SourceTimestamp Variable.
        /// </summary>
        public const uint VisionPersistentErrorConditionType_Comment_SourceTimestamp = 241;

        /// <summary>
        /// The identifier for the VisionPersistentErrorConditionType_AddComment_InputArguments Variable.
        /// </summary>
        public const uint VisionPersistentErrorConditionType_AddComment_InputArguments = 246;

        /// <summary>
        /// The identifier for the VisionPersistentErrorConditionType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public const uint VisionPersistentErrorConditionType_ConditionRefresh_InputArguments = 248;

        /// <summary>
        /// The identifier for the VisionPersistentErrorConditionType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public const uint VisionPersistentErrorConditionType_ConditionRefresh2_InputArguments = 250;

        /// <summary>
        /// The identifier for the VisionPersistentErrorConditionType_AckedState_Id Variable.
        /// </summary>
        public const uint VisionPersistentErrorConditionType_AckedState_Id = 252;

        /// <summary>
        /// The identifier for the VisionPersistentErrorConditionType_ConfirmedState_Id Variable.
        /// </summary>
        public const uint VisionPersistentErrorConditionType_ConfirmedState_Id = 261;

        /// <summary>
        /// The identifier for the VisionPersistentErrorConditionType_Acknowledge_InputArguments Variable.
        /// </summary>
        public const uint VisionPersistentErrorConditionType_Acknowledge_InputArguments = 270;

        /// <summary>
        /// The identifier for the VisionPersistentErrorConditionType_Confirm_InputArguments Variable.
        /// </summary>
        public const uint VisionPersistentErrorConditionType_Confirm_InputArguments = 272;

        /// <summary>
        /// The identifier for the VisionWarningConditionType_EnabledState_Id Variable.
        /// </summary>
        public const uint VisionWarningConditionType_EnabledState_Id = 305;

        /// <summary>
        /// The identifier for the VisionWarningConditionType_Quality_SourceTimestamp Variable.
        /// </summary>
        public const uint VisionWarningConditionType_Quality_SourceTimestamp = 314;

        /// <summary>
        /// The identifier for the VisionWarningConditionType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public const uint VisionWarningConditionType_LastSeverity_SourceTimestamp = 316;

        /// <summary>
        /// The identifier for the VisionWarningConditionType_Comment_SourceTimestamp Variable.
        /// </summary>
        public const uint VisionWarningConditionType_Comment_SourceTimestamp = 318;

        /// <summary>
        /// The identifier for the VisionWarningConditionType_AddComment_InputArguments Variable.
        /// </summary>
        public const uint VisionWarningConditionType_AddComment_InputArguments = 323;

        /// <summary>
        /// The identifier for the VisionWarningConditionType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public const uint VisionWarningConditionType_ConditionRefresh_InputArguments = 325;

        /// <summary>
        /// The identifier for the VisionWarningConditionType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public const uint VisionWarningConditionType_ConditionRefresh2_InputArguments = 327;

        /// <summary>
        /// The identifier for the VisionWarningConditionType_AckedState_Id Variable.
        /// </summary>
        public const uint VisionWarningConditionType_AckedState_Id = 329;

        /// <summary>
        /// The identifier for the VisionWarningConditionType_ConfirmedState_Id Variable.
        /// </summary>
        public const uint VisionWarningConditionType_ConfirmedState_Id = 338;

        /// <summary>
        /// The identifier for the VisionWarningConditionType_Acknowledge_InputArguments Variable.
        /// </summary>
        public const uint VisionWarningConditionType_Acknowledge_InputArguments = 347;

        /// <summary>
        /// The identifier for the VisionWarningConditionType_Confirm_InputArguments Variable.
        /// </summary>
        public const uint VisionWarningConditionType_Confirm_InputArguments = 349;

        /// <summary>
        /// The identifier for the EnterStepSequenceEventType_Steps Variable.
        /// </summary>
        public const uint EnterStepSequenceEventType_Steps = 374;

        /// <summary>
        /// The identifier for the JobStartedEventType_JobId Variable.
        /// </summary>
        public const uint JobStartedEventType_JobId = 385;

        /// <summary>
        /// The identifier for the NextStepEventType_Step Variable.
        /// </summary>
        public const uint NextStepEventType_Step = 406;

        /// <summary>
        /// The identifier for the ReadyEventType_JobId Variable.
        /// </summary>
        public const uint ReadyEventType_JobId = 417;

        /// <summary>
        /// The identifier for the RecipePreparedEventType_ExternalId Variable.
        /// </summary>
        public const uint RecipePreparedEventType_ExternalId = 428;

        /// <summary>
        /// The identifier for the RecipePreparedEventType_InternalId Variable.
        /// </summary>
        public const uint RecipePreparedEventType_InternalId = 429;

        /// <summary>
        /// The identifier for the RecipePreparedEventType_ProductId Variable.
        /// </summary>
        public const uint RecipePreparedEventType_ProductId = 430;

        /// <summary>
        /// The identifier for the ResultReadyEventType_CreationTime Variable.
        /// </summary>
        public const uint ResultReadyEventType_CreationTime = 441;

        /// <summary>
        /// The identifier for the ResultReadyEventType_ExternalConfigurationId Variable.
        /// </summary>
        public const uint ResultReadyEventType_ExternalConfigurationId = 442;

        /// <summary>
        /// The identifier for the ResultReadyEventType_ExternalRecipeId Variable.
        /// </summary>
        public const uint ResultReadyEventType_ExternalRecipeId = 443;

        /// <summary>
        /// The identifier for the ResultReadyEventType_InternalConfigurationId Variable.
        /// </summary>
        public const uint ResultReadyEventType_InternalConfigurationId = 444;

        /// <summary>
        /// The identifier for the ResultReadyEventType_InternalRecipeId Variable.
        /// </summary>
        public const uint ResultReadyEventType_InternalRecipeId = 445;

        /// <summary>
        /// The identifier for the ResultReadyEventType_IsPartial Variable.
        /// </summary>
        public const uint ResultReadyEventType_IsPartial = 446;

        /// <summary>
        /// The identifier for the ResultReadyEventType_IsSimulated Variable.
        /// </summary>
        public const uint ResultReadyEventType_IsSimulated = 447;

        /// <summary>
        /// The identifier for the ResultReadyEventType_JobId Variable.
        /// </summary>
        public const uint ResultReadyEventType_JobId = 448;

        /// <summary>
        /// The identifier for the ResultReadyEventType_MeasId Variable.
        /// </summary>
        public const uint ResultReadyEventType_MeasId = 449;

        /// <summary>
        /// The identifier for the ResultReadyEventType_PartId Variable.
        /// </summary>
        public const uint ResultReadyEventType_PartId = 450;

        /// <summary>
        /// The identifier for the ResultReadyEventType_ProcessingTimes Variable.
        /// </summary>
        public const uint ResultReadyEventType_ProcessingTimes = 451;

        /// <summary>
        /// The identifier for the ResultReadyEventType_ProductId Variable.
        /// </summary>
        public const uint ResultReadyEventType_ProductId = 452;

        /// <summary>
        /// The identifier for the ResultReadyEventType_ResultContent Variable.
        /// </summary>
        public const uint ResultReadyEventType_ResultContent = 453;

        /// <summary>
        /// The identifier for the ResultReadyEventType_ResultId Variable.
        /// </summary>
        public const uint ResultReadyEventType_ResultId = 454;

        /// <summary>
        /// The identifier for the ResultReadyEventType_ResultState Variable.
        /// </summary>
        public const uint ResultReadyEventType_ResultState = 455;

        /// <summary>
        /// The identifier for the ErrorEventType_Transition_Id Variable.
        /// </summary>
        public const uint ErrorEventType_Transition_Id = 467;

        /// <summary>
        /// The identifier for the ErrorEventType_FromState_Id Variable.
        /// </summary>
        public const uint ErrorEventType_FromState_Id = 473;

        /// <summary>
        /// The identifier for the ErrorEventType_ToState_Id Variable.
        /// </summary>
        public const uint ErrorEventType_ToState_Id = 478;

        /// <summary>
        /// The identifier for the ErrorResolvedEventType_Transition_Id Variable.
        /// </summary>
        public const uint ErrorResolvedEventType_Transition_Id = 493;

        /// <summary>
        /// The identifier for the ErrorResolvedEventType_FromState_Id Variable.
        /// </summary>
        public const uint ErrorResolvedEventType_FromState_Id = 499;

        /// <summary>
        /// The identifier for the ErrorResolvedEventType_ToState_Id Variable.
        /// </summary>
        public const uint ErrorResolvedEventType_ToState_Id = 504;

        /// <summary>
        /// The identifier for the StateChangedEventType_Transition_Id Variable.
        /// </summary>
        public const uint StateChangedEventType_Transition_Id = 519;

        /// <summary>
        /// The identifier for the StateChangedEventType_FromState_Id Variable.
        /// </summary>
        public const uint StateChangedEventType_FromState_Id = 525;

        /// <summary>
        /// The identifier for the StateChangedEventType_ToState_Id Variable.
        /// </summary>
        public const uint StateChangedEventType_ToState_Id = 530;

        /// <summary>
        /// The identifier for the VisionEventType_CausePath Variable.
        /// </summary>
        public const uint VisionEventType_CausePath = 544;

        /// <summary>
        /// The identifier for the VisionEventType_ExternalConfigurationId Variable.
        /// </summary>
        public const uint VisionEventType_ExternalConfigurationId = 545;

        /// <summary>
        /// The identifier for the VisionEventType_ExternalRecipeId Variable.
        /// </summary>
        public const uint VisionEventType_ExternalRecipeId = 546;

        /// <summary>
        /// The identifier for the VisionEventType_InternalConfigurationId Variable.
        /// </summary>
        public const uint VisionEventType_InternalConfigurationId = 547;

        /// <summary>
        /// The identifier for the VisionEventType_InternalRecipeId Variable.
        /// </summary>
        public const uint VisionEventType_InternalRecipeId = 548;

        /// <summary>
        /// The identifier for the VisionEventType_JobId Variable.
        /// </summary>
        public const uint VisionEventType_JobId = 549;

        /// <summary>
        /// The identifier for the VisionEventType_MeasId Variable.
        /// </summary>
        public const uint VisionEventType_MeasId = 550;

        /// <summary>
        /// The identifier for the VisionEventType_PartId Variable.
        /// </summary>
        public const uint VisionEventType_PartId = 551;

        /// <summary>
        /// The identifier for the VisionEventType_ProductId Variable.
        /// </summary>
        public const uint VisionEventType_ProductId = 552;

        /// <summary>
        /// The identifier for the VisionEventType_ResultId Variable.
        /// </summary>
        public const uint VisionEventType_ResultId = 553;

        /// <summary>
        /// The identifier for the VisionSafetyEventType_VisionSafetyInformation Variable.
        /// </summary>
        public const uint VisionSafetyEventType_VisionSafetyInformation = 604;

        /// <summary>
        /// The identifier for the VisionSafetyEventType_VisionSafetyTriggered Variable.
        /// </summary>
        public const uint VisionSafetyEventType_VisionSafetyTriggered = 605;

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ActivateConfiguration_InputArguments Variable.
        /// </summary>
        public const uint ConfigurationManagementType_ActivateConfiguration_InputArguments = 608;

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ActivateConfiguration_OutputArguments Variable.
        /// </summary>
        public const uint ConfigurationManagementType_ActivateConfiguration_OutputArguments = 609;

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ActiveConfiguration Variable.
        /// </summary>
        public const uint ConfigurationManagementType_ActiveConfiguration = 610;

        /// <summary>
        /// The identifier for the ConfigurationManagementType_AddConfiguration_InputArguments Variable.
        /// </summary>
        public const uint ConfigurationManagementType_AddConfiguration_InputArguments = 612;

        /// <summary>
        /// The identifier for the ConfigurationManagementType_AddConfiguration_OutputArguments Variable.
        /// </summary>
        public const uint ConfigurationManagementType_AddConfiguration_OutputArguments = 613;

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ConfigurationTransfer_ClientProcessingTimeout Variable.
        /// </summary>
        public const uint ConfigurationManagementType_ConfigurationTransfer_ClientProcessingTimeout = 616;

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ConfigurationTransfer_GenerateFileForRead_InputArguments Variable.
        /// </summary>
        public const uint ConfigurationManagementType_ConfigurationTransfer_GenerateFileForRead_InputArguments = 618;

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ConfigurationTransfer_GenerateFileForRead_OutputArguments Variable.
        /// </summary>
        public const uint ConfigurationManagementType_ConfigurationTransfer_GenerateFileForRead_OutputArguments = 619;

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ConfigurationTransfer_GenerateFileForWrite_InputArguments Variable.
        /// </summary>
        public const uint ConfigurationManagementType_ConfigurationTransfer_GenerateFileForWrite_InputArguments = 621;

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ConfigurationTransfer_GenerateFileForWrite_OutputArguments Variable.
        /// </summary>
        public const uint ConfigurationManagementType_ConfigurationTransfer_GenerateFileForWrite_OutputArguments = 622;

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ConfigurationTransfer_CloseAndCommit_InputArguments Variable.
        /// </summary>
        public const uint ConfigurationManagementType_ConfigurationTransfer_CloseAndCommit_InputArguments = 624;

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ConfigurationTransfer_CloseAndCommit_OutputArguments Variable.
        /// </summary>
        public const uint ConfigurationManagementType_ConfigurationTransfer_CloseAndCommit_OutputArguments = 625;

        /// <summary>
        /// The identifier for the ConfigurationManagementType_GetConfigurationById_InputArguments Variable.
        /// </summary>
        public const uint ConfigurationManagementType_GetConfigurationById_InputArguments = 627;

        /// <summary>
        /// The identifier for the ConfigurationManagementType_GetConfigurationById_OutputArguments Variable.
        /// </summary>
        public const uint ConfigurationManagementType_GetConfigurationById_OutputArguments = 628;

        /// <summary>
        /// The identifier for the ConfigurationManagementType_GetConfigurationList_InputArguments Variable.
        /// </summary>
        public const uint ConfigurationManagementType_GetConfigurationList_InputArguments = 630;

        /// <summary>
        /// The identifier for the ConfigurationManagementType_GetConfigurationList_OutputArguments Variable.
        /// </summary>
        public const uint ConfigurationManagementType_GetConfigurationList_OutputArguments = 631;

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ReleaseConfigurationHandle_InputArguments Variable.
        /// </summary>
        public const uint ConfigurationManagementType_ReleaseConfigurationHandle_InputArguments = 633;

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ReleaseConfigurationHandle_OutputArguments Variable.
        /// </summary>
        public const uint ConfigurationManagementType_ReleaseConfigurationHandle_OutputArguments = 634;

        /// <summary>
        /// The identifier for the ConfigurationManagementType_RemoveConfiguration_InputArguments Variable.
        /// </summary>
        public const uint ConfigurationManagementType_RemoveConfiguration_InputArguments = 636;

        /// <summary>
        /// The identifier for the ConfigurationManagementType_RemoveConfiguration_OutputArguments Variable.
        /// </summary>
        public const uint ConfigurationManagementType_RemoveConfiguration_OutputArguments = 637;

        /// <summary>
        /// The identifier for the ConfigurationFolderType_Configuration Variable.
        /// </summary>
        public const uint ConfigurationFolderType_Configuration = 639;

        /// <summary>
        /// The identifier for the ConfigurationTransferType_GenerateFileForRead_InputArguments Variable.
        /// </summary>
        public const uint ConfigurationTransferType_GenerateFileForRead_InputArguments = 643;

        /// <summary>
        /// The identifier for the ConfigurationTransferType_GenerateFileForRead_OutputArguments Variable.
        /// </summary>
        public const uint ConfigurationTransferType_GenerateFileForRead_OutputArguments = 644;

        /// <summary>
        /// The identifier for the ConfigurationTransferType_GenerateFileForWrite_InputArguments Variable.
        /// </summary>
        public const uint ConfigurationTransferType_GenerateFileForWrite_InputArguments = 646;

        /// <summary>
        /// The identifier for the ConfigurationTransferType_GenerateFileForWrite_OutputArguments Variable.
        /// </summary>
        public const uint ConfigurationTransferType_GenerateFileForWrite_OutputArguments = 647;

        /// <summary>
        /// The identifier for the ConfigurationTransferType_CloseAndCommit_InputArguments Variable.
        /// </summary>
        public const uint ConfigurationTransferType_CloseAndCommit_InputArguments = 649;

        /// <summary>
        /// The identifier for the ConfigurationTransferType_CloseAndCommit_OutputArguments Variable.
        /// </summary>
        public const uint ConfigurationTransferType_CloseAndCommit_OutputArguments = 650;

        /// <summary>
        /// The identifier for the ConfigurationTransferType_TransferState_Placeholder_CurrentState Variable.
        /// </summary>
        public const uint ConfigurationTransferType_TransferState_Placeholder_CurrentState = 652;

        /// <summary>
        /// The identifier for the ConfigurationTransferType_TransferState_Placeholder_CurrentState_Id Variable.
        /// </summary>
        public const uint ConfigurationTransferType_TransferState_Placeholder_CurrentState_Id = 653;

        /// <summary>
        /// The identifier for the ConfigurationTransferType_TransferState_Placeholder_LastTransition_Id Variable.
        /// </summary>
        public const uint ConfigurationTransferType_TransferState_Placeholder_LastTransition_Id = 658;

        /// <summary>
        /// The identifier for the ProductFolderType_Product Variable.
        /// </summary>
        public const uint ProductFolderType_Product = 667;

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_Size Variable.
        /// </summary>
        public const uint RecipeFolderType_Recipe_Handle_Size = 672;

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_Writable Variable.
        /// </summary>
        public const uint RecipeFolderType_Recipe_Handle_Writable = 673;

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_UserWritable Variable.
        /// </summary>
        public const uint RecipeFolderType_Recipe_Handle_UserWritable = 674;

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_OpenCount Variable.
        /// </summary>
        public const uint RecipeFolderType_Recipe_Handle_OpenCount = 675;

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_Open_InputArguments Variable.
        /// </summary>
        public const uint RecipeFolderType_Recipe_Handle_Open_InputArguments = 678;

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_Open_OutputArguments Variable.
        /// </summary>
        public const uint RecipeFolderType_Recipe_Handle_Open_OutputArguments = 679;

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_Close_InputArguments Variable.
        /// </summary>
        public const uint RecipeFolderType_Recipe_Handle_Close_InputArguments = 681;

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_Read_InputArguments Variable.
        /// </summary>
        public const uint RecipeFolderType_Recipe_Handle_Read_InputArguments = 683;

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_Read_OutputArguments Variable.
        /// </summary>
        public const uint RecipeFolderType_Recipe_Handle_Read_OutputArguments = 684;

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_Write_InputArguments Variable.
        /// </summary>
        public const uint RecipeFolderType_Recipe_Handle_Write_InputArguments = 686;

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_GetPosition_InputArguments Variable.
        /// </summary>
        public const uint RecipeFolderType_Recipe_Handle_GetPosition_InputArguments = 688;

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_GetPosition_OutputArguments Variable.
        /// </summary>
        public const uint RecipeFolderType_Recipe_Handle_GetPosition_OutputArguments = 689;

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_SetPosition_InputArguments Variable.
        /// </summary>
        public const uint RecipeFolderType_Recipe_Handle_SetPosition_InputArguments = 691;

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_InternalId Variable.
        /// </summary>
        public const uint RecipeFolderType_Recipe_InternalId = 692;

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_IsPrepared Variable.
        /// </summary>
        public const uint RecipeFolderType_Recipe_IsPrepared = 693;

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_LastModified Variable.
        /// </summary>
        public const uint RecipeFolderType_Recipe_LastModified = 694;

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_LinkProduct_InputArguments Variable.
        /// </summary>
        public const uint RecipeFolderType_Recipe_LinkProduct_InputArguments = 697;

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_LinkProduct_OutputArguments Variable.
        /// </summary>
        public const uint RecipeFolderType_Recipe_LinkProduct_OutputArguments = 698;

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Prepare_OutputArguments Variable.
        /// </summary>
        public const uint RecipeFolderType_Recipe_Prepare_OutputArguments = 700;

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_UnlinkProduct_InputArguments Variable.
        /// </summary>
        public const uint RecipeFolderType_Recipe_UnlinkProduct_InputArguments = 702;

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_UnlinkProduct_OutputArguments Variable.
        /// </summary>
        public const uint RecipeFolderType_Recipe_UnlinkProduct_OutputArguments = 703;

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Unprepare_OutputArguments Variable.
        /// </summary>
        public const uint RecipeFolderType_Recipe_Unprepare_OutputArguments = 705;

        /// <summary>
        /// The identifier for the RecipeType_ExternalId Variable.
        /// </summary>
        public const uint RecipeType_ExternalId = 707;

        /// <summary>
        /// The identifier for the RecipeType_Handle_Size Variable.
        /// </summary>
        public const uint RecipeType_Handle_Size = 709;

        /// <summary>
        /// The identifier for the RecipeType_Handle_Writable Variable.
        /// </summary>
        public const uint RecipeType_Handle_Writable = 710;

        /// <summary>
        /// The identifier for the RecipeType_Handle_UserWritable Variable.
        /// </summary>
        public const uint RecipeType_Handle_UserWritable = 711;

        /// <summary>
        /// The identifier for the RecipeType_Handle_OpenCount Variable.
        /// </summary>
        public const uint RecipeType_Handle_OpenCount = 712;

        /// <summary>
        /// The identifier for the RecipeType_Handle_Open_InputArguments Variable.
        /// </summary>
        public const uint RecipeType_Handle_Open_InputArguments = 715;

        /// <summary>
        /// The identifier for the RecipeType_Handle_Open_OutputArguments Variable.
        /// </summary>
        public const uint RecipeType_Handle_Open_OutputArguments = 716;

        /// <summary>
        /// The identifier for the RecipeType_Handle_Close_InputArguments Variable.
        /// </summary>
        public const uint RecipeType_Handle_Close_InputArguments = 718;

        /// <summary>
        /// The identifier for the RecipeType_Handle_Read_InputArguments Variable.
        /// </summary>
        public const uint RecipeType_Handle_Read_InputArguments = 720;

        /// <summary>
        /// The identifier for the RecipeType_Handle_Read_OutputArguments Variable.
        /// </summary>
        public const uint RecipeType_Handle_Read_OutputArguments = 721;

        /// <summary>
        /// The identifier for the RecipeType_Handle_Write_InputArguments Variable.
        /// </summary>
        public const uint RecipeType_Handle_Write_InputArguments = 723;

        /// <summary>
        /// The identifier for the RecipeType_Handle_GetPosition_InputArguments Variable.
        /// </summary>
        public const uint RecipeType_Handle_GetPosition_InputArguments = 725;

        /// <summary>
        /// The identifier for the RecipeType_Handle_GetPosition_OutputArguments Variable.
        /// </summary>
        public const uint RecipeType_Handle_GetPosition_OutputArguments = 726;

        /// <summary>
        /// The identifier for the RecipeType_Handle_SetPosition_InputArguments Variable.
        /// </summary>
        public const uint RecipeType_Handle_SetPosition_InputArguments = 728;

        /// <summary>
        /// The identifier for the RecipeType_InternalId Variable.
        /// </summary>
        public const uint RecipeType_InternalId = 729;

        /// <summary>
        /// The identifier for the RecipeType_IsPrepared Variable.
        /// </summary>
        public const uint RecipeType_IsPrepared = 730;

        /// <summary>
        /// The identifier for the RecipeType_LastModified Variable.
        /// </summary>
        public const uint RecipeType_LastModified = 731;

        /// <summary>
        /// The identifier for the RecipeType_LinkedProducts Variable.
        /// </summary>
        public const uint RecipeType_LinkedProducts = 732;

        /// <summary>
        /// The identifier for the RecipeType_LinkProduct_InputArguments Variable.
        /// </summary>
        public const uint RecipeType_LinkProduct_InputArguments = 734;

        /// <summary>
        /// The identifier for the RecipeType_LinkProduct_OutputArguments Variable.
        /// </summary>
        public const uint RecipeType_LinkProduct_OutputArguments = 735;

        /// <summary>
        /// The identifier for the RecipeType_Prepare_OutputArguments Variable.
        /// </summary>
        public const uint RecipeType_Prepare_OutputArguments = 737;

        /// <summary>
        /// The identifier for the RecipeType_UnlinkProduct_InputArguments Variable.
        /// </summary>
        public const uint RecipeType_UnlinkProduct_InputArguments = 739;

        /// <summary>
        /// The identifier for the RecipeType_UnlinkProduct_OutputArguments Variable.
        /// </summary>
        public const uint RecipeType_UnlinkProduct_OutputArguments = 740;

        /// <summary>
        /// The identifier for the RecipeType_Unprepare_OutputArguments Variable.
        /// </summary>
        public const uint RecipeType_Unprepare_OutputArguments = 742;

        /// <summary>
        /// The identifier for the ResultFolderType_ResultVariable Variable.
        /// </summary>
        public const uint ResultFolderType_ResultVariable = 744;

        /// <summary>
        /// The identifier for the ResultFolderType_ResultVariable_CreationTime Variable.
        /// </summary>
        public const uint ResultFolderType_ResultVariable_CreationTime = 745;

        /// <summary>
        /// The identifier for the ResultFolderType_ResultVariable_InternalConfigurationId Variable.
        /// </summary>
        public const uint ResultFolderType_ResultVariable_InternalConfigurationId = 749;

        /// <summary>
        /// The identifier for the ResultFolderType_ResultVariable_InternalRecipeId Variable.
        /// </summary>
        public const uint ResultFolderType_ResultVariable_InternalRecipeId = 750;

        /// <summary>
        /// The identifier for the ResultFolderType_ResultVariable_IsPartial Variable.
        /// </summary>
        public const uint ResultFolderType_ResultVariable_IsPartial = 751;

        /// <summary>
        /// The identifier for the ResultFolderType_ResultVariable_JobId Variable.
        /// </summary>
        public const uint ResultFolderType_ResultVariable_JobId = 753;

        /// <summary>
        /// The identifier for the ResultFolderType_ResultVariable_ResultId Variable.
        /// </summary>
        public const uint ResultFolderType_ResultVariable_ResultId = 759;

        /// <summary>
        /// The identifier for the ResultFolderType_ResultVariable_ResultState Variable.
        /// </summary>
        public const uint ResultFolderType_ResultVariable_ResultState = 760;

        /// <summary>
        /// The identifier for the RecipeManagementType_AddRecipe_InputArguments Variable.
        /// </summary>
        public const uint RecipeManagementType_AddRecipe_InputArguments = 763;

        /// <summary>
        /// The identifier for the RecipeManagementType_AddRecipe_OutputArguments Variable.
        /// </summary>
        public const uint RecipeManagementType_AddRecipe_OutputArguments = 764;

        /// <summary>
        /// The identifier for the RecipeManagementType_GetRecipeListFiltered_InputArguments Variable.
        /// </summary>
        public const uint RecipeManagementType_GetRecipeListFiltered_InputArguments = 766;

        /// <summary>
        /// The identifier for the RecipeManagementType_GetRecipeListFiltered_OutputArguments Variable.
        /// </summary>
        public const uint RecipeManagementType_GetRecipeListFiltered_OutputArguments = 767;

        /// <summary>
        /// The identifier for the RecipeManagementType_PrepareProduct_InputArguments Variable.
        /// </summary>
        public const uint RecipeManagementType_PrepareProduct_InputArguments = 769;

        /// <summary>
        /// The identifier for the RecipeManagementType_PrepareProduct_OutputArguments Variable.
        /// </summary>
        public const uint RecipeManagementType_PrepareProduct_OutputArguments = 770;

        /// <summary>
        /// The identifier for the RecipeManagementType_PrepareRecipe_InputArguments Variable.
        /// </summary>
        public const uint RecipeManagementType_PrepareRecipe_InputArguments = 772;

        /// <summary>
        /// The identifier for the RecipeManagementType_PrepareRecipe_OutputArguments Variable.
        /// </summary>
        public const uint RecipeManagementType_PrepareRecipe_OutputArguments = 773;

        /// <summary>
        /// The identifier for the RecipeManagementType_RecipeTransfer_ClientProcessingTimeout Variable.
        /// </summary>
        public const uint RecipeManagementType_RecipeTransfer_ClientProcessingTimeout = 777;

        /// <summary>
        /// The identifier for the RecipeManagementType_RecipeTransfer_GenerateFileForRead_InputArguments Variable.
        /// </summary>
        public const uint RecipeManagementType_RecipeTransfer_GenerateFileForRead_InputArguments = 779;

        /// <summary>
        /// The identifier for the RecipeManagementType_RecipeTransfer_GenerateFileForRead_OutputArguments Variable.
        /// </summary>
        public const uint RecipeManagementType_RecipeTransfer_GenerateFileForRead_OutputArguments = 780;

        /// <summary>
        /// The identifier for the RecipeManagementType_RecipeTransfer_GenerateFileForWrite_InputArguments Variable.
        /// </summary>
        public const uint RecipeManagementType_RecipeTransfer_GenerateFileForWrite_InputArguments = 782;

        /// <summary>
        /// The identifier for the RecipeManagementType_RecipeTransfer_GenerateFileForWrite_OutputArguments Variable.
        /// </summary>
        public const uint RecipeManagementType_RecipeTransfer_GenerateFileForWrite_OutputArguments = 783;

        /// <summary>
        /// The identifier for the RecipeManagementType_RecipeTransfer_CloseAndCommit_InputArguments Variable.
        /// </summary>
        public const uint RecipeManagementType_RecipeTransfer_CloseAndCommit_InputArguments = 785;

        /// <summary>
        /// The identifier for the RecipeManagementType_RecipeTransfer_CloseAndCommit_OutputArguments Variable.
        /// </summary>
        public const uint RecipeManagementType_RecipeTransfer_CloseAndCommit_OutputArguments = 786;

        /// <summary>
        /// The identifier for the RecipeManagementType_ReleaseRecipeHandle_InputArguments Variable.
        /// </summary>
        public const uint RecipeManagementType_ReleaseRecipeHandle_InputArguments = 788;

        /// <summary>
        /// The identifier for the RecipeManagementType_ReleaseRecipeHandle_OutputArguments Variable.
        /// </summary>
        public const uint RecipeManagementType_ReleaseRecipeHandle_OutputArguments = 789;

        /// <summary>
        /// The identifier for the RecipeManagementType_RemoveRecipe_InputArguments Variable.
        /// </summary>
        public const uint RecipeManagementType_RemoveRecipe_InputArguments = 791;

        /// <summary>
        /// The identifier for the RecipeManagementType_RemoveRecipe_OutputArguments Variable.
        /// </summary>
        public const uint RecipeManagementType_RemoveRecipe_OutputArguments = 792;

        /// <summary>
        /// The identifier for the RecipeManagementType_UnlinkProduct_InputArguments Variable.
        /// </summary>
        public const uint RecipeManagementType_UnlinkProduct_InputArguments = 794;

        /// <summary>
        /// The identifier for the RecipeManagementType_UnlinkProduct_OutputArguments Variable.
        /// </summary>
        public const uint RecipeManagementType_UnlinkProduct_OutputArguments = 795;

        /// <summary>
        /// The identifier for the RecipeManagementType_UnprepareProduct_InputArguments Variable.
        /// </summary>
        public const uint RecipeManagementType_UnprepareProduct_InputArguments = 797;

        /// <summary>
        /// The identifier for the RecipeManagementType_UnprepareProduct_OutputArguments Variable.
        /// </summary>
        public const uint RecipeManagementType_UnprepareProduct_OutputArguments = 798;

        /// <summary>
        /// The identifier for the RecipeManagementType_UnprepareRecipe_InputArguments Variable.
        /// </summary>
        public const uint RecipeManagementType_UnprepareRecipe_InputArguments = 800;

        /// <summary>
        /// The identifier for the RecipeManagementType_UnprepareRecipe_OutputArguments Variable.
        /// </summary>
        public const uint RecipeManagementType_UnprepareRecipe_OutputArguments = 801;

        /// <summary>
        /// The identifier for the RecipeTransferType_GenerateFileForRead_InputArguments Variable.
        /// </summary>
        public const uint RecipeTransferType_GenerateFileForRead_InputArguments = 805;

        /// <summary>
        /// The identifier for the RecipeTransferType_GenerateFileForRead_OutputArguments Variable.
        /// </summary>
        public const uint RecipeTransferType_GenerateFileForRead_OutputArguments = 806;

        /// <summary>
        /// The identifier for the RecipeTransferType_GenerateFileForWrite_InputArguments Variable.
        /// </summary>
        public const uint RecipeTransferType_GenerateFileForWrite_InputArguments = 808;

        /// <summary>
        /// The identifier for the RecipeTransferType_GenerateFileForWrite_OutputArguments Variable.
        /// </summary>
        public const uint RecipeTransferType_GenerateFileForWrite_OutputArguments = 809;

        /// <summary>
        /// The identifier for the RecipeTransferType_CloseAndCommit_InputArguments Variable.
        /// </summary>
        public const uint RecipeTransferType_CloseAndCommit_InputArguments = 811;

        /// <summary>
        /// The identifier for the RecipeTransferType_CloseAndCommit_OutputArguments Variable.
        /// </summary>
        public const uint RecipeTransferType_CloseAndCommit_OutputArguments = 812;

        /// <summary>
        /// The identifier for the RecipeTransferType_TransferState_Placeholder_CurrentState Variable.
        /// </summary>
        public const uint RecipeTransferType_TransferState_Placeholder_CurrentState = 814;

        /// <summary>
        /// The identifier for the RecipeTransferType_TransferState_Placeholder_CurrentState_Id Variable.
        /// </summary>
        public const uint RecipeTransferType_TransferState_Placeholder_CurrentState_Id = 815;

        /// <summary>
        /// The identifier for the RecipeTransferType_TransferState_Placeholder_LastTransition_Id Variable.
        /// </summary>
        public const uint RecipeTransferType_TransferState_Placeholder_LastTransition_Id = 820;

        /// <summary>
        /// The identifier for the ResultManagementType_GetResultById_InputArguments Variable.
        /// </summary>
        public const uint ResultManagementType_GetResultById_InputArguments = 830;

        /// <summary>
        /// The identifier for the ResultManagementType_GetResultById_OutputArguments Variable.
        /// </summary>
        public const uint ResultManagementType_GetResultById_OutputArguments = 831;

        /// <summary>
        /// The identifier for the ResultManagementType_GetResultComponentsById_InputArguments Variable.
        /// </summary>
        public const uint ResultManagementType_GetResultComponentsById_InputArguments = 833;

        /// <summary>
        /// The identifier for the ResultManagementType_GetResultComponentsById_OutputArguments Variable.
        /// </summary>
        public const uint ResultManagementType_GetResultComponentsById_OutputArguments = 834;

        /// <summary>
        /// The identifier for the ResultManagementType_GetResultListFiltered_InputArguments Variable.
        /// </summary>
        public const uint ResultManagementType_GetResultListFiltered_InputArguments = 836;

        /// <summary>
        /// The identifier for the ResultManagementType_GetResultListFiltered_OutputArguments Variable.
        /// </summary>
        public const uint ResultManagementType_GetResultListFiltered_OutputArguments = 837;

        /// <summary>
        /// The identifier for the ResultManagementType_ReleaseResultHandle_InputArguments Variable.
        /// </summary>
        public const uint ResultManagementType_ReleaseResultHandle_InputArguments = 839;

        /// <summary>
        /// The identifier for the ResultManagementType_ReleaseResultHandle_OutputArguments Variable.
        /// </summary>
        public const uint ResultManagementType_ReleaseResultHandle_OutputArguments = 840;

        /// <summary>
        /// The identifier for the ResultManagementType_ResultTransfer_ClientProcessingTimeout Variable.
        /// </summary>
        public const uint ResultManagementType_ResultTransfer_ClientProcessingTimeout = 843;

        /// <summary>
        /// The identifier for the ResultManagementType_ResultTransfer_GenerateFileForRead_InputArguments Variable.
        /// </summary>
        public const uint ResultManagementType_ResultTransfer_GenerateFileForRead_InputArguments = 845;

        /// <summary>
        /// The identifier for the ResultManagementType_ResultTransfer_GenerateFileForRead_OutputArguments Variable.
        /// </summary>
        public const uint ResultManagementType_ResultTransfer_GenerateFileForRead_OutputArguments = 846;

        /// <summary>
        /// The identifier for the ResultManagementType_ResultTransfer_GenerateFileForWrite_InputArguments Variable.
        /// </summary>
        public const uint ResultManagementType_ResultTransfer_GenerateFileForWrite_InputArguments = 848;

        /// <summary>
        /// The identifier for the ResultManagementType_ResultTransfer_GenerateFileForWrite_OutputArguments Variable.
        /// </summary>
        public const uint ResultManagementType_ResultTransfer_GenerateFileForWrite_OutputArguments = 849;

        /// <summary>
        /// The identifier for the ResultManagementType_ResultTransfer_CloseAndCommit_InputArguments Variable.
        /// </summary>
        public const uint ResultManagementType_ResultTransfer_CloseAndCommit_InputArguments = 851;

        /// <summary>
        /// The identifier for the ResultManagementType_ResultTransfer_CloseAndCommit_OutputArguments Variable.
        /// </summary>
        public const uint ResultManagementType_ResultTransfer_CloseAndCommit_OutputArguments = 852;

        /// <summary>
        /// The identifier for the ResultTransferType_GenerateFileForRead_InputArguments Variable.
        /// </summary>
        public const uint ResultTransferType_GenerateFileForRead_InputArguments = 856;

        /// <summary>
        /// The identifier for the ResultTransferType_GenerateFileForRead_OutputArguments Variable.
        /// </summary>
        public const uint ResultTransferType_GenerateFileForRead_OutputArguments = 857;

        /// <summary>
        /// The identifier for the ResultTransferType_GenerateFileForWrite_InputArguments Variable.
        /// </summary>
        public const uint ResultTransferType_GenerateFileForWrite_InputArguments = 859;

        /// <summary>
        /// The identifier for the ResultTransferType_GenerateFileForWrite_OutputArguments Variable.
        /// </summary>
        public const uint ResultTransferType_GenerateFileForWrite_OutputArguments = 860;

        /// <summary>
        /// The identifier for the ResultTransferType_CloseAndCommit_InputArguments Variable.
        /// </summary>
        public const uint ResultTransferType_CloseAndCommit_InputArguments = 862;

        /// <summary>
        /// The identifier for the ResultTransferType_CloseAndCommit_OutputArguments Variable.
        /// </summary>
        public const uint ResultTransferType_CloseAndCommit_OutputArguments = 863;

        /// <summary>
        /// The identifier for the ResultTransferType_TransferState_Placeholder_CurrentState Variable.
        /// </summary>
        public const uint ResultTransferType_TransferState_Placeholder_CurrentState = 865;

        /// <summary>
        /// The identifier for the ResultTransferType_TransferState_Placeholder_CurrentState_Id Variable.
        /// </summary>
        public const uint ResultTransferType_TransferState_Placeholder_CurrentState_Id = 866;

        /// <summary>
        /// The identifier for the ResultTransferType_TransferState_Placeholder_LastTransition_Id Variable.
        /// </summary>
        public const uint ResultTransferType_TransferState_Placeholder_LastTransition_Id = 871;

        /// <summary>
        /// The identifier for the SafetyStateManagementType_ReportSafetyState_InputArguments Variable.
        /// </summary>
        public const uint SafetyStateManagementType_ReportSafetyState_InputArguments = 881;

        /// <summary>
        /// The identifier for the SafetyStateManagementType_ReportSafetyState_OutputArguments Variable.
        /// </summary>
        public const uint SafetyStateManagementType_ReportSafetyState_OutputArguments = 882;

        /// <summary>
        /// The identifier for the SafetyStateManagementType_VisionSafetyInformation Variable.
        /// </summary>
        public const uint SafetyStateManagementType_VisionSafetyInformation = 883;

        /// <summary>
        /// The identifier for the SafetyStateManagementType_VisionSafetyTriggered Variable.
        /// </summary>
        public const uint SafetyStateManagementType_VisionSafetyTriggered = 884;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_CurrentState_Id Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_CurrentState_Id = 887;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_LastTransition_Id Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_LastTransition_Id = 892;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_Abort_InputArguments Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_Abort_InputArguments = 900;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_Abort_OutputArguments Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_Abort_OutputArguments = 901;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecution_StateNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecution_StateNumber = 903;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_CurrentState Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_CurrentState = 905;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_CurrentState_Id Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_CurrentState_Id = 906;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_LastTransition_Id Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_LastTransition_Id = 911;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Entry_StateNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Entry_StateNumber = 919;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_EntryToExitAuto_TransitionNumber = 921;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_EntryToWaitAuto_TransitionNumber = 923;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Exit_StateNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Exit_StateNumber = 925;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Step_StateNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Step_StateNumber = 927;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_StepToExitAuto_TransitionNumber = 929;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_StepToWaitAuto_TransitionNumber = 931;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Sync_InputArguments Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Sync_InputArguments = 933;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Sync_OutputArguments = 934;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Wait_StateNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Wait_StateNumber = 936;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_WaitToStep_TransitionNumber = 938;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_WaitToStepAuto_TransitionNumber = 940;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionToReadyAbort_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionToReadyAbort_TransitionNumber = 942;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionToReadyAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionToReadyAuto_TransitionNumber = 944;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionToReadyStop_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ContinuousExecutionToReadyStop_TransitionNumber = 946;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_Initialized_StateNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_Initialized_StateNumber = 948;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_CurrentState Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedStepModel_CurrentState = 950;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_CurrentState_Id Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedStepModel_CurrentState_Id = 951;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_LastTransition_Id Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedStepModel_LastTransition_Id = 956;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_Entry_StateNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedStepModel_Entry_StateNumber = 964;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedStepModel_EntryToExitAuto_TransitionNumber = 966;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedStepModel_EntryToWaitAuto_TransitionNumber = 968;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_Exit_StateNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedStepModel_Exit_StateNumber = 970;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_Step_StateNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedStepModel_Step_StateNumber = 972;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedStepModel_StepToExitAuto_TransitionNumber = 974;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedStepModel_StepToWaitAuto_TransitionNumber = 976;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_Sync_InputArguments Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedStepModel_Sync_InputArguments = 978;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedStepModel_Sync_OutputArguments = 979;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_Wait_StateNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedStepModel_Wait_StateNumber = 981;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedStepModel_WaitToStep_TransitionNumber = 983;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedStepModel_WaitToStepAuto_TransitionNumber = 985;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedToReadyAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedToReadyAuto_TransitionNumber = 987;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedToReadyProduct_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedToReadyProduct_TransitionNumber = 989;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedToReadyRecipe_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_InitializedToReadyRecipe_TransitionNumber = 991;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_Ready_StateNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_Ready_StateNumber = 993;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_CurrentState Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyStepModel_CurrentState = 995;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_CurrentState_Id Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyStepModel_CurrentState_Id = 996;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_LastTransition_Id Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyStepModel_LastTransition_Id = 1001;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_Entry_StateNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyStepModel_Entry_StateNumber = 1009;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyStepModel_EntryToExitAuto_TransitionNumber = 1011;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyStepModel_EntryToWaitAuto_TransitionNumber = 1013;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_Exit_StateNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyStepModel_Exit_StateNumber = 1015;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_Step_StateNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyStepModel_Step_StateNumber = 1017;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyStepModel_StepToExitAuto_TransitionNumber = 1019;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyStepModel_StepToWaitAuto_TransitionNumber = 1021;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_Sync_InputArguments Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyStepModel_Sync_InputArguments = 1023;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyStepModel_Sync_OutputArguments = 1024;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_Wait_StateNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyStepModel_Wait_StateNumber = 1026;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyStepModel_WaitToStep_TransitionNumber = 1028;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyStepModel_WaitToStepAuto_TransitionNumber = 1030;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyToContinuousExecution_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyToContinuousExecution_TransitionNumber = 1032;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyToContinuousExecutionAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyToContinuousExecutionAuto_TransitionNumber = 1034;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyToInitializedAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyToInitializedAuto_TransitionNumber = 1036;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyToInitializedProduct_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyToInitializedProduct_TransitionNumber = 1038;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyToInitializedRecipe_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyToInitializedRecipe_TransitionNumber = 1040;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyToSingleExecution_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyToSingleExecution_TransitionNumber = 1042;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyToSingleExecutionAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_ReadyToSingleExecutionAuto_TransitionNumber = 1044;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SimulationMode_InputArguments Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SimulationMode_InputArguments = 1046;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SimulationMode_OutputArguments Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SimulationMode_OutputArguments = 1047;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecution_StateNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecution_StateNumber = 1049;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_CurrentState Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionStepModel_CurrentState = 1051;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_CurrentState_Id Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionStepModel_CurrentState_Id = 1052;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_LastTransition_Id Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionStepModel_LastTransition_Id = 1057;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Entry_StateNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Entry_StateNumber = 1065;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionStepModel_EntryToExitAuto_TransitionNumber = 1067;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionStepModel_EntryToWaitAuto_TransitionNumber = 1069;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Exit_StateNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Exit_StateNumber = 1071;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Step_StateNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Step_StateNumber = 1073;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionStepModel_StepToExitAuto_TransitionNumber = 1075;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionStepModel_StepToWaitAuto_TransitionNumber = 1077;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Sync_InputArguments Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Sync_InputArguments = 1079;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Sync_OutputArguments = 1080;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Wait_StateNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Wait_StateNumber = 1082;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionStepModel_WaitToStep_TransitionNumber = 1084;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionStepModel_WaitToStepAuto_TransitionNumber = 1086;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionToReadyAbort_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionToReadyAbort_TransitionNumber = 1088;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionToReadyAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionToReadyAuto_TransitionNumber = 1090;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionToReadyStop_TransitionNumber Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_SingleExecutionToReadyStop_TransitionNumber = 1092;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_StartContinuous_InputArguments Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_StartContinuous_InputArguments = 1094;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_StartContinuous_OutputArguments Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_StartContinuous_OutputArguments = 1095;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_StartSingleJob_InputArguments Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_StartSingleJob_InputArguments = 1097;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_StartSingleJob_OutputArguments Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_StartSingleJob_OutputArguments = 1098;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_Stop_InputArguments Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_Stop_InputArguments = 1100;

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_Stop_OutputArguments Variable.
        /// </summary>
        public const uint VisionAutomaticModeStateMachineType_Stop_OutputArguments = 1101;

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_CurrentState_Id Variable.
        /// </summary>
        public const uint VisionStepModelStateMachineType_CurrentState_Id = 1104;

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_LastTransition_Id Variable.
        /// </summary>
        public const uint VisionStepModelStateMachineType_LastTransition_Id = 1109;

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_Entry_StateNumber Variable.
        /// </summary>
        public const uint VisionStepModelStateMachineType_Entry_StateNumber = 1117;

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStepModelStateMachineType_EntryToExitAuto_TransitionNumber = 1119;

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStepModelStateMachineType_EntryToWaitAuto_TransitionNumber = 1121;

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_Exit_StateNumber Variable.
        /// </summary>
        public const uint VisionStepModelStateMachineType_Exit_StateNumber = 1123;

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_Step_StateNumber Variable.
        /// </summary>
        public const uint VisionStepModelStateMachineType_Step_StateNumber = 1125;

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStepModelStateMachineType_StepToExitAuto_TransitionNumber = 1127;

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStepModelStateMachineType_StepToWaitAuto_TransitionNumber = 1129;

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_Sync_InputArguments Variable.
        /// </summary>
        public const uint VisionStepModelStateMachineType_Sync_InputArguments = 1131;

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_Sync_OutputArguments Variable.
        /// </summary>
        public const uint VisionStepModelStateMachineType_Sync_OutputArguments = 1132;

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_Wait_StateNumber Variable.
        /// </summary>
        public const uint VisionStepModelStateMachineType_Wait_StateNumber = 1134;

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStepModelStateMachineType_WaitToStep_TransitionNumber = 1136;

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStepModelStateMachineType_WaitToStepAuto_TransitionNumber = 1138;

        /// <summary>
        /// The identifier for the VisionStateMachineType_CurrentState_Id Variable.
        /// </summary>
        public const uint VisionStateMachineType_CurrentState_Id = 1141;

        /// <summary>
        /// The identifier for the VisionStateMachineType_LastTransition_Id Variable.
        /// </summary>
        public const uint VisionStateMachineType_LastTransition_Id = 1146;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_CurrentState Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_CurrentState = 1154;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_CurrentState_Id Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_CurrentState_Id = 1155;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_LastTransition_Id Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_LastTransition_Id = 1160;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_Abort_InputArguments Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_Abort_InputArguments = 1168;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_Abort_OutputArguments Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_Abort_OutputArguments = 1169;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecution_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecution_StateNumber = 1171;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_CurrentState Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_CurrentState = 1173;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_CurrentState_Id Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_CurrentState_Id = 1174;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_LastTransition_Id Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_LastTransition_Id = 1179;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Entry_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Entry_StateNumber = 1187;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToExitAuto_TransitionNumber = 1189;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToWaitAuto_TransitionNumber = 1191;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Exit_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Exit_StateNumber = 1193;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Step_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Step_StateNumber = 1195;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToExitAuto_TransitionNumber = 1197;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToWaitAuto_TransitionNumber = 1199;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Sync_InputArguments Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Sync_InputArguments = 1201;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Sync_OutputArguments = 1202;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Wait_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Wait_StateNumber = 1204;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStep_TransitionNumber = 1206;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStepAuto_TransitionNumber = 1208;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionToReadyAbort_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionToReadyAbort_TransitionNumber = 1210;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionToReadyAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionToReadyAuto_TransitionNumber = 1212;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionToReadyStop_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionToReadyStop_TransitionNumber = 1214;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_Initialized_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_Initialized_StateNumber = 1216;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_CurrentState Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_CurrentState = 1218;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_CurrentState_Id Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_CurrentState_Id = 1219;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_LastTransition_Id Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_LastTransition_Id = 1224;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Entry_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Entry_StateNumber = 1232;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_EntryToExitAuto_TransitionNumber = 1234;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_EntryToWaitAuto_TransitionNumber = 1236;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Exit_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Exit_StateNumber = 1238;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Step_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Step_StateNumber = 1240;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_StepToExitAuto_TransitionNumber = 1242;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_StepToWaitAuto_TransitionNumber = 1244;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Sync_InputArguments Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Sync_InputArguments = 1246;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Sync_OutputArguments = 1247;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Wait_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Wait_StateNumber = 1249;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_WaitToStep_TransitionNumber = 1251;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_WaitToStepAuto_TransitionNumber = 1253;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedToReadyAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedToReadyAuto_TransitionNumber = 1255;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedToReadyProduct_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedToReadyProduct_TransitionNumber = 1257;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedToReadyRecipe_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_InitializedToReadyRecipe_TransitionNumber = 1259;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_Ready_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_Ready_StateNumber = 1261;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_CurrentState Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_CurrentState = 1263;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_CurrentState_Id Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_CurrentState_Id = 1264;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_LastTransition_Id Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_LastTransition_Id = 1269;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Entry_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Entry_StateNumber = 1277;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_EntryToExitAuto_TransitionNumber = 1279;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_EntryToWaitAuto_TransitionNumber = 1281;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Exit_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Exit_StateNumber = 1283;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Step_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Step_StateNumber = 1285;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_StepToExitAuto_TransitionNumber = 1287;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_StepToWaitAuto_TransitionNumber = 1289;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Sync_InputArguments Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Sync_InputArguments = 1291;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Sync_OutputArguments = 1292;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Wait_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Wait_StateNumber = 1294;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_WaitToStep_TransitionNumber = 1296;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_WaitToStepAuto_TransitionNumber = 1298;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyToContinuousExecution_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyToContinuousExecution_TransitionNumber = 1300;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyToContinuousExecutionAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyToContinuousExecutionAuto_TransitionNumber = 1302;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyToInitializedAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyToInitializedAuto_TransitionNumber = 1304;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyToInitializedProduct_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyToInitializedProduct_TransitionNumber = 1306;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyToInitializedRecipe_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyToInitializedRecipe_TransitionNumber = 1308;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyToSingleExecution_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyToSingleExecution_TransitionNumber = 1310;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyToSingleExecutionAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_ReadyToSingleExecutionAuto_TransitionNumber = 1312;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SimulationMode_InputArguments Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SimulationMode_InputArguments = 1314;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SimulationMode_OutputArguments Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SimulationMode_OutputArguments = 1315;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecution_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecution_StateNumber = 1317;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_CurrentState Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_CurrentState = 1319;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_CurrentState_Id Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_CurrentState_Id = 1320;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_LastTransition_Id Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_LastTransition_Id = 1325;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Entry_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Entry_StateNumber = 1333;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToExitAuto_TransitionNumber = 1335;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToWaitAuto_TransitionNumber = 1337;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Exit_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Exit_StateNumber = 1339;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Step_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Step_StateNumber = 1341;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_StepToExitAuto_TransitionNumber = 1343;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_StepToWaitAuto_TransitionNumber = 1345;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Sync_InputArguments Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Sync_InputArguments = 1347;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Sync_OutputArguments = 1348;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Wait_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Wait_StateNumber = 1350;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStep_TransitionNumber = 1352;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStepAuto_TransitionNumber = 1354;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionToReadyAbort_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionToReadyAbort_TransitionNumber = 1356;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionToReadyAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionToReadyAuto_TransitionNumber = 1358;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionToReadyStop_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionToReadyStop_TransitionNumber = 1360;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_StartContinuous_InputArguments Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_StartContinuous_InputArguments = 1362;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_StartContinuous_OutputArguments Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_StartContinuous_OutputArguments = 1363;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_StartSingleJob_InputArguments Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_StartSingleJob_InputArguments = 1365;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_StartSingleJob_OutputArguments Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_StartSingleJob_OutputArguments = 1366;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_Stop_InputArguments Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_Stop_InputArguments = 1368;

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_Stop_OutputArguments Variable.
        /// </summary>
        public const uint VisionStateMachineType_AutomaticModeStateMachine_Stop_OutputArguments = 1369;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ConfirmAll_InputArguments Variable.
        /// </summary>
        public const uint VisionStateMachineType_ConfirmAll_InputArguments = 1371;

        /// <summary>
        /// The identifier for the VisionStateMachineType_Error_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_Error_StateNumber = 1373;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_CurrentState Variable.
        /// </summary>
        public const uint VisionStateMachineType_ErrorStepModel_CurrentState = 1375;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_CurrentState_Id Variable.
        /// </summary>
        public const uint VisionStateMachineType_ErrorStepModel_CurrentState_Id = 1376;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_LastTransition_Id Variable.
        /// </summary>
        public const uint VisionStateMachineType_ErrorStepModel_LastTransition_Id = 1381;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_Entry_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_ErrorStepModel_Entry_StateNumber = 1389;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_ErrorStepModel_EntryToExitAuto_TransitionNumber = 1391;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_ErrorStepModel_EntryToWaitAuto_TransitionNumber = 1393;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_Exit_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_ErrorStepModel_Exit_StateNumber = 1395;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_Step_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_ErrorStepModel_Step_StateNumber = 1397;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_ErrorStepModel_StepToExitAuto_TransitionNumber = 1399;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_ErrorStepModel_StepToWaitAuto_TransitionNumber = 1401;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_Sync_InputArguments Variable.
        /// </summary>
        public const uint VisionStateMachineType_ErrorStepModel_Sync_InputArguments = 1403;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public const uint VisionStateMachineType_ErrorStepModel_Sync_OutputArguments = 1404;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_Wait_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_ErrorStepModel_Wait_StateNumber = 1406;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_ErrorStepModel_WaitToStep_TransitionNumber = 1408;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_ErrorStepModel_WaitToStepAuto_TransitionNumber = 1410;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorToHalted_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_ErrorToHalted_TransitionNumber = 1412;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorToHaltedAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_ErrorToHaltedAuto_TransitionNumber = 1414;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorToOperationalAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_ErrorToOperationalAuto_TransitionNumber = 1416;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorToPreoperational_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_ErrorToPreoperational_TransitionNumber = 1418;

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorToPreoperationalAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_ErrorToPreoperationalAuto_TransitionNumber = 1420;

        /// <summary>
        /// The identifier for the VisionStateMachineType_Halt_InputArguments Variable.
        /// </summary>
        public const uint VisionStateMachineType_Halt_InputArguments = 1422;

        /// <summary>
        /// The identifier for the VisionStateMachineType_Halt_OutputArguments Variable.
        /// </summary>
        public const uint VisionStateMachineType_Halt_OutputArguments = 1423;

        /// <summary>
        /// The identifier for the VisionStateMachineType_Halted_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_Halted_StateNumber = 1425;

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_CurrentState Variable.
        /// </summary>
        public const uint VisionStateMachineType_HaltedStepModel_CurrentState = 1427;

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_CurrentState_Id Variable.
        /// </summary>
        public const uint VisionStateMachineType_HaltedStepModel_CurrentState_Id = 1428;

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_LastTransition_Id Variable.
        /// </summary>
        public const uint VisionStateMachineType_HaltedStepModel_LastTransition_Id = 1433;

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_Entry_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_HaltedStepModel_Entry_StateNumber = 1441;

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_HaltedStepModel_EntryToExitAuto_TransitionNumber = 1443;

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_HaltedStepModel_EntryToWaitAuto_TransitionNumber = 1445;

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_Exit_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_HaltedStepModel_Exit_StateNumber = 1447;

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_Step_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_HaltedStepModel_Step_StateNumber = 1449;

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_HaltedStepModel_StepToExitAuto_TransitionNumber = 1451;

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_HaltedStepModel_StepToWaitAuto_TransitionNumber = 1453;

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_Sync_InputArguments Variable.
        /// </summary>
        public const uint VisionStateMachineType_HaltedStepModel_Sync_InputArguments = 1455;

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public const uint VisionStateMachineType_HaltedStepModel_Sync_OutputArguments = 1456;

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_Wait_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_HaltedStepModel_Wait_StateNumber = 1458;

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_HaltedStepModel_WaitToStep_TransitionNumber = 1460;

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_HaltedStepModel_WaitToStepAuto_TransitionNumber = 1462;

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedToPreoperational_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_HaltedToPreoperational_TransitionNumber = 1464;

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedToPreoperationalAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_HaltedToPreoperationalAuto_TransitionNumber = 1466;

        /// <summary>
        /// The identifier for the VisionStateMachineType_Operational_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_Operational_StateNumber = 1468;

        /// <summary>
        /// The identifier for the VisionStateMachineType_OperationalToErrorAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_OperationalToErrorAuto_TransitionNumber = 1470;

        /// <summary>
        /// The identifier for the VisionStateMachineType_OperationalToHalted_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_OperationalToHalted_TransitionNumber = 1472;

        /// <summary>
        /// The identifier for the VisionStateMachineType_OperationalToHaltedAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_OperationalToHaltedAuto_TransitionNumber = 1474;

        /// <summary>
        /// The identifier for the VisionStateMachineType_OperationalToPreoperational_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_OperationalToPreoperational_TransitionNumber = 1476;

        /// <summary>
        /// The identifier for the VisionStateMachineType_OperationalToPreoperationalAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_OperationalToPreoperationalAuto_TransitionNumber = 1478;

        /// <summary>
        /// The identifier for the VisionStateMachineType_Preoperational_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_Preoperational_StateNumber = 1480;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_CurrentState Variable.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalStepModel_CurrentState = 1482;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_CurrentState_Id Variable.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalStepModel_CurrentState_Id = 1483;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_LastTransition_Id Variable.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalStepModel_LastTransition_Id = 1488;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_Entry_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalStepModel_Entry_StateNumber = 1496;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalStepModel_EntryToExitAuto_TransitionNumber = 1498;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalStepModel_EntryToWaitAuto_TransitionNumber = 1500;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_Exit_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalStepModel_Exit_StateNumber = 1502;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_Step_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalStepModel_Step_StateNumber = 1504;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalStepModel_StepToExitAuto_TransitionNumber = 1506;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalStepModel_StepToWaitAuto_TransitionNumber = 1508;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_Sync_InputArguments Variable.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalStepModel_Sync_InputArguments = 1510;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalStepModel_Sync_OutputArguments = 1511;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_Wait_StateNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalStepModel_Wait_StateNumber = 1513;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalStepModel_WaitToStep_TransitionNumber = 1515;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalStepModel_WaitToStepAuto_TransitionNumber = 1517;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalToErrorAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalToErrorAuto_TransitionNumber = 1519;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalToHalted_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalToHalted_TransitionNumber = 1521;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalToHaltedAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalToHaltedAuto_TransitionNumber = 1523;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalToInitialized_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalToInitialized_TransitionNumber = 1525;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalToInitializedAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalToInitializedAuto_TransitionNumber = 1527;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalToOperational_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalToOperational_TransitionNumber = 1529;

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalToOperationalAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionStateMachineType_PreoperationalToOperationalAuto_TransitionNumber = 1531;

        /// <summary>
        /// The identifier for the VisionStateMachineType_Reset_InputArguments Variable.
        /// </summary>
        public const uint VisionStateMachineType_Reset_InputArguments = 1533;

        /// <summary>
        /// The identifier for the VisionStateMachineType_Reset_OutputArguments Variable.
        /// </summary>
        public const uint VisionStateMachineType_Reset_OutputArguments = 1534;

        /// <summary>
        /// The identifier for the VisionStateMachineType_SelectModeAutomatic_OutputArguments Variable.
        /// </summary>
        public const uint VisionStateMachineType_SelectModeAutomatic_OutputArguments = 1536;

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ActivateConfiguration_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ConfigurationManagement_ActivateConfiguration_InputArguments = 1540;

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ActivateConfiguration_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ConfigurationManagement_ActivateConfiguration_OutputArguments = 1541;

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ActiveConfiguration Variable.
        /// </summary>
        public const uint VisionSystemType_ConfigurationManagement_ActiveConfiguration = 1542;

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_AddConfiguration_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ConfigurationManagement_AddConfiguration_InputArguments = 1544;

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_AddConfiguration_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ConfigurationManagement_AddConfiguration_OutputArguments = 1545;

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ConfigurationTransfer_ClientProcessingTimeout Variable.
        /// </summary>
        public const uint VisionSystemType_ConfigurationManagement_ConfigurationTransfer_ClientProcessingTimeout = 1548;

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ConfigurationTransfer_GenerateFileForRead_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ConfigurationManagement_ConfigurationTransfer_GenerateFileForRead_InputArguments = 1550;

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ConfigurationTransfer_GenerateFileForRead_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ConfigurationManagement_ConfigurationTransfer_GenerateFileForRead_OutputArguments = 1551;

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ConfigurationTransfer_GenerateFileForWrite_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ConfigurationManagement_ConfigurationTransfer_GenerateFileForWrite_InputArguments = 1553;

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ConfigurationTransfer_GenerateFileForWrite_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ConfigurationManagement_ConfigurationTransfer_GenerateFileForWrite_OutputArguments = 1554;

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ConfigurationTransfer_CloseAndCommit_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ConfigurationManagement_ConfigurationTransfer_CloseAndCommit_InputArguments = 1556;

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ConfigurationTransfer_CloseAndCommit_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ConfigurationManagement_ConfigurationTransfer_CloseAndCommit_OutputArguments = 1557;

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_GetConfigurationById_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ConfigurationManagement_GetConfigurationById_InputArguments = 1559;

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_GetConfigurationById_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ConfigurationManagement_GetConfigurationById_OutputArguments = 1560;

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_GetConfigurationList_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ConfigurationManagement_GetConfigurationList_InputArguments = 1562;

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_GetConfigurationList_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ConfigurationManagement_GetConfigurationList_OutputArguments = 1563;

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ReleaseConfigurationHandle_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ConfigurationManagement_ReleaseConfigurationHandle_InputArguments = 1565;

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ReleaseConfigurationHandle_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ConfigurationManagement_ReleaseConfigurationHandle_OutputArguments = 1566;

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_RemoveConfiguration_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ConfigurationManagement_RemoveConfiguration_InputArguments = 1568;

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_RemoveConfiguration_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ConfigurationManagement_RemoveConfiguration_OutputArguments = 1569;

        /// <summary>
        /// The identifier for the VisionSystemType_DiagnosticLevel Variable.
        /// </summary>
        public const uint VisionSystemType_DiagnosticLevel = 1570;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_AddRecipe_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement_AddRecipe_InputArguments = 1573;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_AddRecipe_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement_AddRecipe_OutputArguments = 1574;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_GetRecipeListFiltered_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement_GetRecipeListFiltered_InputArguments = 1576;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_GetRecipeListFiltered_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement_GetRecipeListFiltered_OutputArguments = 1577;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_PrepareProduct_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement_PrepareProduct_InputArguments = 1579;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_PrepareProduct_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement_PrepareProduct_OutputArguments = 1580;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_PrepareRecipe_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement_PrepareRecipe_InputArguments = 1582;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_PrepareRecipe_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement_PrepareRecipe_OutputArguments = 1583;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_RecipeTransfer_ClientProcessingTimeout Variable.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement_RecipeTransfer_ClientProcessingTimeout = 1587;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_RecipeTransfer_GenerateFileForRead_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement_RecipeTransfer_GenerateFileForRead_InputArguments = 1589;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_RecipeTransfer_GenerateFileForRead_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement_RecipeTransfer_GenerateFileForRead_OutputArguments = 1590;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_RecipeTransfer_GenerateFileForWrite_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement_RecipeTransfer_GenerateFileForWrite_InputArguments = 1592;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_RecipeTransfer_GenerateFileForWrite_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement_RecipeTransfer_GenerateFileForWrite_OutputArguments = 1593;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_RecipeTransfer_CloseAndCommit_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement_RecipeTransfer_CloseAndCommit_InputArguments = 1595;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_RecipeTransfer_CloseAndCommit_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement_RecipeTransfer_CloseAndCommit_OutputArguments = 1596;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_ReleaseRecipeHandle_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement_ReleaseRecipeHandle_InputArguments = 1598;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_ReleaseRecipeHandle_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement_ReleaseRecipeHandle_OutputArguments = 1599;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_RemoveRecipe_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement_RemoveRecipe_InputArguments = 1601;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_RemoveRecipe_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement_RemoveRecipe_OutputArguments = 1602;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_UnlinkProduct_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement_UnlinkProduct_InputArguments = 1604;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_UnlinkProduct_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement_UnlinkProduct_OutputArguments = 1605;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_UnprepareProduct_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement_UnprepareProduct_InputArguments = 1607;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_UnprepareProduct_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement_UnprepareProduct_OutputArguments = 1608;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_UnprepareRecipe_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement_UnprepareRecipe_InputArguments = 1610;

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_UnprepareRecipe_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_RecipeManagement_UnprepareRecipe_OutputArguments = 1611;

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_GetResultById_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ResultManagement_GetResultById_InputArguments = 1614;

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_GetResultById_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ResultManagement_GetResultById_OutputArguments = 1615;

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_GetResultComponentsById_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ResultManagement_GetResultComponentsById_InputArguments = 1617;

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_GetResultComponentsById_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ResultManagement_GetResultComponentsById_OutputArguments = 1618;

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_GetResultListFiltered_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ResultManagement_GetResultListFiltered_InputArguments = 1620;

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_GetResultListFiltered_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ResultManagement_GetResultListFiltered_OutputArguments = 1621;

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_ReleaseResultHandle_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ResultManagement_ReleaseResultHandle_InputArguments = 1623;

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_ReleaseResultHandle_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ResultManagement_ReleaseResultHandle_OutputArguments = 1624;

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_ResultTransfer_ClientProcessingTimeout Variable.
        /// </summary>
        public const uint VisionSystemType_ResultManagement_ResultTransfer_ClientProcessingTimeout = 1627;

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_ResultTransfer_GenerateFileForRead_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ResultManagement_ResultTransfer_GenerateFileForRead_InputArguments = 1629;

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_ResultTransfer_GenerateFileForRead_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ResultManagement_ResultTransfer_GenerateFileForRead_OutputArguments = 1630;

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_ResultTransfer_GenerateFileForWrite_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ResultManagement_ResultTransfer_GenerateFileForWrite_InputArguments = 1632;

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_ResultTransfer_GenerateFileForWrite_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ResultManagement_ResultTransfer_GenerateFileForWrite_OutputArguments = 1633;

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_ResultTransfer_CloseAndCommit_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ResultManagement_ResultTransfer_CloseAndCommit_InputArguments = 1635;

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_ResultTransfer_CloseAndCommit_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_ResultManagement_ResultTransfer_CloseAndCommit_OutputArguments = 1636;

        /// <summary>
        /// The identifier for the VisionSystemType_SafetyStateManagement_ReportSafetyState_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_SafetyStateManagement_ReportSafetyState_InputArguments = 1639;

        /// <summary>
        /// The identifier for the VisionSystemType_SafetyStateManagement_ReportSafetyState_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_SafetyStateManagement_ReportSafetyState_OutputArguments = 1640;

        /// <summary>
        /// The identifier for the VisionSystemType_SafetyStateManagement_VisionSafetyInformation Variable.
        /// </summary>
        public const uint VisionSystemType_SafetyStateManagement_VisionSafetyInformation = 1641;

        /// <summary>
        /// The identifier for the VisionSystemType_SafetyStateManagement_VisionSafetyTriggered Variable.
        /// </summary>
        public const uint VisionSystemType_SafetyStateManagement_VisionSafetyTriggered = 1642;

        /// <summary>
        /// The identifier for the VisionSystemType_SystemState Variable.
        /// </summary>
        public const uint VisionSystemType_SystemState = 1643;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_CurrentState Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_CurrentState = 1645;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_CurrentState_Id Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_CurrentState_Id = 1646;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_LastTransition_Id Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_LastTransition_Id = 1651;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_CurrentState Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_CurrentState = 1659;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_CurrentState_Id Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_CurrentState_Id = 1660;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_LastTransition_Id Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_LastTransition_Id = 1665;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Abort_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Abort_InputArguments = 1673;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Abort_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Abort_OutputArguments = 1674;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecution_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecution_StateNumber = 1676;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_CurrentState Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_CurrentState = 1678;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_CurrentState_Id Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_CurrentState_Id = 1679;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_LastTransition_Id Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_LastTransition_Id = 1684;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Entry_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Entry_StateNumber = 1692;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToExitAuto_TransitionNumber = 1694;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToWaitAuto_TransitionNumber = 1696;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Exit_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Exit_StateNumber = 1698;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Step_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Step_StateNumber = 1700;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToExitAuto_TransitionNumber = 1702;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToWaitAuto_TransitionNumber = 1704;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Sync_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Sync_InputArguments = 1706;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Sync_OutputArguments = 1707;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Wait_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Wait_StateNumber = 1709;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStep_TransitionNumber = 1711;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStepAuto_TransitionNumber = 1713;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionToReadyAbort_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionToReadyAbort_TransitionNumber = 1715;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionToReadyAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionToReadyAuto_TransitionNumber = 1717;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionToReadyStop_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionToReadyStop_TransitionNumber = 1719;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Initialized_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Initialized_StateNumber = 1721;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_CurrentState Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_CurrentState = 1723;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_CurrentState_Id Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_CurrentState_Id = 1724;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_LastTransition_Id Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_LastTransition_Id = 1729;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Entry_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Entry_StateNumber = 1737;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_EntryToExitAuto_TransitionNumber = 1739;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_EntryToWaitAuto_TransitionNumber = 1741;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Exit_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Exit_StateNumber = 1743;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Step_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Step_StateNumber = 1745;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_StepToExitAuto_TransitionNumber = 1747;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_StepToWaitAuto_TransitionNumber = 1749;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Sync_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Sync_InputArguments = 1751;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Sync_OutputArguments = 1752;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Wait_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Wait_StateNumber = 1754;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_WaitToStep_TransitionNumber = 1756;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_WaitToStepAuto_TransitionNumber = 1758;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedToReadyAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedToReadyAuto_TransitionNumber = 1760;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedToReadyProduct_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedToReadyProduct_TransitionNumber = 1762;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedToReadyRecipe_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedToReadyRecipe_TransitionNumber = 1764;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Ready_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Ready_StateNumber = 1766;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_CurrentState Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_CurrentState = 1768;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_CurrentState_Id Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_CurrentState_Id = 1769;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_LastTransition_Id Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_LastTransition_Id = 1774;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Entry_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Entry_StateNumber = 1782;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_EntryToExitAuto_TransitionNumber = 1784;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_EntryToWaitAuto_TransitionNumber = 1786;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Exit_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Exit_StateNumber = 1788;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Step_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Step_StateNumber = 1790;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_StepToExitAuto_TransitionNumber = 1792;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_StepToWaitAuto_TransitionNumber = 1794;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Sync_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Sync_InputArguments = 1796;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Sync_OutputArguments = 1797;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Wait_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Wait_StateNumber = 1799;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_WaitToStep_TransitionNumber = 1801;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_WaitToStepAuto_TransitionNumber = 1803;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToContinuousExecution_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToContinuousExecution_TransitionNumber = 1805;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToContinuousExecutionAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToContinuousExecutionAuto_TransitionNumber = 1807;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToInitializedAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToInitializedAuto_TransitionNumber = 1809;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToInitializedProduct_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToInitializedProduct_TransitionNumber = 1811;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToInitializedRecipe_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToInitializedRecipe_TransitionNumber = 1813;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToSingleExecution_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToSingleExecution_TransitionNumber = 1815;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToSingleExecutionAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToSingleExecutionAuto_TransitionNumber = 1817;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SimulationMode_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SimulationMode_InputArguments = 1819;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SimulationMode_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SimulationMode_OutputArguments = 1820;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecution_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecution_StateNumber = 1822;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_CurrentState Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_CurrentState = 1824;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_CurrentState_Id Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_CurrentState_Id = 1825;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_LastTransition_Id Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_LastTransition_Id = 1830;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Entry_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Entry_StateNumber = 1838;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToExitAuto_TransitionNumber = 1840;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToWaitAuto_TransitionNumber = 1842;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Exit_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Exit_StateNumber = 1844;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Step_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Step_StateNumber = 1846;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_StepToExitAuto_TransitionNumber = 1848;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_StepToWaitAuto_TransitionNumber = 1850;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Sync_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Sync_InputArguments = 1852;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Sync_OutputArguments = 1853;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Wait_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Wait_StateNumber = 1855;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStep_TransitionNumber = 1857;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStepAuto_TransitionNumber = 1859;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionToReadyAbort_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionToReadyAbort_TransitionNumber = 1861;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionToReadyAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionToReadyAuto_TransitionNumber = 1863;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionToReadyStop_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionToReadyStop_TransitionNumber = 1865;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_StartContinuous_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_StartContinuous_InputArguments = 1867;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_StartContinuous_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_StartContinuous_OutputArguments = 1868;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_StartSingleJob_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_StartSingleJob_InputArguments = 1870;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_StartSingleJob_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_StartSingleJob_OutputArguments = 1871;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Stop_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Stop_InputArguments = 1873;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Stop_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Stop_OutputArguments = 1874;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ConfirmAll_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ConfirmAll_InputArguments = 1876;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_Error_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_Error_StateNumber = 1878;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_CurrentState Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorStepModel_CurrentState = 1880;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_CurrentState_Id Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorStepModel_CurrentState_Id = 1881;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_LastTransition_Id Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorStepModel_LastTransition_Id = 1886;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_Entry_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorStepModel_Entry_StateNumber = 1894;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorStepModel_EntryToExitAuto_TransitionNumber = 1896;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorStepModel_EntryToWaitAuto_TransitionNumber = 1898;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_Exit_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorStepModel_Exit_StateNumber = 1900;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_Step_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorStepModel_Step_StateNumber = 1902;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorStepModel_StepToExitAuto_TransitionNumber = 1904;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorStepModel_StepToWaitAuto_TransitionNumber = 1906;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_Sync_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorStepModel_Sync_InputArguments = 1908;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorStepModel_Sync_OutputArguments = 1909;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_Wait_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorStepModel_Wait_StateNumber = 1911;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorStepModel_WaitToStep_TransitionNumber = 1913;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorStepModel_WaitToStepAuto_TransitionNumber = 1915;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorToHalted_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorToHalted_TransitionNumber = 1917;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorToHaltedAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorToHaltedAuto_TransitionNumber = 1919;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorToOperationalAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorToOperationalAuto_TransitionNumber = 1921;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorToPreoperational_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorToPreoperational_TransitionNumber = 1923;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorToPreoperationalAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_ErrorToPreoperationalAuto_TransitionNumber = 1925;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_Halt_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_Halt_InputArguments = 1927;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_Halt_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_Halt_OutputArguments = 1928;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_Halted_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_Halted_StateNumber = 1930;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_CurrentState Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_HaltedStepModel_CurrentState = 1932;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_CurrentState_Id Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_HaltedStepModel_CurrentState_Id = 1933;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_LastTransition_Id Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_HaltedStepModel_LastTransition_Id = 1938;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_Entry_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_HaltedStepModel_Entry_StateNumber = 1946;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_HaltedStepModel_EntryToExitAuto_TransitionNumber = 1948;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_HaltedStepModel_EntryToWaitAuto_TransitionNumber = 1950;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_Exit_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_HaltedStepModel_Exit_StateNumber = 1952;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_Step_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_HaltedStepModel_Step_StateNumber = 1954;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_HaltedStepModel_StepToExitAuto_TransitionNumber = 1956;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_HaltedStepModel_StepToWaitAuto_TransitionNumber = 1958;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_Sync_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_HaltedStepModel_Sync_InputArguments = 1960;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_HaltedStepModel_Sync_OutputArguments = 1961;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_Wait_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_HaltedStepModel_Wait_StateNumber = 1963;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_HaltedStepModel_WaitToStep_TransitionNumber = 1965;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_HaltedStepModel_WaitToStepAuto_TransitionNumber = 1967;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedToPreoperational_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_HaltedToPreoperational_TransitionNumber = 1969;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedToPreoperationalAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_HaltedToPreoperationalAuto_TransitionNumber = 1971;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_Operational_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_Operational_StateNumber = 1973;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_OperationalToErrorAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_OperationalToErrorAuto_TransitionNumber = 1975;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_OperationalToHalted_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_OperationalToHalted_TransitionNumber = 1977;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_OperationalToHaltedAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_OperationalToHaltedAuto_TransitionNumber = 1979;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_OperationalToPreoperational_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_OperationalToPreoperational_TransitionNumber = 1981;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_OperationalToPreoperationalAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_OperationalToPreoperationalAuto_TransitionNumber = 1983;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_Preoperational_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_Preoperational_StateNumber = 1985;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_CurrentState Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalStepModel_CurrentState = 1987;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_CurrentState_Id Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalStepModel_CurrentState_Id = 1988;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_LastTransition_Id Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalStepModel_LastTransition_Id = 1993;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_Entry_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalStepModel_Entry_StateNumber = 2001;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalStepModel_EntryToExitAuto_TransitionNumber = 2003;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalStepModel_EntryToWaitAuto_TransitionNumber = 2005;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_Exit_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalStepModel_Exit_StateNumber = 2007;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_Step_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalStepModel_Step_StateNumber = 2009;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalStepModel_StepToExitAuto_TransitionNumber = 2011;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalStepModel_StepToWaitAuto_TransitionNumber = 2013;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_Sync_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalStepModel_Sync_InputArguments = 2015;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalStepModel_Sync_OutputArguments = 2016;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_Wait_StateNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalStepModel_Wait_StateNumber = 2018;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalStepModel_WaitToStep_TransitionNumber = 2020;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalStepModel_WaitToStepAuto_TransitionNumber = 2022;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalToErrorAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalToErrorAuto_TransitionNumber = 2024;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalToHalted_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalToHalted_TransitionNumber = 2026;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalToHaltedAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalToHaltedAuto_TransitionNumber = 2028;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalToInitialized_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalToInitialized_TransitionNumber = 2030;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalToInitializedAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalToInitializedAuto_TransitionNumber = 2032;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalToOperational_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalToOperational_TransitionNumber = 2034;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalToOperationalAuto_TransitionNumber Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_PreoperationalToOperationalAuto_TransitionNumber = 2036;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_Reset_InputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_Reset_InputArguments = 2038;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_Reset_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_Reset_OutputArguments = 2039;

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_SelectModeAutomatic_OutputArguments Variable.
        /// </summary>
        public const uint VisionSystemType_VisionStateMachine_SelectModeAutomatic_OutputArguments = 2041;

        /// <summary>
        /// The identifier for the Name2_XmlSchema Variable.
        /// </summary>
        public const uint Name2_XmlSchema = 2059;

        /// <summary>
        /// The identifier for the Name2_XmlSchema_NamespaceUri Variable.
        /// </summary>
        public const uint Name2_XmlSchema_NamespaceUri = 2061;

        /// <summary>
        /// The identifier for the Name2_XmlSchema_BinaryIdBaseDataType Variable.
        /// </summary>
        public const uint Name2_XmlSchema_BinaryIdBaseDataType = 2062;

        /// <summary>
        /// The identifier for the Name2_XmlSchema_ConfigurationIdDataType Variable.
        /// </summary>
        public const uint Name2_XmlSchema_ConfigurationIdDataType = 2065;

        /// <summary>
        /// The identifier for the Name2_XmlSchema_RecipeIdExternalDataType Variable.
        /// </summary>
        public const uint Name2_XmlSchema_RecipeIdExternalDataType = 2068;

        /// <summary>
        /// The identifier for the Name2_XmlSchema_RecipeIdInternalDataType Variable.
        /// </summary>
        public const uint Name2_XmlSchema_RecipeIdInternalDataType = 2071;

        /// <summary>
        /// The identifier for the Name2_XmlSchema_ConfigurationDataType Variable.
        /// </summary>
        public const uint Name2_XmlSchema_ConfigurationDataType = 2074;

        /// <summary>
        /// The identifier for the Name2_XmlSchema_ConfigurationTransferOptions Variable.
        /// </summary>
        public const uint Name2_XmlSchema_ConfigurationTransferOptions = 2077;

        /// <summary>
        /// The identifier for the Name2_XmlSchema_JobIdDataType Variable.
        /// </summary>
        public const uint Name2_XmlSchema_JobIdDataType = 2080;

        /// <summary>
        /// The identifier for the Name2_XmlSchema_MeasIdDataType Variable.
        /// </summary>
        public const uint Name2_XmlSchema_MeasIdDataType = 2083;

        /// <summary>
        /// The identifier for the Name2_XmlSchema_PartIdDataType Variable.
        /// </summary>
        public const uint Name2_XmlSchema_PartIdDataType = 2086;

        /// <summary>
        /// The identifier for the Name2_XmlSchema_ProcessingTimesDataType Variable.
        /// </summary>
        public const uint Name2_XmlSchema_ProcessingTimesDataType = 2089;

        /// <summary>
        /// The identifier for the Name2_XmlSchema_ProductDataType Variable.
        /// </summary>
        public const uint Name2_XmlSchema_ProductDataType = 2092;

        /// <summary>
        /// The identifier for the Name2_XmlSchema_ProductIdDataType Variable.
        /// </summary>
        public const uint Name2_XmlSchema_ProductIdDataType = 2095;

        /// <summary>
        /// The identifier for the Name2_XmlSchema_RecipeTransferOptions Variable.
        /// </summary>
        public const uint Name2_XmlSchema_RecipeTransferOptions = 2098;

        /// <summary>
        /// The identifier for the Name2_XmlSchema_ResultDataType Variable.
        /// </summary>
        public const uint Name2_XmlSchema_ResultDataType = 2101;

        /// <summary>
        /// The identifier for the Name2_XmlSchema_ResultIdDataType Variable.
        /// </summary>
        public const uint Name2_XmlSchema_ResultIdDataType = 2104;

        /// <summary>
        /// The identifier for the Name2_XmlSchema_ResultTransferOptions Variable.
        /// </summary>
        public const uint Name2_XmlSchema_ResultTransferOptions = 2107;

        /// <summary>
        /// The identifier for the Name2_XmlSchema_SystemStateDescriptionDataType Variable.
        /// </summary>
        public const uint Name2_XmlSchema_SystemStateDescriptionDataType = 2110;

        /// <summary>
        /// The identifier for the Name2_BinarySchema Variable.
        /// </summary>
        public const uint Name2_BinarySchema = 2130;

        /// <summary>
        /// The identifier for the Name2_BinarySchema_NamespaceUri Variable.
        /// </summary>
        public const uint Name2_BinarySchema_NamespaceUri = 2132;

        /// <summary>
        /// The identifier for the Name2_BinarySchema_BinaryIdBaseDataType Variable.
        /// </summary>
        public const uint Name2_BinarySchema_BinaryIdBaseDataType = 2133;

        /// <summary>
        /// The identifier for the Name2_BinarySchema_ConfigurationIdDataType Variable.
        /// </summary>
        public const uint Name2_BinarySchema_ConfigurationIdDataType = 2136;

        /// <summary>
        /// The identifier for the Name2_BinarySchema_RecipeIdExternalDataType Variable.
        /// </summary>
        public const uint Name2_BinarySchema_RecipeIdExternalDataType = 2139;

        /// <summary>
        /// The identifier for the Name2_BinarySchema_RecipeIdInternalDataType Variable.
        /// </summary>
        public const uint Name2_BinarySchema_RecipeIdInternalDataType = 2142;

        /// <summary>
        /// The identifier for the Name2_BinarySchema_ConfigurationDataType Variable.
        /// </summary>
        public const uint Name2_BinarySchema_ConfigurationDataType = 2145;

        /// <summary>
        /// The identifier for the Name2_BinarySchema_ConfigurationTransferOptions Variable.
        /// </summary>
        public const uint Name2_BinarySchema_ConfigurationTransferOptions = 2148;

        /// <summary>
        /// The identifier for the Name2_BinarySchema_JobIdDataType Variable.
        /// </summary>
        public const uint Name2_BinarySchema_JobIdDataType = 2151;

        /// <summary>
        /// The identifier for the Name2_BinarySchema_MeasIdDataType Variable.
        /// </summary>
        public const uint Name2_BinarySchema_MeasIdDataType = 2154;

        /// <summary>
        /// The identifier for the Name2_BinarySchema_PartIdDataType Variable.
        /// </summary>
        public const uint Name2_BinarySchema_PartIdDataType = 2157;

        /// <summary>
        /// The identifier for the Name2_BinarySchema_ProcessingTimesDataType Variable.
        /// </summary>
        public const uint Name2_BinarySchema_ProcessingTimesDataType = 2160;

        /// <summary>
        /// The identifier for the Name2_BinarySchema_ProductDataType Variable.
        /// </summary>
        public const uint Name2_BinarySchema_ProductDataType = 2163;

        /// <summary>
        /// The identifier for the Name2_BinarySchema_ProductIdDataType Variable.
        /// </summary>
        public const uint Name2_BinarySchema_ProductIdDataType = 2166;

        /// <summary>
        /// The identifier for the Name2_BinarySchema_RecipeTransferOptions Variable.
        /// </summary>
        public const uint Name2_BinarySchema_RecipeTransferOptions = 2169;

        /// <summary>
        /// The identifier for the Name2_BinarySchema_ResultDataType Variable.
        /// </summary>
        public const uint Name2_BinarySchema_ResultDataType = 2172;

        /// <summary>
        /// The identifier for the Name2_BinarySchema_ResultIdDataType Variable.
        /// </summary>
        public const uint Name2_BinarySchema_ResultIdDataType = 2175;

        /// <summary>
        /// The identifier for the Name2_BinarySchema_ResultTransferOptions Variable.
        /// </summary>
        public const uint Name2_BinarySchema_ResultTransferOptions = 2178;

        /// <summary>
        /// The identifier for the Name2_BinarySchema_SystemStateDescriptionDataType Variable.
        /// </summary>
        public const uint Name2_BinarySchema_SystemStateDescriptionDataType = 2181;
    }
    #endregion

    #region VariableType Identifiers
    /// <summary>
    /// A class that declares constants for all VariableTypes in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class VariableTypes
    {
        /// <summary>
        /// The identifier for the ResultType VariableType.
        /// </summary>
        public const uint ResultType = 28;
    }
    #endregion

    #region DataType Node Identifiers
    /// <summary>
    /// A class that declares constants for all DataTypes in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class DataTypeIds
    {
        /// <summary>
        /// The identifier for the SystemStateDataType DataType.
        /// </summary>
        public static readonly ExpandedNodeId SystemStateDataType = new ExpandedNodeId(Prefix2.DataTypes.SystemStateDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the TriStateBooleanDataType DataType.
        /// </summary>
        public static readonly ExpandedNodeId TriStateBooleanDataType = new ExpandedNodeId(Prefix2.DataTypes.TriStateBooleanDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultStateDataType DataType.
        /// </summary>
        public static readonly ExpandedNodeId ResultStateDataType = new ExpandedNodeId(Prefix2.DataTypes.ResultStateDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Handle DataType.
        /// </summary>
        public static readonly ExpandedNodeId Handle = new ExpandedNodeId(Prefix2.DataTypes.Handle, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the TrimmedString DataType.
        /// </summary>
        public static readonly ExpandedNodeId TrimmedString = new ExpandedNodeId(Prefix2.DataTypes.TrimmedString, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the BinaryIdBaseDataType DataType.
        /// </summary>
        public static readonly ExpandedNodeId BinaryIdBaseDataType = new ExpandedNodeId(Prefix2.DataTypes.BinaryIdBaseDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationIdDataType DataType.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationIdDataType = new ExpandedNodeId(Prefix2.DataTypes.ConfigurationIdDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeIdExternalDataType DataType.
        /// </summary>
        public static readonly ExpandedNodeId RecipeIdExternalDataType = new ExpandedNodeId(Prefix2.DataTypes.RecipeIdExternalDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeIdInternalDataType DataType.
        /// </summary>
        public static readonly ExpandedNodeId RecipeIdInternalDataType = new ExpandedNodeId(Prefix2.DataTypes.RecipeIdInternalDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationDataType DataType.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationDataType = new ExpandedNodeId(Prefix2.DataTypes.ConfigurationDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationTransferOptions DataType.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationTransferOptions = new ExpandedNodeId(Prefix2.DataTypes.ConfigurationTransferOptions, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the JobIdDataType DataType.
        /// </summary>
        public static readonly ExpandedNodeId JobIdDataType = new ExpandedNodeId(Prefix2.DataTypes.JobIdDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the MeasIdDataType DataType.
        /// </summary>
        public static readonly ExpandedNodeId MeasIdDataType = new ExpandedNodeId(Prefix2.DataTypes.MeasIdDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the PartIdDataType DataType.
        /// </summary>
        public static readonly ExpandedNodeId PartIdDataType = new ExpandedNodeId(Prefix2.DataTypes.PartIdDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ProcessingTimesDataType DataType.
        /// </summary>
        public static readonly ExpandedNodeId ProcessingTimesDataType = new ExpandedNodeId(Prefix2.DataTypes.ProcessingTimesDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ProductDataType DataType.
        /// </summary>
        public static readonly ExpandedNodeId ProductDataType = new ExpandedNodeId(Prefix2.DataTypes.ProductDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ProductIdDataType DataType.
        /// </summary>
        public static readonly ExpandedNodeId ProductIdDataType = new ExpandedNodeId(Prefix2.DataTypes.ProductIdDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeTransferOptions DataType.
        /// </summary>
        public static readonly ExpandedNodeId RecipeTransferOptions = new ExpandedNodeId(Prefix2.DataTypes.RecipeTransferOptions, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultDataType DataType.
        /// </summary>
        public static readonly ExpandedNodeId ResultDataType = new ExpandedNodeId(Prefix2.DataTypes.ResultDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultIdDataType DataType.
        /// </summary>
        public static readonly ExpandedNodeId ResultIdDataType = new ExpandedNodeId(Prefix2.DataTypes.ResultIdDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultTransferOptions DataType.
        /// </summary>
        public static readonly ExpandedNodeId ResultTransferOptions = new ExpandedNodeId(Prefix2.DataTypes.ResultTransferOptions, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the SystemStateDescriptionDataType DataType.
        /// </summary>
        public static readonly ExpandedNodeId SystemStateDescriptionDataType = new ExpandedNodeId(Prefix2.DataTypes.SystemStateDescriptionDataType, Prefix2.Namespaces.Name2);
    }
    #endregion

    #region Method Node Identifiers
    /// <summary>
    /// A class that declares constants for all Methods in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class MethodIds
    {
        /// <summary>
        /// The identifier for the ConfigurationManagementType_ActivateConfiguration Method.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType_ActivateConfiguration = new ExpandedNodeId(Prefix2.Methods.ConfigurationManagementType_ActivateConfiguration, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationManagementType_AddConfiguration Method.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType_AddConfiguration = new ExpandedNodeId(Prefix2.Methods.ConfigurationManagementType_AddConfiguration, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ConfigurationTransfer_GenerateFileForRead Method.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType_ConfigurationTransfer_GenerateFileForRead = new ExpandedNodeId(Prefix2.Methods.ConfigurationManagementType_ConfigurationTransfer_GenerateFileForRead, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ConfigurationTransfer_GenerateFileForWrite Method.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType_ConfigurationTransfer_GenerateFileForWrite = new ExpandedNodeId(Prefix2.Methods.ConfigurationManagementType_ConfigurationTransfer_GenerateFileForWrite, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ConfigurationTransfer_CloseAndCommit Method.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType_ConfigurationTransfer_CloseAndCommit = new ExpandedNodeId(Prefix2.Methods.ConfigurationManagementType_ConfigurationTransfer_CloseAndCommit, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationManagementType_GetConfigurationById Method.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType_GetConfigurationById = new ExpandedNodeId(Prefix2.Methods.ConfigurationManagementType_GetConfigurationById, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationManagementType_GetConfigurationList Method.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType_GetConfigurationList = new ExpandedNodeId(Prefix2.Methods.ConfigurationManagementType_GetConfigurationList, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ReleaseConfigurationHandle Method.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType_ReleaseConfigurationHandle = new ExpandedNodeId(Prefix2.Methods.ConfigurationManagementType_ReleaseConfigurationHandle, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationManagementType_RemoveConfiguration Method.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType_RemoveConfiguration = new ExpandedNodeId(Prefix2.Methods.ConfigurationManagementType_RemoveConfiguration, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationTransferType_GenerateFileForRead Method.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationTransferType_GenerateFileForRead = new ExpandedNodeId(Prefix2.Methods.ConfigurationTransferType_GenerateFileForRead, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationTransferType_GenerateFileForWrite Method.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationTransferType_GenerateFileForWrite = new ExpandedNodeId(Prefix2.Methods.ConfigurationTransferType_GenerateFileForWrite, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationTransferType_TransferState_Placeholder_Reset Method.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationTransferType_TransferState_Placeholder_Reset = new ExpandedNodeId(Prefix2.Methods.ConfigurationTransferType_TransferState_Placeholder_Reset, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_Open Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType_Recipe_Handle_Open = new ExpandedNodeId(Prefix2.Methods.RecipeFolderType_Recipe_Handle_Open, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_Close Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType_Recipe_Handle_Close = new ExpandedNodeId(Prefix2.Methods.RecipeFolderType_Recipe_Handle_Close, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_Read Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType_Recipe_Handle_Read = new ExpandedNodeId(Prefix2.Methods.RecipeFolderType_Recipe_Handle_Read, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_Write Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType_Recipe_Handle_Write = new ExpandedNodeId(Prefix2.Methods.RecipeFolderType_Recipe_Handle_Write, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_GetPosition Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType_Recipe_Handle_GetPosition = new ExpandedNodeId(Prefix2.Methods.RecipeFolderType_Recipe_Handle_GetPosition, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_SetPosition Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType_Recipe_Handle_SetPosition = new ExpandedNodeId(Prefix2.Methods.RecipeFolderType_Recipe_Handle_SetPosition, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Prepare Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType_Recipe_Prepare = new ExpandedNodeId(Prefix2.Methods.RecipeFolderType_Recipe_Prepare, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Unprepare Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType_Recipe_Unprepare = new ExpandedNodeId(Prefix2.Methods.RecipeFolderType_Recipe_Unprepare, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_Handle_Open Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_Handle_Open = new ExpandedNodeId(Prefix2.Methods.RecipeType_Handle_Open, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_Handle_Close Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_Handle_Close = new ExpandedNodeId(Prefix2.Methods.RecipeType_Handle_Close, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_Handle_Read Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_Handle_Read = new ExpandedNodeId(Prefix2.Methods.RecipeType_Handle_Read, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_Handle_Write Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_Handle_Write = new ExpandedNodeId(Prefix2.Methods.RecipeType_Handle_Write, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_Handle_GetPosition Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_Handle_GetPosition = new ExpandedNodeId(Prefix2.Methods.RecipeType_Handle_GetPosition, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_Handle_SetPosition Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_Handle_SetPosition = new ExpandedNodeId(Prefix2.Methods.RecipeType_Handle_SetPosition, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_LinkProduct Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_LinkProduct = new ExpandedNodeId(Prefix2.Methods.RecipeType_LinkProduct, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_Prepare Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_Prepare = new ExpandedNodeId(Prefix2.Methods.RecipeType_Prepare, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_UnlinkProduct Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_UnlinkProduct = new ExpandedNodeId(Prefix2.Methods.RecipeType_UnlinkProduct, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_Unprepare Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_Unprepare = new ExpandedNodeId(Prefix2.Methods.RecipeType_Unprepare, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_AddRecipe Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_AddRecipe = new ExpandedNodeId(Prefix2.Methods.RecipeManagementType_AddRecipe, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_GetRecipeListFiltered Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_GetRecipeListFiltered = new ExpandedNodeId(Prefix2.Methods.RecipeManagementType_GetRecipeListFiltered, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_PrepareProduct Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_PrepareProduct = new ExpandedNodeId(Prefix2.Methods.RecipeManagementType_PrepareProduct, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_PrepareRecipe Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_PrepareRecipe = new ExpandedNodeId(Prefix2.Methods.RecipeManagementType_PrepareRecipe, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_RecipeTransfer_GenerateFileForRead Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_RecipeTransfer_GenerateFileForRead = new ExpandedNodeId(Prefix2.Methods.RecipeManagementType_RecipeTransfer_GenerateFileForRead, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_RecipeTransfer_GenerateFileForWrite Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_RecipeTransfer_GenerateFileForWrite = new ExpandedNodeId(Prefix2.Methods.RecipeManagementType_RecipeTransfer_GenerateFileForWrite, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_RecipeTransfer_CloseAndCommit Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_RecipeTransfer_CloseAndCommit = new ExpandedNodeId(Prefix2.Methods.RecipeManagementType_RecipeTransfer_CloseAndCommit, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_ReleaseRecipeHandle Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_ReleaseRecipeHandle = new ExpandedNodeId(Prefix2.Methods.RecipeManagementType_ReleaseRecipeHandle, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_RemoveRecipe Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_RemoveRecipe = new ExpandedNodeId(Prefix2.Methods.RecipeManagementType_RemoveRecipe, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_UnlinkProduct Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_UnlinkProduct = new ExpandedNodeId(Prefix2.Methods.RecipeManagementType_UnlinkProduct, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_UnprepareProduct Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_UnprepareProduct = new ExpandedNodeId(Prefix2.Methods.RecipeManagementType_UnprepareProduct, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_UnprepareRecipe Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_UnprepareRecipe = new ExpandedNodeId(Prefix2.Methods.RecipeManagementType_UnprepareRecipe, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeTransferType_GenerateFileForRead Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeTransferType_GenerateFileForRead = new ExpandedNodeId(Prefix2.Methods.RecipeTransferType_GenerateFileForRead, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeTransferType_GenerateFileForWrite Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeTransferType_GenerateFileForWrite = new ExpandedNodeId(Prefix2.Methods.RecipeTransferType_GenerateFileForWrite, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeTransferType_TransferState_Placeholder_Reset Method.
        /// </summary>
        public static readonly ExpandedNodeId RecipeTransferType_TransferState_Placeholder_Reset = new ExpandedNodeId(Prefix2.Methods.RecipeTransferType_TransferState_Placeholder_Reset, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultManagementType_GetResultById Method.
        /// </summary>
        public static readonly ExpandedNodeId ResultManagementType_GetResultById = new ExpandedNodeId(Prefix2.Methods.ResultManagementType_GetResultById, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultManagementType_GetResultComponentsById Method.
        /// </summary>
        public static readonly ExpandedNodeId ResultManagementType_GetResultComponentsById = new ExpandedNodeId(Prefix2.Methods.ResultManagementType_GetResultComponentsById, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultManagementType_GetResultListFiltered Method.
        /// </summary>
        public static readonly ExpandedNodeId ResultManagementType_GetResultListFiltered = new ExpandedNodeId(Prefix2.Methods.ResultManagementType_GetResultListFiltered, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultManagementType_ReleaseResultHandle Method.
        /// </summary>
        public static readonly ExpandedNodeId ResultManagementType_ReleaseResultHandle = new ExpandedNodeId(Prefix2.Methods.ResultManagementType_ReleaseResultHandle, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultManagementType_ResultTransfer_GenerateFileForRead Method.
        /// </summary>
        public static readonly ExpandedNodeId ResultManagementType_ResultTransfer_GenerateFileForRead = new ExpandedNodeId(Prefix2.Methods.ResultManagementType_ResultTransfer_GenerateFileForRead, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultManagementType_ResultTransfer_GenerateFileForWrite Method.
        /// </summary>
        public static readonly ExpandedNodeId ResultManagementType_ResultTransfer_GenerateFileForWrite = new ExpandedNodeId(Prefix2.Methods.ResultManagementType_ResultTransfer_GenerateFileForWrite, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultManagementType_ResultTransfer_CloseAndCommit Method.
        /// </summary>
        public static readonly ExpandedNodeId ResultManagementType_ResultTransfer_CloseAndCommit = new ExpandedNodeId(Prefix2.Methods.ResultManagementType_ResultTransfer_CloseAndCommit, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultTransferType_GenerateFileForRead Method.
        /// </summary>
        public static readonly ExpandedNodeId ResultTransferType_GenerateFileForRead = new ExpandedNodeId(Prefix2.Methods.ResultTransferType_GenerateFileForRead, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultTransferType_TransferState_Placeholder_Reset Method.
        /// </summary>
        public static readonly ExpandedNodeId ResultTransferType_TransferState_Placeholder_Reset = new ExpandedNodeId(Prefix2.Methods.ResultTransferType_TransferState_Placeholder_Reset, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the SafetyStateManagementType_ReportSafetyState Method.
        /// </summary>
        public static readonly ExpandedNodeId SafetyStateManagementType_ReportSafetyState = new ExpandedNodeId(Prefix2.Methods.SafetyStateManagementType_ReportSafetyState, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_Abort Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_Abort = new ExpandedNodeId(Prefix2.Methods.VisionAutomaticModeStateMachineType_Abort, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Sync Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Sync = new ExpandedNodeId(Prefix2.Methods.VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Sync, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_Sync Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedStepModel_Sync = new ExpandedNodeId(Prefix2.Methods.VisionAutomaticModeStateMachineType_InitializedStepModel_Sync, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_Sync Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyStepModel_Sync = new ExpandedNodeId(Prefix2.Methods.VisionAutomaticModeStateMachineType_ReadyStepModel_Sync, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SimulationMode Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SimulationMode = new ExpandedNodeId(Prefix2.Methods.VisionAutomaticModeStateMachineType_SimulationMode, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Sync Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Sync = new ExpandedNodeId(Prefix2.Methods.VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Sync, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_StartContinuous Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_StartContinuous = new ExpandedNodeId(Prefix2.Methods.VisionAutomaticModeStateMachineType_StartContinuous, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_StartSingleJob Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_StartSingleJob = new ExpandedNodeId(Prefix2.Methods.VisionAutomaticModeStateMachineType_StartSingleJob, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_Stop Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_Stop = new ExpandedNodeId(Prefix2.Methods.VisionAutomaticModeStateMachineType_Stop, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_Sync Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionStepModelStateMachineType_Sync = new ExpandedNodeId(Prefix2.Methods.VisionStepModelStateMachineType_Sync, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_Abort Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_Abort = new ExpandedNodeId(Prefix2.Methods.VisionStateMachineType_AutomaticModeStateMachine_Abort, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Sync Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Sync = new ExpandedNodeId(Prefix2.Methods.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Sync, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Sync Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Sync = new ExpandedNodeId(Prefix2.Methods.VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Sync, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Sync Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Sync = new ExpandedNodeId(Prefix2.Methods.VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Sync, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Sync Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Sync = new ExpandedNodeId(Prefix2.Methods.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Sync, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_StartContinuous Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_StartContinuous = new ExpandedNodeId(Prefix2.Methods.VisionStateMachineType_AutomaticModeStateMachine_StartContinuous, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_StartSingleJob Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_StartSingleJob = new ExpandedNodeId(Prefix2.Methods.VisionStateMachineType_AutomaticModeStateMachine_StartSingleJob, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_Stop Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_Stop = new ExpandedNodeId(Prefix2.Methods.VisionStateMachineType_AutomaticModeStateMachine_Stop, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ConfirmAll Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ConfirmAll = new ExpandedNodeId(Prefix2.Methods.VisionStateMachineType_ConfirmAll, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_Sync Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorStepModel_Sync = new ExpandedNodeId(Prefix2.Methods.VisionStateMachineType_ErrorStepModel_Sync, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_Halt Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_Halt = new ExpandedNodeId(Prefix2.Methods.VisionStateMachineType_Halt, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_Sync Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_HaltedStepModel_Sync = new ExpandedNodeId(Prefix2.Methods.VisionStateMachineType_HaltedStepModel_Sync, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_Sync Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalStepModel_Sync = new ExpandedNodeId(Prefix2.Methods.VisionStateMachineType_PreoperationalStepModel_Sync, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_Reset Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_Reset = new ExpandedNodeId(Prefix2.Methods.VisionStateMachineType_Reset, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_SelectModeAutomatic Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_SelectModeAutomatic = new ExpandedNodeId(Prefix2.Methods.VisionStateMachineType_SelectModeAutomatic, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ActivateConfiguration Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ConfigurationManagement_ActivateConfiguration = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_ConfigurationManagement_ActivateConfiguration, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ConfigurationTransfer_GenerateFileForRead Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ConfigurationManagement_ConfigurationTransfer_GenerateFileForRead = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_ConfigurationManagement_ConfigurationTransfer_GenerateFileForRead, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ConfigurationTransfer_GenerateFileForWrite Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ConfigurationManagement_ConfigurationTransfer_GenerateFileForWrite = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_ConfigurationManagement_ConfigurationTransfer_GenerateFileForWrite, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ConfigurationTransfer_CloseAndCommit Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ConfigurationManagement_ConfigurationTransfer_CloseAndCommit = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_ConfigurationManagement_ConfigurationTransfer_CloseAndCommit, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_GetConfigurationById Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ConfigurationManagement_GetConfigurationById = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_ConfigurationManagement_GetConfigurationById, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_GetConfigurationList Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ConfigurationManagement_GetConfigurationList = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_ConfigurationManagement_GetConfigurationList, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_GetRecipeListFiltered Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement_GetRecipeListFiltered = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_RecipeManagement_GetRecipeListFiltered, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_PrepareRecipe Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement_PrepareRecipe = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_RecipeManagement_PrepareRecipe, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_RecipeTransfer_GenerateFileForRead Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement_RecipeTransfer_GenerateFileForRead = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_RecipeManagement_RecipeTransfer_GenerateFileForRead, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_RecipeTransfer_GenerateFileForWrite Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement_RecipeTransfer_GenerateFileForWrite = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_RecipeManagement_RecipeTransfer_GenerateFileForWrite, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_RecipeTransfer_CloseAndCommit Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement_RecipeTransfer_CloseAndCommit = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_RecipeManagement_RecipeTransfer_CloseAndCommit, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_UnprepareRecipe Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement_UnprepareRecipe = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_RecipeManagement_UnprepareRecipe, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_GetResultById Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ResultManagement_GetResultById = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_ResultManagement_GetResultById, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_GetResultComponentsById Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ResultManagement_GetResultComponentsById = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_ResultManagement_GetResultComponentsById, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_GetResultListFiltered Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ResultManagement_GetResultListFiltered = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_ResultManagement_GetResultListFiltered, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_ResultTransfer_GenerateFileForRead Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ResultManagement_ResultTransfer_GenerateFileForRead = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_ResultManagement_ResultTransfer_GenerateFileForRead, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_ResultTransfer_GenerateFileForWrite Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ResultManagement_ResultTransfer_GenerateFileForWrite = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_ResultManagement_ResultTransfer_GenerateFileForWrite, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_ResultTransfer_CloseAndCommit Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ResultManagement_ResultTransfer_CloseAndCommit = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_ResultManagement_ResultTransfer_CloseAndCommit, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_SafetyStateManagement_ReportSafetyState Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_SafetyStateManagement_ReportSafetyState = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_SafetyStateManagement_ReportSafetyState, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Abort Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Abort = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Abort, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Sync Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Sync = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Sync, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Sync Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Sync = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Sync, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Sync Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Sync = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Sync, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Sync Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Sync = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Sync, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_StartContinuous Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_StartContinuous = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_StartContinuous, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_StartSingleJob Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_StartSingleJob = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_StartSingleJob, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Stop Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Stop = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Stop, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_Sync Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorStepModel_Sync = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_VisionStateMachine_ErrorStepModel_Sync, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_Halt Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_Halt = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_VisionStateMachine_Halt, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_Sync Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_HaltedStepModel_Sync = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_VisionStateMachine_HaltedStepModel_Sync, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_Sync Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalStepModel_Sync = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_VisionStateMachine_PreoperationalStepModel_Sync, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_Reset Method.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_Reset = new ExpandedNodeId(Prefix2.Methods.VisionSystemType_VisionStateMachine_Reset, Prefix2.Namespaces.Name2);
    }
    #endregion

    #region Object Node Identifiers
    /// <summary>
    /// A class that declares constants for all Objects in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class ObjectIds
    {
        /// <summary>
        /// The identifier for the ConfigurationManagementType_Configurations Object.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType_Configurations = new ExpandedNodeId(Prefix2.Objects.ConfigurationManagementType_Configurations, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ConfigurationTransfer Object.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType_ConfigurationTransfer = new ExpandedNodeId(Prefix2.Objects.ConfigurationManagementType_ConfigurationTransfer, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe Object.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType_Recipe = new ExpandedNodeId(Prefix2.Objects.RecipeFolderType_Recipe, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_Handle Object.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_Handle = new ExpandedNodeId(Prefix2.Objects.RecipeType_Handle, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_Products Object.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_Products = new ExpandedNodeId(Prefix2.Objects.RecipeManagementType_Products, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_Recipes Object.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_Recipes = new ExpandedNodeId(Prefix2.Objects.RecipeManagementType_Recipes, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_RecipeTransfer Object.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_RecipeTransfer = new ExpandedNodeId(Prefix2.Objects.RecipeManagementType_RecipeTransfer, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultManagementType_Results Object.
        /// </summary>
        public static readonly ExpandedNodeId ResultManagementType_Results = new ExpandedNodeId(Prefix2.Objects.ResultManagementType_Results, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultManagementType_ResultTransfer Object.
        /// </summary>
        public static readonly ExpandedNodeId ResultManagementType_ResultTransfer = new ExpandedNodeId(Prefix2.Objects.ResultManagementType_ResultTransfer, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecution Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecution = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ContinuousExecution, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Entry Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Entry = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Entry, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_EntryToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_EntryToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_EntryToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_EntryToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_EntryToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_EntryToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Exit Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Exit = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Exit, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Step Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Step = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Step, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_StepToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_StepToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_StepToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_StepToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_StepToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_StepToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Wait Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Wait = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Wait, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_WaitToStep Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_WaitToStep = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_WaitToStep, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_WaitToStepAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_WaitToStepAuto = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_WaitToStepAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionToReadyAbort Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionToReadyAbort = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ContinuousExecutionToReadyAbort, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionToReadyAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionToReadyAuto = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ContinuousExecutionToReadyAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionToReadyStop Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionToReadyStop = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ContinuousExecutionToReadyStop, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_Initialized Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_Initialized = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_Initialized, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedStepModel = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_InitializedStepModel, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_Entry Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedStepModel_Entry = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_InitializedStepModel_Entry, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_EntryToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedStepModel_EntryToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_InitializedStepModel_EntryToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_EntryToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedStepModel_EntryToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_InitializedStepModel_EntryToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_Exit Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedStepModel_Exit = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_InitializedStepModel_Exit, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_Step Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedStepModel_Step = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_InitializedStepModel_Step, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_StepToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedStepModel_StepToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_InitializedStepModel_StepToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_StepToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedStepModel_StepToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_InitializedStepModel_StepToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_Wait Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedStepModel_Wait = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_InitializedStepModel_Wait, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_WaitToStep Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedStepModel_WaitToStep = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_InitializedStepModel_WaitToStep, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_WaitToStepAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedStepModel_WaitToStepAuto = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_InitializedStepModel_WaitToStepAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedToReadyAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedToReadyAuto = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_InitializedToReadyAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedToReadyProduct Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedToReadyProduct = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_InitializedToReadyProduct, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedToReadyRecipe Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedToReadyRecipe = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_InitializedToReadyRecipe, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_Ready Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_Ready = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_Ready, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyStepModel = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ReadyStepModel, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_Entry Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyStepModel_Entry = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ReadyStepModel_Entry, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_EntryToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyStepModel_EntryToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ReadyStepModel_EntryToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_EntryToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyStepModel_EntryToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ReadyStepModel_EntryToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_Exit Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyStepModel_Exit = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ReadyStepModel_Exit, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_Step Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyStepModel_Step = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ReadyStepModel_Step, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_StepToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyStepModel_StepToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ReadyStepModel_StepToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_StepToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyStepModel_StepToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ReadyStepModel_StepToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_Wait Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyStepModel_Wait = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ReadyStepModel_Wait, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_WaitToStep Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyStepModel_WaitToStep = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ReadyStepModel_WaitToStep, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_WaitToStepAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyStepModel_WaitToStepAuto = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ReadyStepModel_WaitToStepAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyToContinuousExecution Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyToContinuousExecution = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ReadyToContinuousExecution, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyToContinuousExecutionAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyToContinuousExecutionAuto = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ReadyToContinuousExecutionAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyToInitializedAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyToInitializedAuto = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ReadyToInitializedAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyToInitializedProduct Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyToInitializedProduct = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ReadyToInitializedProduct, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyToInitializedRecipe Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyToInitializedRecipe = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ReadyToInitializedRecipe, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyToSingleExecution Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyToSingleExecution = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ReadyToSingleExecution, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyToSingleExecutionAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyToSingleExecutionAuto = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_ReadyToSingleExecutionAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecution Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecution = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_SingleExecution, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionStepModel = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_SingleExecutionStepModel, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Entry Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Entry = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Entry, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_EntryToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionStepModel_EntryToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_SingleExecutionStepModel_EntryToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_EntryToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionStepModel_EntryToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_SingleExecutionStepModel_EntryToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Exit Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Exit = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Exit, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Step Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Step = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Step, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_StepToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionStepModel_StepToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_SingleExecutionStepModel_StepToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_StepToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionStepModel_StepToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_SingleExecutionStepModel_StepToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Wait Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Wait = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Wait, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_WaitToStep Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionStepModel_WaitToStep = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_SingleExecutionStepModel_WaitToStep, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_WaitToStepAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionStepModel_WaitToStepAuto = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_SingleExecutionStepModel_WaitToStepAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionToReadyAbort Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionToReadyAbort = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_SingleExecutionToReadyAbort, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionToReadyAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionToReadyAuto = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_SingleExecutionToReadyAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionToReadyStop Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionToReadyStop = new ExpandedNodeId(Prefix2.Objects.VisionAutomaticModeStateMachineType_SingleExecutionToReadyStop, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_Entry Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStepModelStateMachineType_Entry = new ExpandedNodeId(Prefix2.Objects.VisionStepModelStateMachineType_Entry, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_EntryToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStepModelStateMachineType_EntryToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStepModelStateMachineType_EntryToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_EntryToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStepModelStateMachineType_EntryToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStepModelStateMachineType_EntryToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_Exit Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStepModelStateMachineType_Exit = new ExpandedNodeId(Prefix2.Objects.VisionStepModelStateMachineType_Exit, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_Step Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStepModelStateMachineType_Step = new ExpandedNodeId(Prefix2.Objects.VisionStepModelStateMachineType_Step, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_StepToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStepModelStateMachineType_StepToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStepModelStateMachineType_StepToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_StepToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStepModelStateMachineType_StepToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStepModelStateMachineType_StepToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_Wait Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStepModelStateMachineType_Wait = new ExpandedNodeId(Prefix2.Objects.VisionStepModelStateMachineType_Wait, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_WaitToStep Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStepModelStateMachineType_WaitToStep = new ExpandedNodeId(Prefix2.Objects.VisionStepModelStateMachineType_WaitToStep, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_WaitToStepAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStepModelStateMachineType_WaitToStepAuto = new ExpandedNodeId(Prefix2.Objects.VisionStepModelStateMachineType_WaitToStepAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecution Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecution = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecution, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Entry Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Entry = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Entry, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Exit Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Exit = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Exit, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Step Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Step = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Step, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Wait Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Wait = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Wait, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStep Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStep = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStep, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStepAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStepAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStepAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionToReadyAbort Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionToReadyAbort = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionToReadyAbort, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionToReadyAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionToReadyAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionToReadyAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionToReadyStop Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionToReadyStop = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionToReadyStop, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_Initialized Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_Initialized = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_Initialized, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Entry Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Entry = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Entry, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_EntryToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_EntryToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_EntryToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_EntryToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_EntryToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_EntryToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Exit Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Exit = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Exit, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Step Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Step = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Step, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_StepToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_StepToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_StepToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_StepToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_StepToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_StepToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Wait Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Wait = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Wait, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_WaitToStep Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_WaitToStep = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_WaitToStep, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_WaitToStepAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_WaitToStepAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_WaitToStepAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedToReadyAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedToReadyAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_InitializedToReadyAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedToReadyProduct Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedToReadyProduct = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_InitializedToReadyProduct, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedToReadyRecipe Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedToReadyRecipe = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_InitializedToReadyRecipe, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_Ready Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_Ready = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_Ready, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Entry Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Entry = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Entry, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_EntryToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_EntryToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_EntryToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_EntryToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_EntryToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_EntryToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Exit Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Exit = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Exit, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Step Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Step = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Step, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_StepToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_StepToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_StepToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_StepToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_StepToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_StepToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Wait Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Wait = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Wait, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_WaitToStep Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_WaitToStep = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_WaitToStep, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_WaitToStepAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_WaitToStepAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_WaitToStepAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyToContinuousExecution Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyToContinuousExecution = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_ReadyToContinuousExecution, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyToContinuousExecutionAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyToContinuousExecutionAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_ReadyToContinuousExecutionAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyToInitializedAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyToInitializedAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_ReadyToInitializedAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyToInitializedProduct Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyToInitializedProduct = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_ReadyToInitializedProduct, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyToInitializedRecipe Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyToInitializedRecipe = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_ReadyToInitializedRecipe, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyToSingleExecution Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyToSingleExecution = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_ReadyToSingleExecution, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyToSingleExecutionAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyToSingleExecutionAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_ReadyToSingleExecutionAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecution Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecution = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_SingleExecution, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Entry Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Entry = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Entry, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Exit Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Exit = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Exit, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Step Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Step = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Step, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_StepToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_StepToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_StepToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_StepToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_StepToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_StepToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Wait Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Wait = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Wait, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStep Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStep = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStep, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStepAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStepAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStepAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionToReadyAbort Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionToReadyAbort = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionToReadyAbort, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionToReadyAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionToReadyAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionToReadyAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionToReadyStop Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionToReadyStop = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionToReadyStop, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_Error Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_Error = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_Error, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorStepModel = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_ErrorStepModel, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_Entry Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorStepModel_Entry = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_ErrorStepModel_Entry, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_EntryToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorStepModel_EntryToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_ErrorStepModel_EntryToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_EntryToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorStepModel_EntryToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_ErrorStepModel_EntryToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_Exit Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorStepModel_Exit = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_ErrorStepModel_Exit, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_Step Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorStepModel_Step = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_ErrorStepModel_Step, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_StepToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorStepModel_StepToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_ErrorStepModel_StepToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_StepToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorStepModel_StepToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_ErrorStepModel_StepToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_Wait Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorStepModel_Wait = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_ErrorStepModel_Wait, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_WaitToStep Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorStepModel_WaitToStep = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_ErrorStepModel_WaitToStep, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_WaitToStepAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorStepModel_WaitToStepAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_ErrorStepModel_WaitToStepAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorToHalted Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorToHalted = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_ErrorToHalted, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorToHaltedAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorToHaltedAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_ErrorToHaltedAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorToOperationalAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorToOperationalAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_ErrorToOperationalAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorToPreoperational Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorToPreoperational = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_ErrorToPreoperational, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorToPreoperationalAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorToPreoperationalAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_ErrorToPreoperationalAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_Halted Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_Halted = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_Halted, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_HaltedStepModel = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_HaltedStepModel, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_Entry Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_HaltedStepModel_Entry = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_HaltedStepModel_Entry, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_EntryToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_HaltedStepModel_EntryToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_HaltedStepModel_EntryToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_EntryToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_HaltedStepModel_EntryToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_HaltedStepModel_EntryToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_Exit Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_HaltedStepModel_Exit = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_HaltedStepModel_Exit, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_Step Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_HaltedStepModel_Step = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_HaltedStepModel_Step, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_StepToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_HaltedStepModel_StepToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_HaltedStepModel_StepToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_StepToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_HaltedStepModel_StepToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_HaltedStepModel_StepToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_Wait Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_HaltedStepModel_Wait = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_HaltedStepModel_Wait, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_WaitToStep Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_HaltedStepModel_WaitToStep = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_HaltedStepModel_WaitToStep, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_WaitToStepAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_HaltedStepModel_WaitToStepAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_HaltedStepModel_WaitToStepAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedToPreoperational Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_HaltedToPreoperational = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_HaltedToPreoperational, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedToPreoperationalAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_HaltedToPreoperationalAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_HaltedToPreoperationalAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_Operational Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_Operational = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_Operational, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_OperationalToErrorAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_OperationalToErrorAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_OperationalToErrorAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_OperationalToHalted Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_OperationalToHalted = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_OperationalToHalted, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_OperationalToHaltedAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_OperationalToHaltedAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_OperationalToHaltedAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_OperationalToPreoperational Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_OperationalToPreoperational = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_OperationalToPreoperational, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_OperationalToPreoperationalAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_OperationalToPreoperationalAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_OperationalToPreoperationalAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_Preoperational Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_Preoperational = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_Preoperational, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalStepModel = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_PreoperationalStepModel, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_Entry Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalStepModel_Entry = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_PreoperationalStepModel_Entry, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_EntryToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalStepModel_EntryToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_PreoperationalStepModel_EntryToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_EntryToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalStepModel_EntryToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_PreoperationalStepModel_EntryToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_Exit Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalStepModel_Exit = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_PreoperationalStepModel_Exit, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_Step Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalStepModel_Step = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_PreoperationalStepModel_Step, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_StepToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalStepModel_StepToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_PreoperationalStepModel_StepToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_StepToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalStepModel_StepToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_PreoperationalStepModel_StepToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_Wait Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalStepModel_Wait = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_PreoperationalStepModel_Wait, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_WaitToStep Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalStepModel_WaitToStep = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_PreoperationalStepModel_WaitToStep, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_WaitToStepAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalStepModel_WaitToStepAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_PreoperationalStepModel_WaitToStepAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalToErrorAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalToErrorAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_PreoperationalToErrorAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalToHalted Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalToHalted = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_PreoperationalToHalted, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalToHaltedAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalToHaltedAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_PreoperationalToHaltedAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalToInitialized Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalToInitialized = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_PreoperationalToInitialized, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalToInitializedAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalToInitializedAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_PreoperationalToInitializedAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalToOperational Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalToOperational = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_PreoperationalToOperational, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalToOperationalAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalToOperationalAuto = new ExpandedNodeId(Prefix2.Objects.VisionStateMachineType_PreoperationalToOperationalAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ConfigurationManagement = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_ConfigurationManagement, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_RecipeManagement, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ResultManagement = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_ResultManagement, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_SafetyStateManagement Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_SafetyStateManagement = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_SafetyStateManagement, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecution Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecution = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecution, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Entry Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Entry = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Entry, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Exit Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Exit = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Exit, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Step Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Step = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Step, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Wait Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Wait = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Wait, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStep Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStep = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStep, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStepAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStepAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStepAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionToReadyAbort Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionToReadyAbort = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionToReadyAbort, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionToReadyAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionToReadyAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionToReadyAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionToReadyStop Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionToReadyStop = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionToReadyStop, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Initialized Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Initialized = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Initialized, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Entry Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Entry = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Entry, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_EntryToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_EntryToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_EntryToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_EntryToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_EntryToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_EntryToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Exit Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Exit = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Exit, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Step Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Step = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Step, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_StepToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_StepToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_StepToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_StepToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_StepToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_StepToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Wait Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Wait = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Wait, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_WaitToStep Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_WaitToStep = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_WaitToStep, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_WaitToStepAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_WaitToStepAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_WaitToStepAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedToReadyAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedToReadyAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedToReadyAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedToReadyProduct Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedToReadyProduct = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedToReadyProduct, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedToReadyRecipe Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedToReadyRecipe = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedToReadyRecipe, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Ready Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Ready = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Ready, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Entry Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Entry = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Entry, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_EntryToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_EntryToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_EntryToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_EntryToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_EntryToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_EntryToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Exit Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Exit = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Exit, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Step Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Step = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Step, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_StepToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_StepToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_StepToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_StepToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_StepToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_StepToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Wait Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Wait = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Wait, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_WaitToStep Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_WaitToStep = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_WaitToStep, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_WaitToStepAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_WaitToStepAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_WaitToStepAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToContinuousExecution Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToContinuousExecution = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToContinuousExecution, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToContinuousExecutionAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToContinuousExecutionAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToContinuousExecutionAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToInitializedAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToInitializedAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToInitializedAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToInitializedProduct Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToInitializedProduct = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToInitializedProduct, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToInitializedRecipe Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToInitializedRecipe = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToInitializedRecipe, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToSingleExecution Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToSingleExecution = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToSingleExecution, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToSingleExecutionAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToSingleExecutionAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToSingleExecutionAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecution Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecution = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecution, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Entry Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Entry = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Entry, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Exit Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Exit = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Exit, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Step Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Step = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Step, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_StepToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_StepToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_StepToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_StepToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_StepToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_StepToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Wait Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Wait = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Wait, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStep Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStep = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStep, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStepAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStepAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStepAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionToReadyAbort Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionToReadyAbort = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionToReadyAbort, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionToReadyAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionToReadyAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionToReadyAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionToReadyStop Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionToReadyStop = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionToReadyStop, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_Error Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_Error = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_Error, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_Entry Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorStepModel_Entry = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_ErrorStepModel_Entry, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_EntryToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorStepModel_EntryToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_ErrorStepModel_EntryToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_EntryToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorStepModel_EntryToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_ErrorStepModel_EntryToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_Exit Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorStepModel_Exit = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_ErrorStepModel_Exit, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_Step Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorStepModel_Step = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_ErrorStepModel_Step, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_StepToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorStepModel_StepToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_ErrorStepModel_StepToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_StepToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorStepModel_StepToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_ErrorStepModel_StepToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_Wait Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorStepModel_Wait = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_ErrorStepModel_Wait, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_WaitToStep Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorStepModel_WaitToStep = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_ErrorStepModel_WaitToStep, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_WaitToStepAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorStepModel_WaitToStepAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_ErrorStepModel_WaitToStepAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorToHalted Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorToHalted = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_ErrorToHalted, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorToHaltedAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorToHaltedAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_ErrorToHaltedAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorToOperationalAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorToOperationalAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_ErrorToOperationalAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorToPreoperational Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorToPreoperational = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_ErrorToPreoperational, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorToPreoperationalAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorToPreoperationalAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_ErrorToPreoperationalAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_Halted Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_Halted = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_Halted, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_Entry Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_HaltedStepModel_Entry = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_HaltedStepModel_Entry, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_EntryToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_HaltedStepModel_EntryToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_HaltedStepModel_EntryToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_EntryToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_HaltedStepModel_EntryToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_HaltedStepModel_EntryToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_Exit Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_HaltedStepModel_Exit = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_HaltedStepModel_Exit, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_Step Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_HaltedStepModel_Step = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_HaltedStepModel_Step, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_StepToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_HaltedStepModel_StepToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_HaltedStepModel_StepToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_StepToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_HaltedStepModel_StepToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_HaltedStepModel_StepToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_Wait Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_HaltedStepModel_Wait = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_HaltedStepModel_Wait, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_WaitToStep Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_HaltedStepModel_WaitToStep = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_HaltedStepModel_WaitToStep, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_WaitToStepAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_HaltedStepModel_WaitToStepAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_HaltedStepModel_WaitToStepAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedToPreoperational Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_HaltedToPreoperational = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_HaltedToPreoperational, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedToPreoperationalAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_HaltedToPreoperationalAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_HaltedToPreoperationalAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_Operational Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_Operational = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_Operational, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_OperationalToErrorAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_OperationalToErrorAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_OperationalToErrorAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_OperationalToHalted Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_OperationalToHalted = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_OperationalToHalted, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_OperationalToHaltedAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_OperationalToHaltedAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_OperationalToHaltedAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_OperationalToPreoperational Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_OperationalToPreoperational = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_OperationalToPreoperational, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_OperationalToPreoperationalAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_OperationalToPreoperationalAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_OperationalToPreoperationalAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_Preoperational Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_Preoperational = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_Preoperational, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_Entry Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalStepModel_Entry = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_PreoperationalStepModel_Entry, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_EntryToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalStepModel_EntryToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_PreoperationalStepModel_EntryToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_EntryToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalStepModel_EntryToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_PreoperationalStepModel_EntryToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_Exit Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalStepModel_Exit = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_PreoperationalStepModel_Exit, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_Step Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalStepModel_Step = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_PreoperationalStepModel_Step, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_StepToExitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalStepModel_StepToExitAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_PreoperationalStepModel_StepToExitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_StepToWaitAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalStepModel_StepToWaitAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_PreoperationalStepModel_StepToWaitAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_Wait Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalStepModel_Wait = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_PreoperationalStepModel_Wait, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_WaitToStep Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalStepModel_WaitToStep = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_PreoperationalStepModel_WaitToStep, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_WaitToStepAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalStepModel_WaitToStepAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_PreoperationalStepModel_WaitToStepAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalToErrorAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalToErrorAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_PreoperationalToErrorAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalToHalted Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalToHalted = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_PreoperationalToHalted, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalToHaltedAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalToHaltedAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_PreoperationalToHaltedAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalToInitialized Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalToInitialized = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_PreoperationalToInitialized, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalToInitializedAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalToInitializedAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_PreoperationalToInitializedAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalToOperational Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalToOperational = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_PreoperationalToOperational, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalToOperationalAuto Object.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalToOperationalAuto = new ExpandedNodeId(Prefix2.Objects.VisionSystemType_VisionStateMachine_PreoperationalToOperationalAuto, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the BinaryIdBaseDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId BinaryIdBaseDataType_Encoding_DefaultXml = new ExpandedNodeId(Prefix2.Objects.BinaryIdBaseDataType_Encoding_DefaultXml, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationIdDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationIdDataType_Encoding_DefaultXml = new ExpandedNodeId(Prefix2.Objects.ConfigurationIdDataType_Encoding_DefaultXml, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeIdExternalDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId RecipeIdExternalDataType_Encoding_DefaultXml = new ExpandedNodeId(Prefix2.Objects.RecipeIdExternalDataType_Encoding_DefaultXml, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeIdInternalDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId RecipeIdInternalDataType_Encoding_DefaultXml = new ExpandedNodeId(Prefix2.Objects.RecipeIdInternalDataType_Encoding_DefaultXml, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationDataType_Encoding_DefaultXml = new ExpandedNodeId(Prefix2.Objects.ConfigurationDataType_Encoding_DefaultXml, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationTransferOptions_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationTransferOptions_Encoding_DefaultXml = new ExpandedNodeId(Prefix2.Objects.ConfigurationTransferOptions_Encoding_DefaultXml, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the JobIdDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId JobIdDataType_Encoding_DefaultXml = new ExpandedNodeId(Prefix2.Objects.JobIdDataType_Encoding_DefaultXml, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the MeasIdDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId MeasIdDataType_Encoding_DefaultXml = new ExpandedNodeId(Prefix2.Objects.MeasIdDataType_Encoding_DefaultXml, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the PartIdDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId PartIdDataType_Encoding_DefaultXml = new ExpandedNodeId(Prefix2.Objects.PartIdDataType_Encoding_DefaultXml, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ProcessingTimesDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId ProcessingTimesDataType_Encoding_DefaultXml = new ExpandedNodeId(Prefix2.Objects.ProcessingTimesDataType_Encoding_DefaultXml, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ProductDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductDataType_Encoding_DefaultXml = new ExpandedNodeId(Prefix2.Objects.ProductDataType_Encoding_DefaultXml, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ProductIdDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductIdDataType_Encoding_DefaultXml = new ExpandedNodeId(Prefix2.Objects.ProductIdDataType_Encoding_DefaultXml, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeTransferOptions_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId RecipeTransferOptions_Encoding_DefaultXml = new ExpandedNodeId(Prefix2.Objects.RecipeTransferOptions_Encoding_DefaultXml, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId ResultDataType_Encoding_DefaultXml = new ExpandedNodeId(Prefix2.Objects.ResultDataType_Encoding_DefaultXml, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultIdDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId ResultIdDataType_Encoding_DefaultXml = new ExpandedNodeId(Prefix2.Objects.ResultIdDataType_Encoding_DefaultXml, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultTransferOptions_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId ResultTransferOptions_Encoding_DefaultXml = new ExpandedNodeId(Prefix2.Objects.ResultTransferOptions_Encoding_DefaultXml, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the SystemStateDescriptionDataType_Encoding_DefaultXml Object.
        /// </summary>
        public static readonly ExpandedNodeId SystemStateDescriptionDataType_Encoding_DefaultXml = new ExpandedNodeId(Prefix2.Objects.SystemStateDescriptionDataType_Encoding_DefaultXml, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the BinaryIdBaseDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId BinaryIdBaseDataType_Encoding_DefaultBinary = new ExpandedNodeId(Prefix2.Objects.BinaryIdBaseDataType_Encoding_DefaultBinary, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationIdDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationIdDataType_Encoding_DefaultBinary = new ExpandedNodeId(Prefix2.Objects.ConfigurationIdDataType_Encoding_DefaultBinary, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeIdExternalDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId RecipeIdExternalDataType_Encoding_DefaultBinary = new ExpandedNodeId(Prefix2.Objects.RecipeIdExternalDataType_Encoding_DefaultBinary, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeIdInternalDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId RecipeIdInternalDataType_Encoding_DefaultBinary = new ExpandedNodeId(Prefix2.Objects.RecipeIdInternalDataType_Encoding_DefaultBinary, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationDataType_Encoding_DefaultBinary = new ExpandedNodeId(Prefix2.Objects.ConfigurationDataType_Encoding_DefaultBinary, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationTransferOptions_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationTransferOptions_Encoding_DefaultBinary = new ExpandedNodeId(Prefix2.Objects.ConfigurationTransferOptions_Encoding_DefaultBinary, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the JobIdDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId JobIdDataType_Encoding_DefaultBinary = new ExpandedNodeId(Prefix2.Objects.JobIdDataType_Encoding_DefaultBinary, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the MeasIdDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId MeasIdDataType_Encoding_DefaultBinary = new ExpandedNodeId(Prefix2.Objects.MeasIdDataType_Encoding_DefaultBinary, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the PartIdDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId PartIdDataType_Encoding_DefaultBinary = new ExpandedNodeId(Prefix2.Objects.PartIdDataType_Encoding_DefaultBinary, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ProcessingTimesDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId ProcessingTimesDataType_Encoding_DefaultBinary = new ExpandedNodeId(Prefix2.Objects.ProcessingTimesDataType_Encoding_DefaultBinary, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ProductDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductDataType_Encoding_DefaultBinary = new ExpandedNodeId(Prefix2.Objects.ProductDataType_Encoding_DefaultBinary, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ProductIdDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId ProductIdDataType_Encoding_DefaultBinary = new ExpandedNodeId(Prefix2.Objects.ProductIdDataType_Encoding_DefaultBinary, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeTransferOptions_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId RecipeTransferOptions_Encoding_DefaultBinary = new ExpandedNodeId(Prefix2.Objects.RecipeTransferOptions_Encoding_DefaultBinary, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId ResultDataType_Encoding_DefaultBinary = new ExpandedNodeId(Prefix2.Objects.ResultDataType_Encoding_DefaultBinary, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultIdDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId ResultIdDataType_Encoding_DefaultBinary = new ExpandedNodeId(Prefix2.Objects.ResultIdDataType_Encoding_DefaultBinary, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultTransferOptions_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId ResultTransferOptions_Encoding_DefaultBinary = new ExpandedNodeId(Prefix2.Objects.ResultTransferOptions_Encoding_DefaultBinary, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the SystemStateDescriptionDataType_Encoding_DefaultBinary Object.
        /// </summary>
        public static readonly ExpandedNodeId SystemStateDescriptionDataType_Encoding_DefaultBinary = new ExpandedNodeId(Prefix2.Objects.SystemStateDescriptionDataType_Encoding_DefaultBinary, Prefix2.Namespaces.Name2);
    }
    #endregion

    #region ObjectType Node Identifiers
    /// <summary>
    /// A class that declares constants for all ObjectTypes in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class ObjectTypeIds
    {
        /// <summary>
        /// The identifier for the AcquisitionDoneEventType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId AcquisitionDoneEventType = new ExpandedNodeId(Prefix2.ObjectTypes.AcquisitionDoneEventType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionConditionType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId VisionConditionType = new ExpandedNodeId(Prefix2.ObjectTypes.VisionConditionType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionErrorConditionType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId VisionErrorConditionType = new ExpandedNodeId(Prefix2.ObjectTypes.VisionErrorConditionType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionPersistentErrorConditionType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId VisionPersistentErrorConditionType = new ExpandedNodeId(Prefix2.ObjectTypes.VisionPersistentErrorConditionType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionWarningConditionType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId VisionWarningConditionType = new ExpandedNodeId(Prefix2.ObjectTypes.VisionWarningConditionType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the EnterStepSequenceEventType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId EnterStepSequenceEventType = new ExpandedNodeId(Prefix2.ObjectTypes.EnterStepSequenceEventType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the JobStartedEventType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId JobStartedEventType = new ExpandedNodeId(Prefix2.ObjectTypes.JobStartedEventType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the LeaveStepSequenceEventType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId LeaveStepSequenceEventType = new ExpandedNodeId(Prefix2.ObjectTypes.LeaveStepSequenceEventType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the NextStepEventType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId NextStepEventType = new ExpandedNodeId(Prefix2.ObjectTypes.NextStepEventType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ReadyEventType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId ReadyEventType = new ExpandedNodeId(Prefix2.ObjectTypes.ReadyEventType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipePreparedEventType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId RecipePreparedEventType = new ExpandedNodeId(Prefix2.ObjectTypes.RecipePreparedEventType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultReadyEventType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId ResultReadyEventType = new ExpandedNodeId(Prefix2.ObjectTypes.ResultReadyEventType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ErrorEventType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId ErrorEventType = new ExpandedNodeId(Prefix2.ObjectTypes.ErrorEventType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ErrorResolvedEventType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId ErrorResolvedEventType = new ExpandedNodeId(Prefix2.ObjectTypes.ErrorResolvedEventType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the StateChangedEventType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId StateChangedEventType = new ExpandedNodeId(Prefix2.ObjectTypes.StateChangedEventType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionEventType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId VisionEventType = new ExpandedNodeId(Prefix2.ObjectTypes.VisionEventType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionDiagnosticInfoEventType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId VisionDiagnosticInfoEventType = new ExpandedNodeId(Prefix2.ObjectTypes.VisionDiagnosticInfoEventType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionInformationEventType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId VisionInformationEventType = new ExpandedNodeId(Prefix2.ObjectTypes.VisionInformationEventType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSafetyEventType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId VisionSafetyEventType = new ExpandedNodeId(Prefix2.ObjectTypes.VisionSafetyEventType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationManagementType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType = new ExpandedNodeId(Prefix2.ObjectTypes.ConfigurationManagementType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationFolderType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationFolderType = new ExpandedNodeId(Prefix2.ObjectTypes.ConfigurationFolderType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationTransferType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationTransferType = new ExpandedNodeId(Prefix2.ObjectTypes.ConfigurationTransferType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ProductFolderType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId ProductFolderType = new ExpandedNodeId(Prefix2.ObjectTypes.ProductFolderType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType = new ExpandedNodeId(Prefix2.ObjectTypes.RecipeFolderType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType = new ExpandedNodeId(Prefix2.ObjectTypes.RecipeType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultFolderType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId ResultFolderType = new ExpandedNodeId(Prefix2.ObjectTypes.ResultFolderType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType = new ExpandedNodeId(Prefix2.ObjectTypes.RecipeManagementType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeTransferType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId RecipeTransferType = new ExpandedNodeId(Prefix2.ObjectTypes.RecipeTransferType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultManagementType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId ResultManagementType = new ExpandedNodeId(Prefix2.ObjectTypes.ResultManagementType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultTransferType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId ResultTransferType = new ExpandedNodeId(Prefix2.ObjectTypes.ResultTransferType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the SafetyStateManagementType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId SafetyStateManagementType = new ExpandedNodeId(Prefix2.ObjectTypes.SafetyStateManagementType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType = new ExpandedNodeId(Prefix2.ObjectTypes.VisionAutomaticModeStateMachineType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId VisionStepModelStateMachineType = new ExpandedNodeId(Prefix2.ObjectTypes.VisionStepModelStateMachineType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType = new ExpandedNodeId(Prefix2.ObjectTypes.VisionStateMachineType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType = new ExpandedNodeId(Prefix2.ObjectTypes.VisionSystemType, Prefix2.Namespaces.Name2);
    }
    #endregion

    #region ReferenceType Node Identifiers
    /// <summary>
    /// A class that declares constants for all ReferenceTypes in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class ReferenceTypeIds
    {
        /// <summary>
        /// The identifier for the FromTransition ReferenceType.
        /// </summary>
        public static readonly ExpandedNodeId FromTransition = new ExpandedNodeId(Prefix2.ReferenceTypes.FromTransition, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ToTransition ReferenceType.
        /// </summary>
        public static readonly ExpandedNodeId ToTransition = new ExpandedNodeId(Prefix2.ReferenceTypes.ToTransition, Prefix2.Namespaces.Name2);
    }
    #endregion

    #region Variable Node Identifiers
    /// <summary>
    /// A class that declares constants for all Variables in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class VariableIds
    {
        /// <summary>
        /// The identifier for the SystemStateDataType_EnumValues Variable.
        /// </summary>
        public static readonly ExpandedNodeId SystemStateDataType_EnumValues = new ExpandedNodeId(Prefix2.Variables.SystemStateDataType_EnumValues, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the TriStateBooleanDataType_EnumValues Variable.
        /// </summary>
        public static readonly ExpandedNodeId TriStateBooleanDataType_EnumValues = new ExpandedNodeId(Prefix2.Variables.TriStateBooleanDataType_EnumValues, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the TriStateBooleanDataType_EnumStrings Variable.
        /// </summary>
        public static readonly ExpandedNodeId TriStateBooleanDataType_EnumStrings = new ExpandedNodeId(Prefix2.Variables.TriStateBooleanDataType_EnumStrings, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultType_CreationTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultType_CreationTime = new ExpandedNodeId(Prefix2.Variables.ResultType_CreationTime, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultType_ExternalConfigurationId Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultType_ExternalConfigurationId = new ExpandedNodeId(Prefix2.Variables.ResultType_ExternalConfigurationId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultType_ExternalRecipeId Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultType_ExternalRecipeId = new ExpandedNodeId(Prefix2.Variables.ResultType_ExternalRecipeId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultType_HasTransferableDataOnFile Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultType_HasTransferableDataOnFile = new ExpandedNodeId(Prefix2.Variables.ResultType_HasTransferableDataOnFile, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultType_InternalConfigurationId Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultType_InternalConfigurationId = new ExpandedNodeId(Prefix2.Variables.ResultType_InternalConfigurationId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultType_InternalRecipeId Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultType_InternalRecipeId = new ExpandedNodeId(Prefix2.Variables.ResultType_InternalRecipeId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultType_IsPartial Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultType_IsPartial = new ExpandedNodeId(Prefix2.Variables.ResultType_IsPartial, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultType_IsSimulated Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultType_IsSimulated = new ExpandedNodeId(Prefix2.Variables.ResultType_IsSimulated, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultType_JobId Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultType_JobId = new ExpandedNodeId(Prefix2.Variables.ResultType_JobId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultType_MeasId Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultType_MeasId = new ExpandedNodeId(Prefix2.Variables.ResultType_MeasId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultType_PartId Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultType_PartId = new ExpandedNodeId(Prefix2.Variables.ResultType_PartId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultType_ProcessingTimes Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultType_ProcessingTimes = new ExpandedNodeId(Prefix2.Variables.ResultType_ProcessingTimes, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultType_ProductId Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultType_ProductId = new ExpandedNodeId(Prefix2.Variables.ResultType_ProductId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultType_ResultContent Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultType_ResultContent = new ExpandedNodeId(Prefix2.Variables.ResultType_ResultContent, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultType_ResultId Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultType_ResultId = new ExpandedNodeId(Prefix2.Variables.ResultType_ResultId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultType_ResultState Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultType_ResultState = new ExpandedNodeId(Prefix2.Variables.ResultType_ResultState, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the AcquisitionDoneEventType_JobId Variable.
        /// </summary>
        public static readonly ExpandedNodeId AcquisitionDoneEventType_JobId = new ExpandedNodeId(Prefix2.Variables.AcquisitionDoneEventType_JobId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionConditionType_EnabledState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionConditionType_EnabledState_Id = new ExpandedNodeId(Prefix2.Variables.VisionConditionType_EnabledState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionConditionType_Quality_SourceTimestamp Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionConditionType_Quality_SourceTimestamp = new ExpandedNodeId(Prefix2.Variables.VisionConditionType_Quality_SourceTimestamp, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionConditionType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionConditionType_LastSeverity_SourceTimestamp = new ExpandedNodeId(Prefix2.Variables.VisionConditionType_LastSeverity_SourceTimestamp, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionConditionType_Comment_SourceTimestamp Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionConditionType_Comment_SourceTimestamp = new ExpandedNodeId(Prefix2.Variables.VisionConditionType_Comment_SourceTimestamp, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionConditionType_AddComment_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionConditionType_AddComment_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionConditionType_AddComment_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionConditionType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionConditionType_ConditionRefresh_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionConditionType_ConditionRefresh_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionConditionType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionConditionType_ConditionRefresh2_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionConditionType_ConditionRefresh2_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionConditionType_AckedState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionConditionType_AckedState_Id = new ExpandedNodeId(Prefix2.Variables.VisionConditionType_AckedState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionConditionType_ConfirmedState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionConditionType_ConfirmedState_Id = new ExpandedNodeId(Prefix2.Variables.VisionConditionType_ConfirmedState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionConditionType_Acknowledge_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionConditionType_Acknowledge_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionConditionType_Acknowledge_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionConditionType_Confirm_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionConditionType_Confirm_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionConditionType_Confirm_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionConditionType_BlockReaction Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionConditionType_BlockReaction = new ExpandedNodeId(Prefix2.Variables.VisionConditionType_BlockReaction, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionConditionType_CausePath Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionConditionType_CausePath = new ExpandedNodeId(Prefix2.Variables.VisionConditionType_CausePath, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionConditionType_ErrorCode Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionConditionType_ErrorCode = new ExpandedNodeId(Prefix2.Variables.VisionConditionType_ErrorCode, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionConditionType_ErrorString Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionConditionType_ErrorString = new ExpandedNodeId(Prefix2.Variables.VisionConditionType_ErrorString, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionConditionType_ExternalConfigurationId Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionConditionType_ExternalConfigurationId = new ExpandedNodeId(Prefix2.Variables.VisionConditionType_ExternalConfigurationId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionConditionType_ExternalRecipeId Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionConditionType_ExternalRecipeId = new ExpandedNodeId(Prefix2.Variables.VisionConditionType_ExternalRecipeId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionConditionType_InternalConfigurationId Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionConditionType_InternalConfigurationId = new ExpandedNodeId(Prefix2.Variables.VisionConditionType_InternalConfigurationId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionConditionType_InternalRecipeId Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionConditionType_InternalRecipeId = new ExpandedNodeId(Prefix2.Variables.VisionConditionType_InternalRecipeId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionConditionType_JobId Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionConditionType_JobId = new ExpandedNodeId(Prefix2.Variables.VisionConditionType_JobId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionConditionType_MeasId Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionConditionType_MeasId = new ExpandedNodeId(Prefix2.Variables.VisionConditionType_MeasId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionConditionType_PartId Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionConditionType_PartId = new ExpandedNodeId(Prefix2.Variables.VisionConditionType_PartId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionConditionType_ProductId Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionConditionType_ProductId = new ExpandedNodeId(Prefix2.Variables.VisionConditionType_ProductId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionConditionType_ResultId Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionConditionType_ResultId = new ExpandedNodeId(Prefix2.Variables.VisionConditionType_ResultId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionConditionType_StopReaction Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionConditionType_StopReaction = new ExpandedNodeId(Prefix2.Variables.VisionConditionType_StopReaction, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionErrorConditionType_EnabledState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionErrorConditionType_EnabledState_Id = new ExpandedNodeId(Prefix2.Variables.VisionErrorConditionType_EnabledState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionErrorConditionType_Quality_SourceTimestamp Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionErrorConditionType_Quality_SourceTimestamp = new ExpandedNodeId(Prefix2.Variables.VisionErrorConditionType_Quality_SourceTimestamp, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionErrorConditionType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionErrorConditionType_LastSeverity_SourceTimestamp = new ExpandedNodeId(Prefix2.Variables.VisionErrorConditionType_LastSeverity_SourceTimestamp, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionErrorConditionType_Comment_SourceTimestamp Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionErrorConditionType_Comment_SourceTimestamp = new ExpandedNodeId(Prefix2.Variables.VisionErrorConditionType_Comment_SourceTimestamp, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionErrorConditionType_AddComment_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionErrorConditionType_AddComment_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionErrorConditionType_AddComment_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionErrorConditionType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionErrorConditionType_ConditionRefresh_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionErrorConditionType_ConditionRefresh_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionErrorConditionType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionErrorConditionType_ConditionRefresh2_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionErrorConditionType_ConditionRefresh2_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionErrorConditionType_AckedState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionErrorConditionType_AckedState_Id = new ExpandedNodeId(Prefix2.Variables.VisionErrorConditionType_AckedState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionErrorConditionType_ConfirmedState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionErrorConditionType_ConfirmedState_Id = new ExpandedNodeId(Prefix2.Variables.VisionErrorConditionType_ConfirmedState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionErrorConditionType_Acknowledge_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionErrorConditionType_Acknowledge_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionErrorConditionType_Acknowledge_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionErrorConditionType_Confirm_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionErrorConditionType_Confirm_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionErrorConditionType_Confirm_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionPersistentErrorConditionType_EnabledState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionPersistentErrorConditionType_EnabledState_Id = new ExpandedNodeId(Prefix2.Variables.VisionPersistentErrorConditionType_EnabledState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionPersistentErrorConditionType_Quality_SourceTimestamp Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionPersistentErrorConditionType_Quality_SourceTimestamp = new ExpandedNodeId(Prefix2.Variables.VisionPersistentErrorConditionType_Quality_SourceTimestamp, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionPersistentErrorConditionType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionPersistentErrorConditionType_LastSeverity_SourceTimestamp = new ExpandedNodeId(Prefix2.Variables.VisionPersistentErrorConditionType_LastSeverity_SourceTimestamp, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionPersistentErrorConditionType_Comment_SourceTimestamp Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionPersistentErrorConditionType_Comment_SourceTimestamp = new ExpandedNodeId(Prefix2.Variables.VisionPersistentErrorConditionType_Comment_SourceTimestamp, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionPersistentErrorConditionType_AddComment_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionPersistentErrorConditionType_AddComment_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionPersistentErrorConditionType_AddComment_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionPersistentErrorConditionType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionPersistentErrorConditionType_ConditionRefresh_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionPersistentErrorConditionType_ConditionRefresh_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionPersistentErrorConditionType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionPersistentErrorConditionType_ConditionRefresh2_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionPersistentErrorConditionType_ConditionRefresh2_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionPersistentErrorConditionType_AckedState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionPersistentErrorConditionType_AckedState_Id = new ExpandedNodeId(Prefix2.Variables.VisionPersistentErrorConditionType_AckedState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionPersistentErrorConditionType_ConfirmedState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionPersistentErrorConditionType_ConfirmedState_Id = new ExpandedNodeId(Prefix2.Variables.VisionPersistentErrorConditionType_ConfirmedState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionPersistentErrorConditionType_Acknowledge_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionPersistentErrorConditionType_Acknowledge_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionPersistentErrorConditionType_Acknowledge_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionPersistentErrorConditionType_Confirm_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionPersistentErrorConditionType_Confirm_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionPersistentErrorConditionType_Confirm_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionWarningConditionType_EnabledState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionWarningConditionType_EnabledState_Id = new ExpandedNodeId(Prefix2.Variables.VisionWarningConditionType_EnabledState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionWarningConditionType_Quality_SourceTimestamp Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionWarningConditionType_Quality_SourceTimestamp = new ExpandedNodeId(Prefix2.Variables.VisionWarningConditionType_Quality_SourceTimestamp, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionWarningConditionType_LastSeverity_SourceTimestamp Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionWarningConditionType_LastSeverity_SourceTimestamp = new ExpandedNodeId(Prefix2.Variables.VisionWarningConditionType_LastSeverity_SourceTimestamp, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionWarningConditionType_Comment_SourceTimestamp Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionWarningConditionType_Comment_SourceTimestamp = new ExpandedNodeId(Prefix2.Variables.VisionWarningConditionType_Comment_SourceTimestamp, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionWarningConditionType_AddComment_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionWarningConditionType_AddComment_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionWarningConditionType_AddComment_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionWarningConditionType_ConditionRefresh_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionWarningConditionType_ConditionRefresh_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionWarningConditionType_ConditionRefresh_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionWarningConditionType_ConditionRefresh2_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionWarningConditionType_ConditionRefresh2_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionWarningConditionType_ConditionRefresh2_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionWarningConditionType_AckedState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionWarningConditionType_AckedState_Id = new ExpandedNodeId(Prefix2.Variables.VisionWarningConditionType_AckedState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionWarningConditionType_ConfirmedState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionWarningConditionType_ConfirmedState_Id = new ExpandedNodeId(Prefix2.Variables.VisionWarningConditionType_ConfirmedState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionWarningConditionType_Acknowledge_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionWarningConditionType_Acknowledge_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionWarningConditionType_Acknowledge_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionWarningConditionType_Confirm_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionWarningConditionType_Confirm_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionWarningConditionType_Confirm_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the EnterStepSequenceEventType_Steps Variable.
        /// </summary>
        public static readonly ExpandedNodeId EnterStepSequenceEventType_Steps = new ExpandedNodeId(Prefix2.Variables.EnterStepSequenceEventType_Steps, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the JobStartedEventType_JobId Variable.
        /// </summary>
        public static readonly ExpandedNodeId JobStartedEventType_JobId = new ExpandedNodeId(Prefix2.Variables.JobStartedEventType_JobId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the NextStepEventType_Step Variable.
        /// </summary>
        public static readonly ExpandedNodeId NextStepEventType_Step = new ExpandedNodeId(Prefix2.Variables.NextStepEventType_Step, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ReadyEventType_JobId Variable.
        /// </summary>
        public static readonly ExpandedNodeId ReadyEventType_JobId = new ExpandedNodeId(Prefix2.Variables.ReadyEventType_JobId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipePreparedEventType_ExternalId Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipePreparedEventType_ExternalId = new ExpandedNodeId(Prefix2.Variables.RecipePreparedEventType_ExternalId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipePreparedEventType_InternalId Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipePreparedEventType_InternalId = new ExpandedNodeId(Prefix2.Variables.RecipePreparedEventType_InternalId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipePreparedEventType_ProductId Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipePreparedEventType_ProductId = new ExpandedNodeId(Prefix2.Variables.RecipePreparedEventType_ProductId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultReadyEventType_CreationTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultReadyEventType_CreationTime = new ExpandedNodeId(Prefix2.Variables.ResultReadyEventType_CreationTime, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultReadyEventType_ExternalConfigurationId Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultReadyEventType_ExternalConfigurationId = new ExpandedNodeId(Prefix2.Variables.ResultReadyEventType_ExternalConfigurationId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultReadyEventType_ExternalRecipeId Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultReadyEventType_ExternalRecipeId = new ExpandedNodeId(Prefix2.Variables.ResultReadyEventType_ExternalRecipeId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultReadyEventType_InternalConfigurationId Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultReadyEventType_InternalConfigurationId = new ExpandedNodeId(Prefix2.Variables.ResultReadyEventType_InternalConfigurationId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultReadyEventType_InternalRecipeId Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultReadyEventType_InternalRecipeId = new ExpandedNodeId(Prefix2.Variables.ResultReadyEventType_InternalRecipeId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultReadyEventType_IsPartial Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultReadyEventType_IsPartial = new ExpandedNodeId(Prefix2.Variables.ResultReadyEventType_IsPartial, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultReadyEventType_IsSimulated Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultReadyEventType_IsSimulated = new ExpandedNodeId(Prefix2.Variables.ResultReadyEventType_IsSimulated, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultReadyEventType_JobId Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultReadyEventType_JobId = new ExpandedNodeId(Prefix2.Variables.ResultReadyEventType_JobId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultReadyEventType_MeasId Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultReadyEventType_MeasId = new ExpandedNodeId(Prefix2.Variables.ResultReadyEventType_MeasId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultReadyEventType_PartId Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultReadyEventType_PartId = new ExpandedNodeId(Prefix2.Variables.ResultReadyEventType_PartId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultReadyEventType_ProcessingTimes Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultReadyEventType_ProcessingTimes = new ExpandedNodeId(Prefix2.Variables.ResultReadyEventType_ProcessingTimes, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultReadyEventType_ProductId Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultReadyEventType_ProductId = new ExpandedNodeId(Prefix2.Variables.ResultReadyEventType_ProductId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultReadyEventType_ResultContent Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultReadyEventType_ResultContent = new ExpandedNodeId(Prefix2.Variables.ResultReadyEventType_ResultContent, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultReadyEventType_ResultId Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultReadyEventType_ResultId = new ExpandedNodeId(Prefix2.Variables.ResultReadyEventType_ResultId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultReadyEventType_ResultState Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultReadyEventType_ResultState = new ExpandedNodeId(Prefix2.Variables.ResultReadyEventType_ResultState, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ErrorEventType_Transition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId ErrorEventType_Transition_Id = new ExpandedNodeId(Prefix2.Variables.ErrorEventType_Transition_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ErrorEventType_FromState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId ErrorEventType_FromState_Id = new ExpandedNodeId(Prefix2.Variables.ErrorEventType_FromState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ErrorEventType_ToState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId ErrorEventType_ToState_Id = new ExpandedNodeId(Prefix2.Variables.ErrorEventType_ToState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ErrorResolvedEventType_Transition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId ErrorResolvedEventType_Transition_Id = new ExpandedNodeId(Prefix2.Variables.ErrorResolvedEventType_Transition_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ErrorResolvedEventType_FromState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId ErrorResolvedEventType_FromState_Id = new ExpandedNodeId(Prefix2.Variables.ErrorResolvedEventType_FromState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ErrorResolvedEventType_ToState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId ErrorResolvedEventType_ToState_Id = new ExpandedNodeId(Prefix2.Variables.ErrorResolvedEventType_ToState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the StateChangedEventType_Transition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId StateChangedEventType_Transition_Id = new ExpandedNodeId(Prefix2.Variables.StateChangedEventType_Transition_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the StateChangedEventType_FromState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId StateChangedEventType_FromState_Id = new ExpandedNodeId(Prefix2.Variables.StateChangedEventType_FromState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the StateChangedEventType_ToState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId StateChangedEventType_ToState_Id = new ExpandedNodeId(Prefix2.Variables.StateChangedEventType_ToState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionEventType_CausePath Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionEventType_CausePath = new ExpandedNodeId(Prefix2.Variables.VisionEventType_CausePath, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionEventType_ExternalConfigurationId Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionEventType_ExternalConfigurationId = new ExpandedNodeId(Prefix2.Variables.VisionEventType_ExternalConfigurationId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionEventType_ExternalRecipeId Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionEventType_ExternalRecipeId = new ExpandedNodeId(Prefix2.Variables.VisionEventType_ExternalRecipeId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionEventType_InternalConfigurationId Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionEventType_InternalConfigurationId = new ExpandedNodeId(Prefix2.Variables.VisionEventType_InternalConfigurationId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionEventType_InternalRecipeId Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionEventType_InternalRecipeId = new ExpandedNodeId(Prefix2.Variables.VisionEventType_InternalRecipeId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionEventType_JobId Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionEventType_JobId = new ExpandedNodeId(Prefix2.Variables.VisionEventType_JobId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionEventType_MeasId Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionEventType_MeasId = new ExpandedNodeId(Prefix2.Variables.VisionEventType_MeasId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionEventType_PartId Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionEventType_PartId = new ExpandedNodeId(Prefix2.Variables.VisionEventType_PartId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionEventType_ProductId Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionEventType_ProductId = new ExpandedNodeId(Prefix2.Variables.VisionEventType_ProductId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionEventType_ResultId Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionEventType_ResultId = new ExpandedNodeId(Prefix2.Variables.VisionEventType_ResultId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSafetyEventType_VisionSafetyInformation Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSafetyEventType_VisionSafetyInformation = new ExpandedNodeId(Prefix2.Variables.VisionSafetyEventType_VisionSafetyInformation, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSafetyEventType_VisionSafetyTriggered Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSafetyEventType_VisionSafetyTriggered = new ExpandedNodeId(Prefix2.Variables.VisionSafetyEventType_VisionSafetyTriggered, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ActivateConfiguration_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType_ActivateConfiguration_InputArguments = new ExpandedNodeId(Prefix2.Variables.ConfigurationManagementType_ActivateConfiguration_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ActivateConfiguration_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType_ActivateConfiguration_OutputArguments = new ExpandedNodeId(Prefix2.Variables.ConfigurationManagementType_ActivateConfiguration_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ActiveConfiguration Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType_ActiveConfiguration = new ExpandedNodeId(Prefix2.Variables.ConfigurationManagementType_ActiveConfiguration, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationManagementType_AddConfiguration_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType_AddConfiguration_InputArguments = new ExpandedNodeId(Prefix2.Variables.ConfigurationManagementType_AddConfiguration_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationManagementType_AddConfiguration_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType_AddConfiguration_OutputArguments = new ExpandedNodeId(Prefix2.Variables.ConfigurationManagementType_AddConfiguration_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ConfigurationTransfer_ClientProcessingTimeout Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType_ConfigurationTransfer_ClientProcessingTimeout = new ExpandedNodeId(Prefix2.Variables.ConfigurationManagementType_ConfigurationTransfer_ClientProcessingTimeout, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ConfigurationTransfer_GenerateFileForRead_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType_ConfigurationTransfer_GenerateFileForRead_InputArguments = new ExpandedNodeId(Prefix2.Variables.ConfigurationManagementType_ConfigurationTransfer_GenerateFileForRead_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ConfigurationTransfer_GenerateFileForRead_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType_ConfigurationTransfer_GenerateFileForRead_OutputArguments = new ExpandedNodeId(Prefix2.Variables.ConfigurationManagementType_ConfigurationTransfer_GenerateFileForRead_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ConfigurationTransfer_GenerateFileForWrite_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType_ConfigurationTransfer_GenerateFileForWrite_InputArguments = new ExpandedNodeId(Prefix2.Variables.ConfigurationManagementType_ConfigurationTransfer_GenerateFileForWrite_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ConfigurationTransfer_GenerateFileForWrite_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType_ConfigurationTransfer_GenerateFileForWrite_OutputArguments = new ExpandedNodeId(Prefix2.Variables.ConfigurationManagementType_ConfigurationTransfer_GenerateFileForWrite_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ConfigurationTransfer_CloseAndCommit_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType_ConfigurationTransfer_CloseAndCommit_InputArguments = new ExpandedNodeId(Prefix2.Variables.ConfigurationManagementType_ConfigurationTransfer_CloseAndCommit_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ConfigurationTransfer_CloseAndCommit_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType_ConfigurationTransfer_CloseAndCommit_OutputArguments = new ExpandedNodeId(Prefix2.Variables.ConfigurationManagementType_ConfigurationTransfer_CloseAndCommit_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationManagementType_GetConfigurationById_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType_GetConfigurationById_InputArguments = new ExpandedNodeId(Prefix2.Variables.ConfigurationManagementType_GetConfigurationById_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationManagementType_GetConfigurationById_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType_GetConfigurationById_OutputArguments = new ExpandedNodeId(Prefix2.Variables.ConfigurationManagementType_GetConfigurationById_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationManagementType_GetConfigurationList_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType_GetConfigurationList_InputArguments = new ExpandedNodeId(Prefix2.Variables.ConfigurationManagementType_GetConfigurationList_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationManagementType_GetConfigurationList_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType_GetConfigurationList_OutputArguments = new ExpandedNodeId(Prefix2.Variables.ConfigurationManagementType_GetConfigurationList_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ReleaseConfigurationHandle_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType_ReleaseConfigurationHandle_InputArguments = new ExpandedNodeId(Prefix2.Variables.ConfigurationManagementType_ReleaseConfigurationHandle_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationManagementType_ReleaseConfigurationHandle_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType_ReleaseConfigurationHandle_OutputArguments = new ExpandedNodeId(Prefix2.Variables.ConfigurationManagementType_ReleaseConfigurationHandle_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationManagementType_RemoveConfiguration_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType_RemoveConfiguration_InputArguments = new ExpandedNodeId(Prefix2.Variables.ConfigurationManagementType_RemoveConfiguration_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationManagementType_RemoveConfiguration_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationManagementType_RemoveConfiguration_OutputArguments = new ExpandedNodeId(Prefix2.Variables.ConfigurationManagementType_RemoveConfiguration_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationFolderType_Configuration Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationFolderType_Configuration = new ExpandedNodeId(Prefix2.Variables.ConfigurationFolderType_Configuration, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationTransferType_GenerateFileForRead_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationTransferType_GenerateFileForRead_InputArguments = new ExpandedNodeId(Prefix2.Variables.ConfigurationTransferType_GenerateFileForRead_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationTransferType_GenerateFileForRead_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationTransferType_GenerateFileForRead_OutputArguments = new ExpandedNodeId(Prefix2.Variables.ConfigurationTransferType_GenerateFileForRead_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationTransferType_GenerateFileForWrite_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationTransferType_GenerateFileForWrite_InputArguments = new ExpandedNodeId(Prefix2.Variables.ConfigurationTransferType_GenerateFileForWrite_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationTransferType_GenerateFileForWrite_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationTransferType_GenerateFileForWrite_OutputArguments = new ExpandedNodeId(Prefix2.Variables.ConfigurationTransferType_GenerateFileForWrite_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationTransferType_CloseAndCommit_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationTransferType_CloseAndCommit_InputArguments = new ExpandedNodeId(Prefix2.Variables.ConfigurationTransferType_CloseAndCommit_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationTransferType_CloseAndCommit_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationTransferType_CloseAndCommit_OutputArguments = new ExpandedNodeId(Prefix2.Variables.ConfigurationTransferType_CloseAndCommit_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationTransferType_TransferState_Placeholder_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationTransferType_TransferState_Placeholder_CurrentState = new ExpandedNodeId(Prefix2.Variables.ConfigurationTransferType_TransferState_Placeholder_CurrentState, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationTransferType_TransferState_Placeholder_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationTransferType_TransferState_Placeholder_CurrentState_Id = new ExpandedNodeId(Prefix2.Variables.ConfigurationTransferType_TransferState_Placeholder_CurrentState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ConfigurationTransferType_TransferState_Placeholder_LastTransition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId ConfigurationTransferType_TransferState_Placeholder_LastTransition_Id = new ExpandedNodeId(Prefix2.Variables.ConfigurationTransferType_TransferState_Placeholder_LastTransition_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ProductFolderType_Product Variable.
        /// </summary>
        public static readonly ExpandedNodeId ProductFolderType_Product = new ExpandedNodeId(Prefix2.Variables.ProductFolderType_Product, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_Size Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType_Recipe_Handle_Size = new ExpandedNodeId(Prefix2.Variables.RecipeFolderType_Recipe_Handle_Size, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_Writable Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType_Recipe_Handle_Writable = new ExpandedNodeId(Prefix2.Variables.RecipeFolderType_Recipe_Handle_Writable, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_UserWritable Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType_Recipe_Handle_UserWritable = new ExpandedNodeId(Prefix2.Variables.RecipeFolderType_Recipe_Handle_UserWritable, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_OpenCount Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType_Recipe_Handle_OpenCount = new ExpandedNodeId(Prefix2.Variables.RecipeFolderType_Recipe_Handle_OpenCount, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_Open_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType_Recipe_Handle_Open_InputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeFolderType_Recipe_Handle_Open_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_Open_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType_Recipe_Handle_Open_OutputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeFolderType_Recipe_Handle_Open_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_Close_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType_Recipe_Handle_Close_InputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeFolderType_Recipe_Handle_Close_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_Read_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType_Recipe_Handle_Read_InputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeFolderType_Recipe_Handle_Read_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_Read_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType_Recipe_Handle_Read_OutputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeFolderType_Recipe_Handle_Read_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_Write_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType_Recipe_Handle_Write_InputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeFolderType_Recipe_Handle_Write_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_GetPosition_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType_Recipe_Handle_GetPosition_InputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeFolderType_Recipe_Handle_GetPosition_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_GetPosition_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType_Recipe_Handle_GetPosition_OutputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeFolderType_Recipe_Handle_GetPosition_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Handle_SetPosition_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType_Recipe_Handle_SetPosition_InputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeFolderType_Recipe_Handle_SetPosition_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_InternalId Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType_Recipe_InternalId = new ExpandedNodeId(Prefix2.Variables.RecipeFolderType_Recipe_InternalId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_IsPrepared Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType_Recipe_IsPrepared = new ExpandedNodeId(Prefix2.Variables.RecipeFolderType_Recipe_IsPrepared, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_LastModified Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType_Recipe_LastModified = new ExpandedNodeId(Prefix2.Variables.RecipeFolderType_Recipe_LastModified, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_LinkProduct_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType_Recipe_LinkProduct_InputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeFolderType_Recipe_LinkProduct_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_LinkProduct_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType_Recipe_LinkProduct_OutputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeFolderType_Recipe_LinkProduct_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Prepare_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType_Recipe_Prepare_OutputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeFolderType_Recipe_Prepare_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_UnlinkProduct_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType_Recipe_UnlinkProduct_InputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeFolderType_Recipe_UnlinkProduct_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_UnlinkProduct_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType_Recipe_UnlinkProduct_OutputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeFolderType_Recipe_UnlinkProduct_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeFolderType_Recipe_Unprepare_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeFolderType_Recipe_Unprepare_OutputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeFolderType_Recipe_Unprepare_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_ExternalId Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_ExternalId = new ExpandedNodeId(Prefix2.Variables.RecipeType_ExternalId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_Handle_Size Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_Handle_Size = new ExpandedNodeId(Prefix2.Variables.RecipeType_Handle_Size, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_Handle_Writable Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_Handle_Writable = new ExpandedNodeId(Prefix2.Variables.RecipeType_Handle_Writable, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_Handle_UserWritable Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_Handle_UserWritable = new ExpandedNodeId(Prefix2.Variables.RecipeType_Handle_UserWritable, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_Handle_OpenCount Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_Handle_OpenCount = new ExpandedNodeId(Prefix2.Variables.RecipeType_Handle_OpenCount, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_Handle_Open_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_Handle_Open_InputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeType_Handle_Open_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_Handle_Open_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_Handle_Open_OutputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeType_Handle_Open_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_Handle_Close_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_Handle_Close_InputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeType_Handle_Close_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_Handle_Read_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_Handle_Read_InputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeType_Handle_Read_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_Handle_Read_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_Handle_Read_OutputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeType_Handle_Read_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_Handle_Write_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_Handle_Write_InputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeType_Handle_Write_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_Handle_GetPosition_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_Handle_GetPosition_InputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeType_Handle_GetPosition_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_Handle_GetPosition_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_Handle_GetPosition_OutputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeType_Handle_GetPosition_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_Handle_SetPosition_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_Handle_SetPosition_InputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeType_Handle_SetPosition_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_InternalId Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_InternalId = new ExpandedNodeId(Prefix2.Variables.RecipeType_InternalId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_IsPrepared Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_IsPrepared = new ExpandedNodeId(Prefix2.Variables.RecipeType_IsPrepared, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_LastModified Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_LastModified = new ExpandedNodeId(Prefix2.Variables.RecipeType_LastModified, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_LinkedProducts Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_LinkedProducts = new ExpandedNodeId(Prefix2.Variables.RecipeType_LinkedProducts, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_LinkProduct_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_LinkProduct_InputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeType_LinkProduct_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_LinkProduct_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_LinkProduct_OutputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeType_LinkProduct_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_Prepare_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_Prepare_OutputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeType_Prepare_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_UnlinkProduct_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_UnlinkProduct_InputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeType_UnlinkProduct_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_UnlinkProduct_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_UnlinkProduct_OutputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeType_UnlinkProduct_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeType_Unprepare_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeType_Unprepare_OutputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeType_Unprepare_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultFolderType_ResultVariable Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultFolderType_ResultVariable = new ExpandedNodeId(Prefix2.Variables.ResultFolderType_ResultVariable, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultFolderType_ResultVariable_CreationTime Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultFolderType_ResultVariable_CreationTime = new ExpandedNodeId(Prefix2.Variables.ResultFolderType_ResultVariable_CreationTime, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultFolderType_ResultVariable_InternalConfigurationId Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultFolderType_ResultVariable_InternalConfigurationId = new ExpandedNodeId(Prefix2.Variables.ResultFolderType_ResultVariable_InternalConfigurationId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultFolderType_ResultVariable_InternalRecipeId Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultFolderType_ResultVariable_InternalRecipeId = new ExpandedNodeId(Prefix2.Variables.ResultFolderType_ResultVariable_InternalRecipeId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultFolderType_ResultVariable_IsPartial Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultFolderType_ResultVariable_IsPartial = new ExpandedNodeId(Prefix2.Variables.ResultFolderType_ResultVariable_IsPartial, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultFolderType_ResultVariable_JobId Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultFolderType_ResultVariable_JobId = new ExpandedNodeId(Prefix2.Variables.ResultFolderType_ResultVariable_JobId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultFolderType_ResultVariable_ResultId Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultFolderType_ResultVariable_ResultId = new ExpandedNodeId(Prefix2.Variables.ResultFolderType_ResultVariable_ResultId, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultFolderType_ResultVariable_ResultState Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultFolderType_ResultVariable_ResultState = new ExpandedNodeId(Prefix2.Variables.ResultFolderType_ResultVariable_ResultState, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_AddRecipe_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_AddRecipe_InputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeManagementType_AddRecipe_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_AddRecipe_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_AddRecipe_OutputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeManagementType_AddRecipe_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_GetRecipeListFiltered_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_GetRecipeListFiltered_InputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeManagementType_GetRecipeListFiltered_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_GetRecipeListFiltered_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_GetRecipeListFiltered_OutputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeManagementType_GetRecipeListFiltered_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_PrepareProduct_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_PrepareProduct_InputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeManagementType_PrepareProduct_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_PrepareProduct_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_PrepareProduct_OutputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeManagementType_PrepareProduct_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_PrepareRecipe_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_PrepareRecipe_InputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeManagementType_PrepareRecipe_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_PrepareRecipe_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_PrepareRecipe_OutputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeManagementType_PrepareRecipe_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_RecipeTransfer_ClientProcessingTimeout Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_RecipeTransfer_ClientProcessingTimeout = new ExpandedNodeId(Prefix2.Variables.RecipeManagementType_RecipeTransfer_ClientProcessingTimeout, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_RecipeTransfer_GenerateFileForRead_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_RecipeTransfer_GenerateFileForRead_InputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeManagementType_RecipeTransfer_GenerateFileForRead_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_RecipeTransfer_GenerateFileForRead_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_RecipeTransfer_GenerateFileForRead_OutputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeManagementType_RecipeTransfer_GenerateFileForRead_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_RecipeTransfer_GenerateFileForWrite_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_RecipeTransfer_GenerateFileForWrite_InputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeManagementType_RecipeTransfer_GenerateFileForWrite_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_RecipeTransfer_GenerateFileForWrite_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_RecipeTransfer_GenerateFileForWrite_OutputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeManagementType_RecipeTransfer_GenerateFileForWrite_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_RecipeTransfer_CloseAndCommit_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_RecipeTransfer_CloseAndCommit_InputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeManagementType_RecipeTransfer_CloseAndCommit_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_RecipeTransfer_CloseAndCommit_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_RecipeTransfer_CloseAndCommit_OutputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeManagementType_RecipeTransfer_CloseAndCommit_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_ReleaseRecipeHandle_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_ReleaseRecipeHandle_InputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeManagementType_ReleaseRecipeHandle_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_ReleaseRecipeHandle_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_ReleaseRecipeHandle_OutputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeManagementType_ReleaseRecipeHandle_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_RemoveRecipe_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_RemoveRecipe_InputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeManagementType_RemoveRecipe_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_RemoveRecipe_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_RemoveRecipe_OutputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeManagementType_RemoveRecipe_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_UnlinkProduct_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_UnlinkProduct_InputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeManagementType_UnlinkProduct_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_UnlinkProduct_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_UnlinkProduct_OutputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeManagementType_UnlinkProduct_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_UnprepareProduct_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_UnprepareProduct_InputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeManagementType_UnprepareProduct_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_UnprepareProduct_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_UnprepareProduct_OutputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeManagementType_UnprepareProduct_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_UnprepareRecipe_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_UnprepareRecipe_InputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeManagementType_UnprepareRecipe_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeManagementType_UnprepareRecipe_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeManagementType_UnprepareRecipe_OutputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeManagementType_UnprepareRecipe_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeTransferType_GenerateFileForRead_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeTransferType_GenerateFileForRead_InputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeTransferType_GenerateFileForRead_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeTransferType_GenerateFileForRead_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeTransferType_GenerateFileForRead_OutputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeTransferType_GenerateFileForRead_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeTransferType_GenerateFileForWrite_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeTransferType_GenerateFileForWrite_InputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeTransferType_GenerateFileForWrite_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeTransferType_GenerateFileForWrite_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeTransferType_GenerateFileForWrite_OutputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeTransferType_GenerateFileForWrite_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeTransferType_CloseAndCommit_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeTransferType_CloseAndCommit_InputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeTransferType_CloseAndCommit_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeTransferType_CloseAndCommit_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeTransferType_CloseAndCommit_OutputArguments = new ExpandedNodeId(Prefix2.Variables.RecipeTransferType_CloseAndCommit_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeTransferType_TransferState_Placeholder_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeTransferType_TransferState_Placeholder_CurrentState = new ExpandedNodeId(Prefix2.Variables.RecipeTransferType_TransferState_Placeholder_CurrentState, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeTransferType_TransferState_Placeholder_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeTransferType_TransferState_Placeholder_CurrentState_Id = new ExpandedNodeId(Prefix2.Variables.RecipeTransferType_TransferState_Placeholder_CurrentState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the RecipeTransferType_TransferState_Placeholder_LastTransition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId RecipeTransferType_TransferState_Placeholder_LastTransition_Id = new ExpandedNodeId(Prefix2.Variables.RecipeTransferType_TransferState_Placeholder_LastTransition_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultManagementType_GetResultById_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultManagementType_GetResultById_InputArguments = new ExpandedNodeId(Prefix2.Variables.ResultManagementType_GetResultById_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultManagementType_GetResultById_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultManagementType_GetResultById_OutputArguments = new ExpandedNodeId(Prefix2.Variables.ResultManagementType_GetResultById_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultManagementType_GetResultComponentsById_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultManagementType_GetResultComponentsById_InputArguments = new ExpandedNodeId(Prefix2.Variables.ResultManagementType_GetResultComponentsById_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultManagementType_GetResultComponentsById_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultManagementType_GetResultComponentsById_OutputArguments = new ExpandedNodeId(Prefix2.Variables.ResultManagementType_GetResultComponentsById_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultManagementType_GetResultListFiltered_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultManagementType_GetResultListFiltered_InputArguments = new ExpandedNodeId(Prefix2.Variables.ResultManagementType_GetResultListFiltered_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultManagementType_GetResultListFiltered_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultManagementType_GetResultListFiltered_OutputArguments = new ExpandedNodeId(Prefix2.Variables.ResultManagementType_GetResultListFiltered_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultManagementType_ReleaseResultHandle_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultManagementType_ReleaseResultHandle_InputArguments = new ExpandedNodeId(Prefix2.Variables.ResultManagementType_ReleaseResultHandle_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultManagementType_ReleaseResultHandle_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultManagementType_ReleaseResultHandle_OutputArguments = new ExpandedNodeId(Prefix2.Variables.ResultManagementType_ReleaseResultHandle_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultManagementType_ResultTransfer_ClientProcessingTimeout Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultManagementType_ResultTransfer_ClientProcessingTimeout = new ExpandedNodeId(Prefix2.Variables.ResultManagementType_ResultTransfer_ClientProcessingTimeout, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultManagementType_ResultTransfer_GenerateFileForRead_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultManagementType_ResultTransfer_GenerateFileForRead_InputArguments = new ExpandedNodeId(Prefix2.Variables.ResultManagementType_ResultTransfer_GenerateFileForRead_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultManagementType_ResultTransfer_GenerateFileForRead_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultManagementType_ResultTransfer_GenerateFileForRead_OutputArguments = new ExpandedNodeId(Prefix2.Variables.ResultManagementType_ResultTransfer_GenerateFileForRead_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultManagementType_ResultTransfer_GenerateFileForWrite_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultManagementType_ResultTransfer_GenerateFileForWrite_InputArguments = new ExpandedNodeId(Prefix2.Variables.ResultManagementType_ResultTransfer_GenerateFileForWrite_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultManagementType_ResultTransfer_GenerateFileForWrite_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultManagementType_ResultTransfer_GenerateFileForWrite_OutputArguments = new ExpandedNodeId(Prefix2.Variables.ResultManagementType_ResultTransfer_GenerateFileForWrite_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultManagementType_ResultTransfer_CloseAndCommit_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultManagementType_ResultTransfer_CloseAndCommit_InputArguments = new ExpandedNodeId(Prefix2.Variables.ResultManagementType_ResultTransfer_CloseAndCommit_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultManagementType_ResultTransfer_CloseAndCommit_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultManagementType_ResultTransfer_CloseAndCommit_OutputArguments = new ExpandedNodeId(Prefix2.Variables.ResultManagementType_ResultTransfer_CloseAndCommit_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultTransferType_GenerateFileForRead_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultTransferType_GenerateFileForRead_InputArguments = new ExpandedNodeId(Prefix2.Variables.ResultTransferType_GenerateFileForRead_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultTransferType_GenerateFileForRead_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultTransferType_GenerateFileForRead_OutputArguments = new ExpandedNodeId(Prefix2.Variables.ResultTransferType_GenerateFileForRead_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultTransferType_GenerateFileForWrite_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultTransferType_GenerateFileForWrite_InputArguments = new ExpandedNodeId(Prefix2.Variables.ResultTransferType_GenerateFileForWrite_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultTransferType_GenerateFileForWrite_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultTransferType_GenerateFileForWrite_OutputArguments = new ExpandedNodeId(Prefix2.Variables.ResultTransferType_GenerateFileForWrite_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultTransferType_CloseAndCommit_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultTransferType_CloseAndCommit_InputArguments = new ExpandedNodeId(Prefix2.Variables.ResultTransferType_CloseAndCommit_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultTransferType_CloseAndCommit_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultTransferType_CloseAndCommit_OutputArguments = new ExpandedNodeId(Prefix2.Variables.ResultTransferType_CloseAndCommit_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultTransferType_TransferState_Placeholder_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultTransferType_TransferState_Placeholder_CurrentState = new ExpandedNodeId(Prefix2.Variables.ResultTransferType_TransferState_Placeholder_CurrentState, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultTransferType_TransferState_Placeholder_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultTransferType_TransferState_Placeholder_CurrentState_Id = new ExpandedNodeId(Prefix2.Variables.ResultTransferType_TransferState_Placeholder_CurrentState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the ResultTransferType_TransferState_Placeholder_LastTransition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId ResultTransferType_TransferState_Placeholder_LastTransition_Id = new ExpandedNodeId(Prefix2.Variables.ResultTransferType_TransferState_Placeholder_LastTransition_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the SafetyStateManagementType_ReportSafetyState_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId SafetyStateManagementType_ReportSafetyState_InputArguments = new ExpandedNodeId(Prefix2.Variables.SafetyStateManagementType_ReportSafetyState_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the SafetyStateManagementType_ReportSafetyState_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId SafetyStateManagementType_ReportSafetyState_OutputArguments = new ExpandedNodeId(Prefix2.Variables.SafetyStateManagementType_ReportSafetyState_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the SafetyStateManagementType_VisionSafetyInformation Variable.
        /// </summary>
        public static readonly ExpandedNodeId SafetyStateManagementType_VisionSafetyInformation = new ExpandedNodeId(Prefix2.Variables.SafetyStateManagementType_VisionSafetyInformation, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the SafetyStateManagementType_VisionSafetyTriggered Variable.
        /// </summary>
        public static readonly ExpandedNodeId SafetyStateManagementType_VisionSafetyTriggered = new ExpandedNodeId(Prefix2.Variables.SafetyStateManagementType_VisionSafetyTriggered, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_CurrentState_Id = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_CurrentState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_LastTransition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_LastTransition_Id = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_LastTransition_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_Abort_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_Abort_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_Abort_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_Abort_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_Abort_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_Abort_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecution_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecution_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ContinuousExecution_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_CurrentState = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_CurrentState, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_CurrentState_Id = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_CurrentState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_LastTransition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_LastTransition_Id = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_LastTransition_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Entry_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Entry_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Entry_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_EntryToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_EntryToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_EntryToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_EntryToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Exit_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Exit_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Exit_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Step_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Step_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Step_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_StepToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_StepToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_StepToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_StepToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Sync_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Sync_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Sync_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Sync_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Sync_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Wait_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Wait_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_Wait_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_WaitToStep_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_WaitToStep_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_WaitToStepAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ContinuousExecutionStepModel_WaitToStepAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionToReadyAbort_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionToReadyAbort_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ContinuousExecutionToReadyAbort_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionToReadyAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionToReadyAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ContinuousExecutionToReadyAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ContinuousExecutionToReadyStop_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ContinuousExecutionToReadyStop_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ContinuousExecutionToReadyStop_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_Initialized_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_Initialized_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_Initialized_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedStepModel_CurrentState = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_InitializedStepModel_CurrentState, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedStepModel_CurrentState_Id = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_InitializedStepModel_CurrentState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_LastTransition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedStepModel_LastTransition_Id = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_InitializedStepModel_LastTransition_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_Entry_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedStepModel_Entry_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_InitializedStepModel_Entry_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedStepModel_EntryToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_InitializedStepModel_EntryToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedStepModel_EntryToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_InitializedStepModel_EntryToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_Exit_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedStepModel_Exit_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_InitializedStepModel_Exit_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_Step_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedStepModel_Step_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_InitializedStepModel_Step_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedStepModel_StepToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_InitializedStepModel_StepToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedStepModel_StepToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_InitializedStepModel_StepToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_Sync_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedStepModel_Sync_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_InitializedStepModel_Sync_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedStepModel_Sync_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_InitializedStepModel_Sync_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_Wait_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedStepModel_Wait_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_InitializedStepModel_Wait_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedStepModel_WaitToStep_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_InitializedStepModel_WaitToStep_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedStepModel_WaitToStepAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_InitializedStepModel_WaitToStepAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedToReadyAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedToReadyAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_InitializedToReadyAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedToReadyProduct_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedToReadyProduct_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_InitializedToReadyProduct_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_InitializedToReadyRecipe_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_InitializedToReadyRecipe_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_InitializedToReadyRecipe_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_Ready_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_Ready_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_Ready_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyStepModel_CurrentState = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ReadyStepModel_CurrentState, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyStepModel_CurrentState_Id = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ReadyStepModel_CurrentState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_LastTransition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyStepModel_LastTransition_Id = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ReadyStepModel_LastTransition_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_Entry_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyStepModel_Entry_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ReadyStepModel_Entry_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyStepModel_EntryToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ReadyStepModel_EntryToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyStepModel_EntryToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ReadyStepModel_EntryToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_Exit_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyStepModel_Exit_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ReadyStepModel_Exit_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_Step_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyStepModel_Step_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ReadyStepModel_Step_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyStepModel_StepToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ReadyStepModel_StepToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyStepModel_StepToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ReadyStepModel_StepToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_Sync_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyStepModel_Sync_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ReadyStepModel_Sync_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyStepModel_Sync_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ReadyStepModel_Sync_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_Wait_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyStepModel_Wait_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ReadyStepModel_Wait_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyStepModel_WaitToStep_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ReadyStepModel_WaitToStep_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyStepModel_WaitToStepAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ReadyStepModel_WaitToStepAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyToContinuousExecution_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyToContinuousExecution_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ReadyToContinuousExecution_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyToContinuousExecutionAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyToContinuousExecutionAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ReadyToContinuousExecutionAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyToInitializedAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyToInitializedAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ReadyToInitializedAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyToInitializedProduct_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyToInitializedProduct_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ReadyToInitializedProduct_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyToInitializedRecipe_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyToInitializedRecipe_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ReadyToInitializedRecipe_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyToSingleExecution_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyToSingleExecution_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ReadyToSingleExecution_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_ReadyToSingleExecutionAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_ReadyToSingleExecutionAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_ReadyToSingleExecutionAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SimulationMode_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SimulationMode_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_SimulationMode_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SimulationMode_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SimulationMode_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_SimulationMode_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecution_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecution_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_SingleExecution_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionStepModel_CurrentState = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_SingleExecutionStepModel_CurrentState, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionStepModel_CurrentState_Id = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_SingleExecutionStepModel_CurrentState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_LastTransition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionStepModel_LastTransition_Id = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_SingleExecutionStepModel_LastTransition_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Entry_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Entry_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Entry_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionStepModel_EntryToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_SingleExecutionStepModel_EntryToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionStepModel_EntryToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_SingleExecutionStepModel_EntryToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Exit_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Exit_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Exit_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Step_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Step_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Step_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionStepModel_StepToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_SingleExecutionStepModel_StepToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionStepModel_StepToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_SingleExecutionStepModel_StepToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Sync_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Sync_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Sync_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Sync_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Sync_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Wait_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Wait_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_SingleExecutionStepModel_Wait_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionStepModel_WaitToStep_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_SingleExecutionStepModel_WaitToStep_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionStepModel_WaitToStepAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_SingleExecutionStepModel_WaitToStepAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionToReadyAbort_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionToReadyAbort_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_SingleExecutionToReadyAbort_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionToReadyAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionToReadyAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_SingleExecutionToReadyAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_SingleExecutionToReadyStop_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_SingleExecutionToReadyStop_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_SingleExecutionToReadyStop_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_StartContinuous_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_StartContinuous_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_StartContinuous_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_StartContinuous_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_StartContinuous_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_StartContinuous_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_StartSingleJob_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_StartSingleJob_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_StartSingleJob_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_StartSingleJob_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_StartSingleJob_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_StartSingleJob_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_Stop_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_Stop_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_Stop_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionAutomaticModeStateMachineType_Stop_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionAutomaticModeStateMachineType_Stop_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionAutomaticModeStateMachineType_Stop_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStepModelStateMachineType_CurrentState_Id = new ExpandedNodeId(Prefix2.Variables.VisionStepModelStateMachineType_CurrentState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_LastTransition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStepModelStateMachineType_LastTransition_Id = new ExpandedNodeId(Prefix2.Variables.VisionStepModelStateMachineType_LastTransition_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_Entry_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStepModelStateMachineType_Entry_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStepModelStateMachineType_Entry_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStepModelStateMachineType_EntryToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStepModelStateMachineType_EntryToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStepModelStateMachineType_EntryToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStepModelStateMachineType_EntryToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_Exit_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStepModelStateMachineType_Exit_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStepModelStateMachineType_Exit_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_Step_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStepModelStateMachineType_Step_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStepModelStateMachineType_Step_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStepModelStateMachineType_StepToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStepModelStateMachineType_StepToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStepModelStateMachineType_StepToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStepModelStateMachineType_StepToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_Sync_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStepModelStateMachineType_Sync_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStepModelStateMachineType_Sync_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_Sync_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStepModelStateMachineType_Sync_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStepModelStateMachineType_Sync_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_Wait_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStepModelStateMachineType_Wait_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStepModelStateMachineType_Wait_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStepModelStateMachineType_WaitToStep_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStepModelStateMachineType_WaitToStep_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStepModelStateMachineType_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStepModelStateMachineType_WaitToStepAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStepModelStateMachineType_WaitToStepAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_CurrentState_Id = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_CurrentState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_LastTransition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_LastTransition_Id = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_LastTransition_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_CurrentState = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_CurrentState, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_CurrentState_Id = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_CurrentState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_LastTransition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_LastTransition_Id = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_LastTransition_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_Abort_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_Abort_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_Abort_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_Abort_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_Abort_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_Abort_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecution_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecution_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecution_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_CurrentState = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_CurrentState, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_CurrentState_Id = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_CurrentState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_LastTransition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_LastTransition_Id = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_LastTransition_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Entry_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Entry_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Entry_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Exit_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Exit_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Exit_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Step_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Step_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Step_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Sync_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Sync_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Sync_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Sync_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Sync_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Wait_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Wait_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_Wait_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStep_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStep_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStepAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStepAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionToReadyAbort_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionToReadyAbort_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionToReadyAbort_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionToReadyAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionToReadyAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionToReadyAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionToReadyStop_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionToReadyStop_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ContinuousExecutionToReadyStop_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_Initialized_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_Initialized_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_Initialized_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_CurrentState = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_CurrentState, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_CurrentState_Id = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_CurrentState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_LastTransition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_LastTransition_Id = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_LastTransition_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Entry_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Entry_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Entry_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_EntryToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_EntryToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_EntryToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_EntryToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Exit_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Exit_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Exit_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Step_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Step_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Step_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_StepToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_StepToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_StepToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_StepToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Sync_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Sync_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Sync_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Sync_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Sync_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Wait_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Wait_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_Wait_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_WaitToStep_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_WaitToStep_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_WaitToStepAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_InitializedStepModel_WaitToStepAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedToReadyAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedToReadyAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_InitializedToReadyAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedToReadyProduct_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedToReadyProduct_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_InitializedToReadyProduct_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_InitializedToReadyRecipe_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_InitializedToReadyRecipe_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_InitializedToReadyRecipe_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_Ready_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_Ready_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_Ready_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_CurrentState = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_CurrentState, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_CurrentState_Id = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_CurrentState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_LastTransition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_LastTransition_Id = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_LastTransition_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Entry_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Entry_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Entry_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_EntryToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_EntryToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_EntryToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_EntryToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Exit_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Exit_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Exit_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Step_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Step_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Step_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_StepToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_StepToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_StepToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_StepToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Sync_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Sync_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Sync_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Sync_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Sync_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Wait_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Wait_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_Wait_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_WaitToStep_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_WaitToStep_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_WaitToStepAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ReadyStepModel_WaitToStepAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyToContinuousExecution_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyToContinuousExecution_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ReadyToContinuousExecution_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyToContinuousExecutionAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyToContinuousExecutionAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ReadyToContinuousExecutionAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyToInitializedAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyToInitializedAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ReadyToInitializedAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyToInitializedProduct_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyToInitializedProduct_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ReadyToInitializedProduct_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyToInitializedRecipe_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyToInitializedRecipe_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ReadyToInitializedRecipe_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyToSingleExecution_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyToSingleExecution_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ReadyToSingleExecution_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_ReadyToSingleExecutionAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_ReadyToSingleExecutionAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_ReadyToSingleExecutionAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SimulationMode_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SimulationMode_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_SimulationMode_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SimulationMode_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SimulationMode_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_SimulationMode_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecution_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecution_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_SingleExecution_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_CurrentState = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_CurrentState, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_CurrentState_Id = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_CurrentState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_LastTransition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_LastTransition_Id = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_LastTransition_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Entry_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Entry_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Entry_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Exit_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Exit_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Exit_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Step_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Step_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Step_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_StepToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_StepToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_StepToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_StepToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Sync_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Sync_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Sync_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Sync_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Sync_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Wait_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Wait_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_Wait_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStep_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStep_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStepAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStepAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionToReadyAbort_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionToReadyAbort_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionToReadyAbort_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionToReadyAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionToReadyAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionToReadyAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionToReadyStop_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionToReadyStop_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_SingleExecutionToReadyStop_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_StartContinuous_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_StartContinuous_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_StartContinuous_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_StartContinuous_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_StartContinuous_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_StartContinuous_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_StartSingleJob_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_StartSingleJob_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_StartSingleJob_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_StartSingleJob_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_StartSingleJob_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_StartSingleJob_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_Stop_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_Stop_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_Stop_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_AutomaticModeStateMachine_Stop_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_AutomaticModeStateMachine_Stop_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_AutomaticModeStateMachine_Stop_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ConfirmAll_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ConfirmAll_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_ConfirmAll_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_Error_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_Error_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_Error_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorStepModel_CurrentState = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_ErrorStepModel_CurrentState, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorStepModel_CurrentState_Id = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_ErrorStepModel_CurrentState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_LastTransition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorStepModel_LastTransition_Id = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_ErrorStepModel_LastTransition_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_Entry_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorStepModel_Entry_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_ErrorStepModel_Entry_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorStepModel_EntryToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_ErrorStepModel_EntryToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorStepModel_EntryToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_ErrorStepModel_EntryToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_Exit_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorStepModel_Exit_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_ErrorStepModel_Exit_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_Step_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorStepModel_Step_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_ErrorStepModel_Step_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorStepModel_StepToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_ErrorStepModel_StepToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorStepModel_StepToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_ErrorStepModel_StepToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_Sync_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorStepModel_Sync_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_ErrorStepModel_Sync_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorStepModel_Sync_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_ErrorStepModel_Sync_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_Wait_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorStepModel_Wait_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_ErrorStepModel_Wait_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorStepModel_WaitToStep_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_ErrorStepModel_WaitToStep_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorStepModel_WaitToStepAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_ErrorStepModel_WaitToStepAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorToHalted_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorToHalted_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_ErrorToHalted_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorToHaltedAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorToHaltedAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_ErrorToHaltedAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorToOperationalAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorToOperationalAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_ErrorToOperationalAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorToPreoperational_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorToPreoperational_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_ErrorToPreoperational_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_ErrorToPreoperationalAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_ErrorToPreoperationalAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_ErrorToPreoperationalAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_Halt_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_Halt_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_Halt_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_Halt_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_Halt_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_Halt_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_Halted_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_Halted_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_Halted_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_HaltedStepModel_CurrentState = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_HaltedStepModel_CurrentState, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_HaltedStepModel_CurrentState_Id = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_HaltedStepModel_CurrentState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_LastTransition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_HaltedStepModel_LastTransition_Id = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_HaltedStepModel_LastTransition_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_Entry_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_HaltedStepModel_Entry_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_HaltedStepModel_Entry_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_HaltedStepModel_EntryToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_HaltedStepModel_EntryToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_HaltedStepModel_EntryToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_HaltedStepModel_EntryToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_Exit_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_HaltedStepModel_Exit_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_HaltedStepModel_Exit_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_Step_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_HaltedStepModel_Step_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_HaltedStepModel_Step_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_HaltedStepModel_StepToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_HaltedStepModel_StepToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_HaltedStepModel_StepToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_HaltedStepModel_StepToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_Sync_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_HaltedStepModel_Sync_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_HaltedStepModel_Sync_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_HaltedStepModel_Sync_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_HaltedStepModel_Sync_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_Wait_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_HaltedStepModel_Wait_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_HaltedStepModel_Wait_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_HaltedStepModel_WaitToStep_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_HaltedStepModel_WaitToStep_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_HaltedStepModel_WaitToStepAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_HaltedStepModel_WaitToStepAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedToPreoperational_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_HaltedToPreoperational_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_HaltedToPreoperational_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_HaltedToPreoperationalAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_HaltedToPreoperationalAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_HaltedToPreoperationalAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_Operational_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_Operational_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_Operational_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_OperationalToErrorAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_OperationalToErrorAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_OperationalToErrorAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_OperationalToHalted_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_OperationalToHalted_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_OperationalToHalted_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_OperationalToHaltedAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_OperationalToHaltedAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_OperationalToHaltedAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_OperationalToPreoperational_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_OperationalToPreoperational_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_OperationalToPreoperational_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_OperationalToPreoperationalAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_OperationalToPreoperationalAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_OperationalToPreoperationalAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_Preoperational_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_Preoperational_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_Preoperational_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalStepModel_CurrentState = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_PreoperationalStepModel_CurrentState, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalStepModel_CurrentState_Id = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_PreoperationalStepModel_CurrentState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_LastTransition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalStepModel_LastTransition_Id = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_PreoperationalStepModel_LastTransition_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_Entry_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalStepModel_Entry_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_PreoperationalStepModel_Entry_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalStepModel_EntryToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_PreoperationalStepModel_EntryToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalStepModel_EntryToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_PreoperationalStepModel_EntryToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_Exit_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalStepModel_Exit_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_PreoperationalStepModel_Exit_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_Step_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalStepModel_Step_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_PreoperationalStepModel_Step_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalStepModel_StepToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_PreoperationalStepModel_StepToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalStepModel_StepToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_PreoperationalStepModel_StepToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_Sync_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalStepModel_Sync_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_PreoperationalStepModel_Sync_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalStepModel_Sync_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_PreoperationalStepModel_Sync_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_Wait_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalStepModel_Wait_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_PreoperationalStepModel_Wait_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalStepModel_WaitToStep_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_PreoperationalStepModel_WaitToStep_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalStepModel_WaitToStepAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_PreoperationalStepModel_WaitToStepAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalToErrorAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalToErrorAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_PreoperationalToErrorAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalToHalted_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalToHalted_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_PreoperationalToHalted_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalToHaltedAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalToHaltedAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_PreoperationalToHaltedAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalToInitialized_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalToInitialized_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_PreoperationalToInitialized_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalToInitializedAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalToInitializedAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_PreoperationalToInitializedAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalToOperational_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalToOperational_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_PreoperationalToOperational_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_PreoperationalToOperationalAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_PreoperationalToOperationalAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_PreoperationalToOperationalAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_Reset_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_Reset_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_Reset_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_Reset_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_Reset_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_Reset_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionStateMachineType_SelectModeAutomatic_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionStateMachineType_SelectModeAutomatic_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionStateMachineType_SelectModeAutomatic_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ActivateConfiguration_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ConfigurationManagement_ActivateConfiguration_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ConfigurationManagement_ActivateConfiguration_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ActivateConfiguration_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ConfigurationManagement_ActivateConfiguration_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ConfigurationManagement_ActivateConfiguration_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ActiveConfiguration Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ConfigurationManagement_ActiveConfiguration = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ConfigurationManagement_ActiveConfiguration, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_AddConfiguration_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ConfigurationManagement_AddConfiguration_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ConfigurationManagement_AddConfiguration_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_AddConfiguration_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ConfigurationManagement_AddConfiguration_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ConfigurationManagement_AddConfiguration_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ConfigurationTransfer_ClientProcessingTimeout Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ConfigurationManagement_ConfigurationTransfer_ClientProcessingTimeout = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ConfigurationManagement_ConfigurationTransfer_ClientProcessingTimeout, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ConfigurationTransfer_GenerateFileForRead_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ConfigurationManagement_ConfigurationTransfer_GenerateFileForRead_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ConfigurationManagement_ConfigurationTransfer_GenerateFileForRead_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ConfigurationTransfer_GenerateFileForRead_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ConfigurationManagement_ConfigurationTransfer_GenerateFileForRead_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ConfigurationManagement_ConfigurationTransfer_GenerateFileForRead_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ConfigurationTransfer_GenerateFileForWrite_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ConfigurationManagement_ConfigurationTransfer_GenerateFileForWrite_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ConfigurationManagement_ConfigurationTransfer_GenerateFileForWrite_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ConfigurationTransfer_GenerateFileForWrite_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ConfigurationManagement_ConfigurationTransfer_GenerateFileForWrite_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ConfigurationManagement_ConfigurationTransfer_GenerateFileForWrite_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ConfigurationTransfer_CloseAndCommit_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ConfigurationManagement_ConfigurationTransfer_CloseAndCommit_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ConfigurationManagement_ConfigurationTransfer_CloseAndCommit_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ConfigurationTransfer_CloseAndCommit_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ConfigurationManagement_ConfigurationTransfer_CloseAndCommit_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ConfigurationManagement_ConfigurationTransfer_CloseAndCommit_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_GetConfigurationById_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ConfigurationManagement_GetConfigurationById_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ConfigurationManagement_GetConfigurationById_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_GetConfigurationById_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ConfigurationManagement_GetConfigurationById_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ConfigurationManagement_GetConfigurationById_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_GetConfigurationList_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ConfigurationManagement_GetConfigurationList_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ConfigurationManagement_GetConfigurationList_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_GetConfigurationList_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ConfigurationManagement_GetConfigurationList_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ConfigurationManagement_GetConfigurationList_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ReleaseConfigurationHandle_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ConfigurationManagement_ReleaseConfigurationHandle_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ConfigurationManagement_ReleaseConfigurationHandle_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_ReleaseConfigurationHandle_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ConfigurationManagement_ReleaseConfigurationHandle_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ConfigurationManagement_ReleaseConfigurationHandle_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_RemoveConfiguration_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ConfigurationManagement_RemoveConfiguration_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ConfigurationManagement_RemoveConfiguration_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ConfigurationManagement_RemoveConfiguration_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ConfigurationManagement_RemoveConfiguration_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ConfigurationManagement_RemoveConfiguration_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_DiagnosticLevel Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_DiagnosticLevel = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_DiagnosticLevel, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_AddRecipe_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement_AddRecipe_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_RecipeManagement_AddRecipe_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_AddRecipe_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement_AddRecipe_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_RecipeManagement_AddRecipe_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_GetRecipeListFiltered_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement_GetRecipeListFiltered_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_RecipeManagement_GetRecipeListFiltered_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_GetRecipeListFiltered_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement_GetRecipeListFiltered_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_RecipeManagement_GetRecipeListFiltered_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_PrepareProduct_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement_PrepareProduct_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_RecipeManagement_PrepareProduct_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_PrepareProduct_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement_PrepareProduct_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_RecipeManagement_PrepareProduct_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_PrepareRecipe_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement_PrepareRecipe_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_RecipeManagement_PrepareRecipe_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_PrepareRecipe_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement_PrepareRecipe_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_RecipeManagement_PrepareRecipe_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_RecipeTransfer_ClientProcessingTimeout Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement_RecipeTransfer_ClientProcessingTimeout = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_RecipeManagement_RecipeTransfer_ClientProcessingTimeout, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_RecipeTransfer_GenerateFileForRead_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement_RecipeTransfer_GenerateFileForRead_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_RecipeManagement_RecipeTransfer_GenerateFileForRead_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_RecipeTransfer_GenerateFileForRead_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement_RecipeTransfer_GenerateFileForRead_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_RecipeManagement_RecipeTransfer_GenerateFileForRead_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_RecipeTransfer_GenerateFileForWrite_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement_RecipeTransfer_GenerateFileForWrite_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_RecipeManagement_RecipeTransfer_GenerateFileForWrite_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_RecipeTransfer_GenerateFileForWrite_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement_RecipeTransfer_GenerateFileForWrite_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_RecipeManagement_RecipeTransfer_GenerateFileForWrite_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_RecipeTransfer_CloseAndCommit_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement_RecipeTransfer_CloseAndCommit_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_RecipeManagement_RecipeTransfer_CloseAndCommit_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_RecipeTransfer_CloseAndCommit_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement_RecipeTransfer_CloseAndCommit_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_RecipeManagement_RecipeTransfer_CloseAndCommit_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_ReleaseRecipeHandle_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement_ReleaseRecipeHandle_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_RecipeManagement_ReleaseRecipeHandle_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_ReleaseRecipeHandle_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement_ReleaseRecipeHandle_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_RecipeManagement_ReleaseRecipeHandle_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_RemoveRecipe_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement_RemoveRecipe_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_RecipeManagement_RemoveRecipe_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_RemoveRecipe_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement_RemoveRecipe_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_RecipeManagement_RemoveRecipe_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_UnlinkProduct_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement_UnlinkProduct_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_RecipeManagement_UnlinkProduct_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_UnlinkProduct_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement_UnlinkProduct_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_RecipeManagement_UnlinkProduct_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_UnprepareProduct_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement_UnprepareProduct_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_RecipeManagement_UnprepareProduct_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_UnprepareProduct_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement_UnprepareProduct_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_RecipeManagement_UnprepareProduct_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_UnprepareRecipe_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement_UnprepareRecipe_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_RecipeManagement_UnprepareRecipe_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_RecipeManagement_UnprepareRecipe_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_RecipeManagement_UnprepareRecipe_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_RecipeManagement_UnprepareRecipe_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_GetResultById_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ResultManagement_GetResultById_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ResultManagement_GetResultById_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_GetResultById_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ResultManagement_GetResultById_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ResultManagement_GetResultById_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_GetResultComponentsById_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ResultManagement_GetResultComponentsById_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ResultManagement_GetResultComponentsById_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_GetResultComponentsById_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ResultManagement_GetResultComponentsById_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ResultManagement_GetResultComponentsById_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_GetResultListFiltered_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ResultManagement_GetResultListFiltered_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ResultManagement_GetResultListFiltered_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_GetResultListFiltered_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ResultManagement_GetResultListFiltered_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ResultManagement_GetResultListFiltered_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_ReleaseResultHandle_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ResultManagement_ReleaseResultHandle_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ResultManagement_ReleaseResultHandle_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_ReleaseResultHandle_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ResultManagement_ReleaseResultHandle_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ResultManagement_ReleaseResultHandle_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_ResultTransfer_ClientProcessingTimeout Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ResultManagement_ResultTransfer_ClientProcessingTimeout = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ResultManagement_ResultTransfer_ClientProcessingTimeout, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_ResultTransfer_GenerateFileForRead_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ResultManagement_ResultTransfer_GenerateFileForRead_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ResultManagement_ResultTransfer_GenerateFileForRead_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_ResultTransfer_GenerateFileForRead_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ResultManagement_ResultTransfer_GenerateFileForRead_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ResultManagement_ResultTransfer_GenerateFileForRead_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_ResultTransfer_GenerateFileForWrite_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ResultManagement_ResultTransfer_GenerateFileForWrite_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ResultManagement_ResultTransfer_GenerateFileForWrite_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_ResultTransfer_GenerateFileForWrite_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ResultManagement_ResultTransfer_GenerateFileForWrite_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ResultManagement_ResultTransfer_GenerateFileForWrite_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_ResultTransfer_CloseAndCommit_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ResultManagement_ResultTransfer_CloseAndCommit_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ResultManagement_ResultTransfer_CloseAndCommit_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_ResultManagement_ResultTransfer_CloseAndCommit_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_ResultManagement_ResultTransfer_CloseAndCommit_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_ResultManagement_ResultTransfer_CloseAndCommit_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_SafetyStateManagement_ReportSafetyState_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_SafetyStateManagement_ReportSafetyState_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_SafetyStateManagement_ReportSafetyState_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_SafetyStateManagement_ReportSafetyState_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_SafetyStateManagement_ReportSafetyState_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_SafetyStateManagement_ReportSafetyState_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_SafetyStateManagement_VisionSafetyInformation Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_SafetyStateManagement_VisionSafetyInformation = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_SafetyStateManagement_VisionSafetyInformation, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_SafetyStateManagement_VisionSafetyTriggered Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_SafetyStateManagement_VisionSafetyTriggered = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_SafetyStateManagement_VisionSafetyTriggered, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_SystemState Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_SystemState = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_SystemState, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_CurrentState = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_CurrentState, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_CurrentState_Id = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_CurrentState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_LastTransition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_LastTransition_Id = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_LastTransition_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_CurrentState = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_CurrentState, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_CurrentState_Id = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_CurrentState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_LastTransition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_LastTransition_Id = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_LastTransition_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Abort_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Abort_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Abort_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Abort_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Abort_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Abort_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecution_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecution_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecution_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_CurrentState = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_CurrentState, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_CurrentState_Id = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_CurrentState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_LastTransition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_LastTransition_Id = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_LastTransition_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Entry_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Entry_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Entry_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_EntryToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Exit_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Exit_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Exit_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Step_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Step_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Step_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_StepToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Sync_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Sync_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Sync_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Sync_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Sync_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Wait_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Wait_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_Wait_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStep_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStep_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStepAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionStepModel_WaitToStepAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionToReadyAbort_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionToReadyAbort_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionToReadyAbort_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionToReadyAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionToReadyAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionToReadyAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionToReadyStop_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionToReadyStop_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ContinuousExecutionToReadyStop_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Initialized_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Initialized_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Initialized_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_CurrentState = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_CurrentState, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_CurrentState_Id = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_CurrentState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_LastTransition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_LastTransition_Id = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_LastTransition_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Entry_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Entry_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Entry_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_EntryToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_EntryToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_EntryToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_EntryToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Exit_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Exit_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Exit_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Step_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Step_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Step_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_StepToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_StepToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_StepToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_StepToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Sync_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Sync_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Sync_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Sync_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Sync_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Wait_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Wait_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_Wait_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_WaitToStep_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_WaitToStep_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_WaitToStepAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedStepModel_WaitToStepAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedToReadyAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedToReadyAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedToReadyAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedToReadyProduct_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedToReadyProduct_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedToReadyProduct_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedToReadyRecipe_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedToReadyRecipe_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_InitializedToReadyRecipe_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Ready_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Ready_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Ready_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_CurrentState = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_CurrentState, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_CurrentState_Id = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_CurrentState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_LastTransition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_LastTransition_Id = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_LastTransition_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Entry_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Entry_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Entry_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_EntryToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_EntryToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_EntryToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_EntryToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Exit_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Exit_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Exit_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Step_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Step_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Step_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_StepToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_StepToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_StepToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_StepToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Sync_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Sync_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Sync_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Sync_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Sync_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Wait_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Wait_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_Wait_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_WaitToStep_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_WaitToStep_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_WaitToStepAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyStepModel_WaitToStepAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToContinuousExecution_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToContinuousExecution_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToContinuousExecution_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToContinuousExecutionAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToContinuousExecutionAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToContinuousExecutionAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToInitializedAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToInitializedAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToInitializedAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToInitializedProduct_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToInitializedProduct_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToInitializedProduct_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToInitializedRecipe_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToInitializedRecipe_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToInitializedRecipe_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToSingleExecution_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToSingleExecution_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToSingleExecution_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToSingleExecutionAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToSingleExecutionAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_ReadyToSingleExecutionAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SimulationMode_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SimulationMode_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SimulationMode_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SimulationMode_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SimulationMode_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SimulationMode_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecution_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecution_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecution_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_CurrentState = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_CurrentState, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_CurrentState_Id = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_CurrentState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_LastTransition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_LastTransition_Id = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_LastTransition_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Entry_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Entry_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Entry_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_EntryToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Exit_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Exit_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Exit_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Step_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Step_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Step_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_StepToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_StepToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_StepToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_StepToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Sync_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Sync_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Sync_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Sync_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Sync_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Wait_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Wait_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_Wait_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStep_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStep_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStepAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionStepModel_WaitToStepAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionToReadyAbort_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionToReadyAbort_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionToReadyAbort_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionToReadyAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionToReadyAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionToReadyAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionToReadyStop_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionToReadyStop_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_SingleExecutionToReadyStop_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_StartContinuous_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_StartContinuous_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_StartContinuous_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_StartContinuous_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_StartContinuous_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_StartContinuous_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_StartSingleJob_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_StartSingleJob_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_StartSingleJob_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_StartSingleJob_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_StartSingleJob_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_StartSingleJob_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Stop_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Stop_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Stop_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Stop_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Stop_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_AutomaticModeStateMachine_Stop_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ConfirmAll_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ConfirmAll_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_ConfirmAll_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_Error_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_Error_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_Error_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorStepModel_CurrentState = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_ErrorStepModel_CurrentState, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorStepModel_CurrentState_Id = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_ErrorStepModel_CurrentState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_LastTransition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorStepModel_LastTransition_Id = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_ErrorStepModel_LastTransition_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_Entry_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorStepModel_Entry_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_ErrorStepModel_Entry_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorStepModel_EntryToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_ErrorStepModel_EntryToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorStepModel_EntryToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_ErrorStepModel_EntryToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_Exit_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorStepModel_Exit_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_ErrorStepModel_Exit_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_Step_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorStepModel_Step_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_ErrorStepModel_Step_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorStepModel_StepToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_ErrorStepModel_StepToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorStepModel_StepToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_ErrorStepModel_StepToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_Sync_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorStepModel_Sync_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_ErrorStepModel_Sync_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorStepModel_Sync_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_ErrorStepModel_Sync_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_Wait_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorStepModel_Wait_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_ErrorStepModel_Wait_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorStepModel_WaitToStep_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_ErrorStepModel_WaitToStep_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorStepModel_WaitToStepAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_ErrorStepModel_WaitToStepAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorToHalted_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorToHalted_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_ErrorToHalted_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorToHaltedAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorToHaltedAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_ErrorToHaltedAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorToOperationalAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorToOperationalAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_ErrorToOperationalAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorToPreoperational_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorToPreoperational_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_ErrorToPreoperational_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_ErrorToPreoperationalAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_ErrorToPreoperationalAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_ErrorToPreoperationalAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_Halt_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_Halt_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_Halt_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_Halt_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_Halt_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_Halt_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_Halted_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_Halted_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_Halted_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_HaltedStepModel_CurrentState = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_HaltedStepModel_CurrentState, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_HaltedStepModel_CurrentState_Id = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_HaltedStepModel_CurrentState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_LastTransition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_HaltedStepModel_LastTransition_Id = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_HaltedStepModel_LastTransition_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_Entry_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_HaltedStepModel_Entry_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_HaltedStepModel_Entry_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_HaltedStepModel_EntryToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_HaltedStepModel_EntryToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_HaltedStepModel_EntryToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_HaltedStepModel_EntryToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_Exit_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_HaltedStepModel_Exit_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_HaltedStepModel_Exit_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_Step_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_HaltedStepModel_Step_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_HaltedStepModel_Step_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_HaltedStepModel_StepToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_HaltedStepModel_StepToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_HaltedStepModel_StepToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_HaltedStepModel_StepToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_Sync_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_HaltedStepModel_Sync_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_HaltedStepModel_Sync_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_HaltedStepModel_Sync_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_HaltedStepModel_Sync_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_Wait_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_HaltedStepModel_Wait_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_HaltedStepModel_Wait_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_HaltedStepModel_WaitToStep_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_HaltedStepModel_WaitToStep_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_HaltedStepModel_WaitToStepAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_HaltedStepModel_WaitToStepAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedToPreoperational_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_HaltedToPreoperational_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_HaltedToPreoperational_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_HaltedToPreoperationalAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_HaltedToPreoperationalAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_HaltedToPreoperationalAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_Operational_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_Operational_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_Operational_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_OperationalToErrorAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_OperationalToErrorAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_OperationalToErrorAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_OperationalToHalted_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_OperationalToHalted_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_OperationalToHalted_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_OperationalToHaltedAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_OperationalToHaltedAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_OperationalToHaltedAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_OperationalToPreoperational_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_OperationalToPreoperational_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_OperationalToPreoperational_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_OperationalToPreoperationalAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_OperationalToPreoperationalAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_OperationalToPreoperationalAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_Preoperational_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_Preoperational_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_Preoperational_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_CurrentState Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalStepModel_CurrentState = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_PreoperationalStepModel_CurrentState, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_CurrentState_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalStepModel_CurrentState_Id = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_PreoperationalStepModel_CurrentState_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_LastTransition_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalStepModel_LastTransition_Id = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_PreoperationalStepModel_LastTransition_Id, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_Entry_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalStepModel_Entry_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_PreoperationalStepModel_Entry_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_EntryToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalStepModel_EntryToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_PreoperationalStepModel_EntryToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_EntryToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalStepModel_EntryToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_PreoperationalStepModel_EntryToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_Exit_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalStepModel_Exit_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_PreoperationalStepModel_Exit_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_Step_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalStepModel_Step_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_PreoperationalStepModel_Step_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_StepToExitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalStepModel_StepToExitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_PreoperationalStepModel_StepToExitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_StepToWaitAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalStepModel_StepToWaitAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_PreoperationalStepModel_StepToWaitAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_Sync_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalStepModel_Sync_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_PreoperationalStepModel_Sync_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_Sync_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalStepModel_Sync_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_PreoperationalStepModel_Sync_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_Wait_StateNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalStepModel_Wait_StateNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_PreoperationalStepModel_Wait_StateNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_WaitToStep_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalStepModel_WaitToStep_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_PreoperationalStepModel_WaitToStep_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalStepModel_WaitToStepAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalStepModel_WaitToStepAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_PreoperationalStepModel_WaitToStepAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalToErrorAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalToErrorAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_PreoperationalToErrorAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalToHalted_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalToHalted_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_PreoperationalToHalted_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalToHaltedAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalToHaltedAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_PreoperationalToHaltedAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalToInitialized_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalToInitialized_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_PreoperationalToInitialized_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalToInitializedAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalToInitializedAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_PreoperationalToInitializedAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalToOperational_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalToOperational_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_PreoperationalToOperational_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_PreoperationalToOperationalAuto_TransitionNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_PreoperationalToOperationalAuto_TransitionNumber = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_PreoperationalToOperationalAuto_TransitionNumber, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_Reset_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_Reset_InputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_Reset_InputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_Reset_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_Reset_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_Reset_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the VisionSystemType_VisionStateMachine_SelectModeAutomatic_OutputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VisionSystemType_VisionStateMachine_SelectModeAutomatic_OutputArguments = new ExpandedNodeId(Prefix2.Variables.VisionSystemType_VisionStateMachine_SelectModeAutomatic_OutputArguments, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_XmlSchema Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_XmlSchema = new ExpandedNodeId(Prefix2.Variables.Name2_XmlSchema, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_XmlSchema_NamespaceUri Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_XmlSchema_NamespaceUri = new ExpandedNodeId(Prefix2.Variables.Name2_XmlSchema_NamespaceUri, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_XmlSchema_BinaryIdBaseDataType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_XmlSchema_BinaryIdBaseDataType = new ExpandedNodeId(Prefix2.Variables.Name2_XmlSchema_BinaryIdBaseDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_XmlSchema_ConfigurationIdDataType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_XmlSchema_ConfigurationIdDataType = new ExpandedNodeId(Prefix2.Variables.Name2_XmlSchema_ConfigurationIdDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_XmlSchema_RecipeIdExternalDataType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_XmlSchema_RecipeIdExternalDataType = new ExpandedNodeId(Prefix2.Variables.Name2_XmlSchema_RecipeIdExternalDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_XmlSchema_RecipeIdInternalDataType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_XmlSchema_RecipeIdInternalDataType = new ExpandedNodeId(Prefix2.Variables.Name2_XmlSchema_RecipeIdInternalDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_XmlSchema_ConfigurationDataType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_XmlSchema_ConfigurationDataType = new ExpandedNodeId(Prefix2.Variables.Name2_XmlSchema_ConfigurationDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_XmlSchema_ConfigurationTransferOptions Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_XmlSchema_ConfigurationTransferOptions = new ExpandedNodeId(Prefix2.Variables.Name2_XmlSchema_ConfigurationTransferOptions, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_XmlSchema_JobIdDataType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_XmlSchema_JobIdDataType = new ExpandedNodeId(Prefix2.Variables.Name2_XmlSchema_JobIdDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_XmlSchema_MeasIdDataType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_XmlSchema_MeasIdDataType = new ExpandedNodeId(Prefix2.Variables.Name2_XmlSchema_MeasIdDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_XmlSchema_PartIdDataType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_XmlSchema_PartIdDataType = new ExpandedNodeId(Prefix2.Variables.Name2_XmlSchema_PartIdDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_XmlSchema_ProcessingTimesDataType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_XmlSchema_ProcessingTimesDataType = new ExpandedNodeId(Prefix2.Variables.Name2_XmlSchema_ProcessingTimesDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_XmlSchema_ProductDataType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_XmlSchema_ProductDataType = new ExpandedNodeId(Prefix2.Variables.Name2_XmlSchema_ProductDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_XmlSchema_ProductIdDataType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_XmlSchema_ProductIdDataType = new ExpandedNodeId(Prefix2.Variables.Name2_XmlSchema_ProductIdDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_XmlSchema_RecipeTransferOptions Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_XmlSchema_RecipeTransferOptions = new ExpandedNodeId(Prefix2.Variables.Name2_XmlSchema_RecipeTransferOptions, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_XmlSchema_ResultDataType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_XmlSchema_ResultDataType = new ExpandedNodeId(Prefix2.Variables.Name2_XmlSchema_ResultDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_XmlSchema_ResultIdDataType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_XmlSchema_ResultIdDataType = new ExpandedNodeId(Prefix2.Variables.Name2_XmlSchema_ResultIdDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_XmlSchema_ResultTransferOptions Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_XmlSchema_ResultTransferOptions = new ExpandedNodeId(Prefix2.Variables.Name2_XmlSchema_ResultTransferOptions, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_XmlSchema_SystemStateDescriptionDataType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_XmlSchema_SystemStateDescriptionDataType = new ExpandedNodeId(Prefix2.Variables.Name2_XmlSchema_SystemStateDescriptionDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_BinarySchema Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_BinarySchema = new ExpandedNodeId(Prefix2.Variables.Name2_BinarySchema, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_BinarySchema_NamespaceUri Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_BinarySchema_NamespaceUri = new ExpandedNodeId(Prefix2.Variables.Name2_BinarySchema_NamespaceUri, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_BinarySchema_BinaryIdBaseDataType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_BinarySchema_BinaryIdBaseDataType = new ExpandedNodeId(Prefix2.Variables.Name2_BinarySchema_BinaryIdBaseDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_BinarySchema_ConfigurationIdDataType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_BinarySchema_ConfigurationIdDataType = new ExpandedNodeId(Prefix2.Variables.Name2_BinarySchema_ConfigurationIdDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_BinarySchema_RecipeIdExternalDataType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_BinarySchema_RecipeIdExternalDataType = new ExpandedNodeId(Prefix2.Variables.Name2_BinarySchema_RecipeIdExternalDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_BinarySchema_RecipeIdInternalDataType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_BinarySchema_RecipeIdInternalDataType = new ExpandedNodeId(Prefix2.Variables.Name2_BinarySchema_RecipeIdInternalDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_BinarySchema_ConfigurationDataType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_BinarySchema_ConfigurationDataType = new ExpandedNodeId(Prefix2.Variables.Name2_BinarySchema_ConfigurationDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_BinarySchema_ConfigurationTransferOptions Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_BinarySchema_ConfigurationTransferOptions = new ExpandedNodeId(Prefix2.Variables.Name2_BinarySchema_ConfigurationTransferOptions, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_BinarySchema_JobIdDataType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_BinarySchema_JobIdDataType = new ExpandedNodeId(Prefix2.Variables.Name2_BinarySchema_JobIdDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_BinarySchema_MeasIdDataType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_BinarySchema_MeasIdDataType = new ExpandedNodeId(Prefix2.Variables.Name2_BinarySchema_MeasIdDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_BinarySchema_PartIdDataType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_BinarySchema_PartIdDataType = new ExpandedNodeId(Prefix2.Variables.Name2_BinarySchema_PartIdDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_BinarySchema_ProcessingTimesDataType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_BinarySchema_ProcessingTimesDataType = new ExpandedNodeId(Prefix2.Variables.Name2_BinarySchema_ProcessingTimesDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_BinarySchema_ProductDataType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_BinarySchema_ProductDataType = new ExpandedNodeId(Prefix2.Variables.Name2_BinarySchema_ProductDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_BinarySchema_ProductIdDataType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_BinarySchema_ProductIdDataType = new ExpandedNodeId(Prefix2.Variables.Name2_BinarySchema_ProductIdDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_BinarySchema_RecipeTransferOptions Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_BinarySchema_RecipeTransferOptions = new ExpandedNodeId(Prefix2.Variables.Name2_BinarySchema_RecipeTransferOptions, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_BinarySchema_ResultDataType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_BinarySchema_ResultDataType = new ExpandedNodeId(Prefix2.Variables.Name2_BinarySchema_ResultDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_BinarySchema_ResultIdDataType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_BinarySchema_ResultIdDataType = new ExpandedNodeId(Prefix2.Variables.Name2_BinarySchema_ResultIdDataType, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_BinarySchema_ResultTransferOptions Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_BinarySchema_ResultTransferOptions = new ExpandedNodeId(Prefix2.Variables.Name2_BinarySchema_ResultTransferOptions, Prefix2.Namespaces.Name2);

        /// <summary>
        /// The identifier for the Name2_BinarySchema_SystemStateDescriptionDataType Variable.
        /// </summary>
        public static readonly ExpandedNodeId Name2_BinarySchema_SystemStateDescriptionDataType = new ExpandedNodeId(Prefix2.Variables.Name2_BinarySchema_SystemStateDescriptionDataType, Prefix2.Namespaces.Name2);
    }
    #endregion

    #region VariableType Node Identifiers
    /// <summary>
    /// A class that declares constants for all VariableTypes in the Model Design.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public static partial class VariableTypeIds
    {
        /// <summary>
        /// The identifier for the ResultType VariableType.
        /// </summary>
        public static readonly ExpandedNodeId ResultType = new ExpandedNodeId(Prefix2.VariableTypes.ResultType, Prefix2.Namespaces.Name2);
    }
    #endregion

    #region BrowseName Declarations
    /// <summary>
    /// Declares all of the BrowseNames used in the Model Design.
    /// </summary>
    public static partial class BrowseNames
    {
        /// <summary>
        /// The BrowseName for the Abort component.
        /// </summary>
        public const string Abort = "Abort";

        /// <summary>
        /// The BrowseName for the AcquisitionDoneEventType component.
        /// </summary>
        public const string AcquisitionDoneEventType = "AcquisitionDoneEventType";

        /// <summary>
        /// The BrowseName for the ActivateConfiguration component.
        /// </summary>
        public const string ActivateConfiguration = "ActivateConfiguration";

        /// <summary>
        /// The BrowseName for the ActiveConfiguration component.
        /// </summary>
        public const string ActiveConfiguration = "ActiveConfiguration";

        /// <summary>
        /// The BrowseName for the AddConfiguration component.
        /// </summary>
        public const string AddConfiguration = "AddConfiguration";

        /// <summary>
        /// The BrowseName for the AddRecipe component.
        /// </summary>
        public const string AddRecipe = "AddRecipe";

        /// <summary>
        /// The BrowseName for the AutomaticModeStateMachine component.
        /// </summary>
        public const string AutomaticModeStateMachine = "AutomaticModeStateMachine";

        /// <summary>
        /// The BrowseName for the BinaryIdBaseDataType component.
        /// </summary>
        public const string BinaryIdBaseDataType = "BinaryIdBaseDataType";

        /// <summary>
        /// The BrowseName for the BlockReaction component.
        /// </summary>
        public const string BlockReaction = "BlockReaction";

        /// <summary>
        /// The BrowseName for the CausePath component.
        /// </summary>
        public const string CausePath = "CausePath";

        /// <summary>
        /// The BrowseName for the Configuration component.
        /// </summary>
        public const string Configuration = "<Configuration>";

        /// <summary>
        /// The BrowseName for the ConfigurationDataType component.
        /// </summary>
        public const string ConfigurationDataType = "ConfigurationDataType";

        /// <summary>
        /// The BrowseName for the ConfigurationFolderType component.
        /// </summary>
        public const string ConfigurationFolderType = "ConfigurationFolderType";

        /// <summary>
        /// The BrowseName for the ConfigurationIdDataType component.
        /// </summary>
        public const string ConfigurationIdDataType = "ConfigurationIdDataType";

        /// <summary>
        /// The BrowseName for the ConfigurationManagement component.
        /// </summary>
        public const string ConfigurationManagement = "ConfigurationManagement";

        /// <summary>
        /// The BrowseName for the ConfigurationManagementType component.
        /// </summary>
        public const string ConfigurationManagementType = "ConfigurationManagementType";

        /// <summary>
        /// The BrowseName for the Configurations component.
        /// </summary>
        public const string Configurations = "Configurations";

        /// <summary>
        /// The BrowseName for the ConfigurationTransfer component.
        /// </summary>
        public const string ConfigurationTransfer = "ConfigurationTransfer";

        /// <summary>
        /// The BrowseName for the ConfigurationTransferOptions component.
        /// </summary>
        public const string ConfigurationTransferOptions = "ConfigurationTransferOptions";

        /// <summary>
        /// The BrowseName for the ConfigurationTransferType component.
        /// </summary>
        public const string ConfigurationTransferType = "ConfigurationTransferType";

        /// <summary>
        /// The BrowseName for the ConfirmAll component.
        /// </summary>
        public const string ConfirmAll = "ConfirmAll";

        /// <summary>
        /// The BrowseName for the ContinuousExecution component.
        /// </summary>
        public const string ContinuousExecution = "ContinuousExecution";

        /// <summary>
        /// The BrowseName for the ContinuousExecutionStepModel component.
        /// </summary>
        public const string ContinuousExecutionStepModel = "ContinuousExecutionStepModel";

        /// <summary>
        /// The BrowseName for the ContinuousExecutionToReadyAbort component.
        /// </summary>
        public const string ContinuousExecutionToReadyAbort = "ContinuousExecutionToReadyAbort";

        /// <summary>
        /// The BrowseName for the ContinuousExecutionToReadyAuto component.
        /// </summary>
        public const string ContinuousExecutionToReadyAuto = "ContinuousExecutionToReadyAuto";

        /// <summary>
        /// The BrowseName for the ContinuousExecutionToReadyStop component.
        /// </summary>
        public const string ContinuousExecutionToReadyStop = "ContinuousExecutionToReadyStop";

        /// <summary>
        /// The BrowseName for the CreationTime component.
        /// </summary>
        public const string CreationTime = "CreationTime";

        /// <summary>
        /// The BrowseName for the DiagnosticLevel component.
        /// </summary>
        public const string DiagnosticLevel = "DiagnosticLevel";

        /// <summary>
        /// The BrowseName for the EnterStepSequenceEventType component.
        /// </summary>
        public const string EnterStepSequenceEventType = "EnterStepSequenceEventType";

        /// <summary>
        /// The BrowseName for the Entry component.
        /// </summary>
        public const string Entry = "Entry";

        /// <summary>
        /// The BrowseName for the EntryToExitAuto component.
        /// </summary>
        public const string EntryToExitAuto = "EntryToExitAuto";

        /// <summary>
        /// The BrowseName for the EntryToWaitAuto component.
        /// </summary>
        public const string EntryToWaitAuto = "EntryToWaitAuto";

        /// <summary>
        /// The BrowseName for the Error component.
        /// </summary>
        public const string Error = "Error";

        /// <summary>
        /// The BrowseName for the ErrorCode component.
        /// </summary>
        public const string ErrorCode = "ErrorCode";

        /// <summary>
        /// The BrowseName for the ErrorEventType component.
        /// </summary>
        public const string ErrorEventType = "ErrorEventType";

        /// <summary>
        /// The BrowseName for the ErrorResolvedEventType component.
        /// </summary>
        public const string ErrorResolvedEventType = "ErrorResolvedEventType";

        /// <summary>
        /// The BrowseName for the ErrorStepModel component.
        /// </summary>
        public const string ErrorStepModel = "ErrorStepModel";

        /// <summary>
        /// The BrowseName for the ErrorString component.
        /// </summary>
        public const string ErrorString = "ErrorString";

        /// <summary>
        /// The BrowseName for the ErrorToHalted component.
        /// </summary>
        public const string ErrorToHalted = "ErrorToHalted";

        /// <summary>
        /// The BrowseName for the ErrorToHaltedAuto component.
        /// </summary>
        public const string ErrorToHaltedAuto = "ErrorToHaltedAuto";

        /// <summary>
        /// The BrowseName for the ErrorToOperationalAuto component.
        /// </summary>
        public const string ErrorToOperationalAuto = "ErrorToOperationalAuto";

        /// <summary>
        /// The BrowseName for the ErrorToPreoperational component.
        /// </summary>
        public const string ErrorToPreoperational = "ErrorToPreoperational";

        /// <summary>
        /// The BrowseName for the ErrorToPreoperationalAuto component.
        /// </summary>
        public const string ErrorToPreoperationalAuto = "ErrorToPreoperationalAuto";

        /// <summary>
        /// The BrowseName for the Exit component.
        /// </summary>
        public const string Exit = "Exit";

        /// <summary>
        /// The BrowseName for the ExternalConfigurationId component.
        /// </summary>
        public const string ExternalConfigurationId = "ExternalConfigurationId";

        /// <summary>
        /// The BrowseName for the ExternalId component.
        /// </summary>
        public const string ExternalId = "ExternalId";

        /// <summary>
        /// The BrowseName for the ExternalRecipeId component.
        /// </summary>
        public const string ExternalRecipeId = "ExternalRecipeId";

        /// <summary>
        /// The BrowseName for the FromTransition component.
        /// </summary>
        public const string FromTransition = "FromTransition";

        /// <summary>
        /// The BrowseName for the GetConfigurationById component.
        /// </summary>
        public const string GetConfigurationById = "GetConfigurationById";

        /// <summary>
        /// The BrowseName for the GetConfigurationList component.
        /// </summary>
        public const string GetConfigurationList = "GetConfigurationList";

        /// <summary>
        /// The BrowseName for the GetRecipeListFiltered component.
        /// </summary>
        public const string GetRecipeListFiltered = "GetRecipeListFiltered";

        /// <summary>
        /// The BrowseName for the GetResultById component.
        /// </summary>
        public const string GetResultById = "GetResultById";

        /// <summary>
        /// The BrowseName for the GetResultComponentsById component.
        /// </summary>
        public const string GetResultComponentsById = "GetResultComponentsById";

        /// <summary>
        /// The BrowseName for the GetResultListFiltered component.
        /// </summary>
        public const string GetResultListFiltered = "GetResultListFiltered";

        /// <summary>
        /// The BrowseName for the Halt component.
        /// </summary>
        public const string Halt = "Halt";

        /// <summary>
        /// The BrowseName for the Halted component.
        /// </summary>
        public const string Halted = "Halted";

        /// <summary>
        /// The BrowseName for the HaltedStepModel component.
        /// </summary>
        public const string HaltedStepModel = "HaltedStepModel";

        /// <summary>
        /// The BrowseName for the HaltedToPreoperational component.
        /// </summary>
        public const string HaltedToPreoperational = "HaltedToPreoperational";

        /// <summary>
        /// The BrowseName for the HaltedToPreoperationalAuto component.
        /// </summary>
        public const string HaltedToPreoperationalAuto = "HaltedToPreoperationalAuto";

        /// <summary>
        /// The BrowseName for the Handle component.
        /// </summary>
        public const string Handle = "Handle";

        /// <summary>
        /// The BrowseName for the HasTransferableDataOnFile component.
        /// </summary>
        public const string HasTransferableDataOnFile = "HasTransferableDataOnFile";

        /// <summary>
        /// The BrowseName for the Initialized component.
        /// </summary>
        public const string Initialized = "Initialized";

        /// <summary>
        /// The BrowseName for the InitializedStepModel component.
        /// </summary>
        public const string InitializedStepModel = "InitializedStepModel";

        /// <summary>
        /// The BrowseName for the InitializedToReadyAuto component.
        /// </summary>
        public const string InitializedToReadyAuto = "InitializedToReadyAuto";

        /// <summary>
        /// The BrowseName for the InitializedToReadyProduct component.
        /// </summary>
        public const string InitializedToReadyProduct = "InitializedToReadyProduct";

        /// <summary>
        /// The BrowseName for the InitializedToReadyRecipe component.
        /// </summary>
        public const string InitializedToReadyRecipe = "InitializedToReadyRecipe";

        /// <summary>
        /// The BrowseName for the InternalConfigurationId component.
        /// </summary>
        public const string InternalConfigurationId = "InternalConfigurationId";

        /// <summary>
        /// The BrowseName for the InternalId component.
        /// </summary>
        public const string InternalId = "InternalId";

        /// <summary>
        /// The BrowseName for the InternalRecipeId component.
        /// </summary>
        public const string InternalRecipeId = "InternalRecipeId";

        /// <summary>
        /// The BrowseName for the IsPartial component.
        /// </summary>
        public const string IsPartial = "IsPartial";

        /// <summary>
        /// The BrowseName for the IsPrepared component.
        /// </summary>
        public const string IsPrepared = "IsPrepared";

        /// <summary>
        /// The BrowseName for the IsSimulated component.
        /// </summary>
        public const string IsSimulated = "IsSimulated";

        /// <summary>
        /// The BrowseName for the JobId component.
        /// </summary>
        public const string JobId = "JobId";

        /// <summary>
        /// The BrowseName for the JobIdDataType component.
        /// </summary>
        public const string JobIdDataType = "JobIdDataType";

        /// <summary>
        /// The BrowseName for the JobStartedEventType component.
        /// </summary>
        public const string JobStartedEventType = "JobStartedEventType";

        /// <summary>
        /// The BrowseName for the LastModified component.
        /// </summary>
        public const string LastModified = "LastModified";

        /// <summary>
        /// The BrowseName for the LeaveStepSequenceEventType component.
        /// </summary>
        public const string LeaveStepSequenceEventType = "LeaveStepSequenceEventType";

        /// <summary>
        /// The BrowseName for the LinkedProducts component.
        /// </summary>
        public const string LinkedProducts = "LinkedProducts";

        /// <summary>
        /// The BrowseName for the LinkProduct component.
        /// </summary>
        public const string LinkProduct = "LinkProduct";

        /// <summary>
        /// The BrowseName for the MeasId component.
        /// </summary>
        public const string MeasId = "MeasId";

        /// <summary>
        /// The BrowseName for the MeasIdDataType component.
        /// </summary>
        public const string MeasIdDataType = "MeasIdDataType";

        /// <summary>
        /// The BrowseName for the Name2_BinarySchema component.
        /// </summary>
        public const string Name2_BinarySchema = "Prefix2";

        /// <summary>
        /// The BrowseName for the Name2_XmlSchema component.
        /// </summary>
        public const string Name2_XmlSchema = "Prefix2";

        /// <summary>
        /// The BrowseName for the NextStepEventType component.
        /// </summary>
        public const string NextStepEventType = "NextStepEventType";

        /// <summary>
        /// The BrowseName for the Operational component.
        /// </summary>
        public const string Operational = "Operational";

        /// <summary>
        /// The BrowseName for the OperationalToErrorAuto component.
        /// </summary>
        public const string OperationalToErrorAuto = "OperationalToErrorAuto";

        /// <summary>
        /// The BrowseName for the OperationalToHalted component.
        /// </summary>
        public const string OperationalToHalted = "OperationalToHalted";

        /// <summary>
        /// The BrowseName for the OperationalToHaltedAuto component.
        /// </summary>
        public const string OperationalToHaltedAuto = "OperationalToHaltedAuto";

        /// <summary>
        /// The BrowseName for the OperationalToPreoperational component.
        /// </summary>
        public const string OperationalToPreoperational = "OperationalToPreoperational";

        /// <summary>
        /// The BrowseName for the OperationalToPreoperationalAuto component.
        /// </summary>
        public const string OperationalToPreoperationalAuto = "OperationalToPreoperationalAuto";

        /// <summary>
        /// The BrowseName for the PartId component.
        /// </summary>
        public const string PartId = "PartId";

        /// <summary>
        /// The BrowseName for the PartIdDataType component.
        /// </summary>
        public const string PartIdDataType = "PartIdDataType";

        /// <summary>
        /// The BrowseName for the Preoperational component.
        /// </summary>
        public const string Preoperational = "Preoperational";

        /// <summary>
        /// The BrowseName for the PreoperationalStepModel component.
        /// </summary>
        public const string PreoperationalStepModel = "PreoperationalStepModel";

        /// <summary>
        /// The BrowseName for the PreoperationalToErrorAuto component.
        /// </summary>
        public const string PreoperationalToErrorAuto = "PreoperationalToErrorAuto";

        /// <summary>
        /// The BrowseName for the PreoperationalToHalted component.
        /// </summary>
        public const string PreoperationalToHalted = "PreoperationalToHalted";

        /// <summary>
        /// The BrowseName for the PreoperationalToHaltedAuto component.
        /// </summary>
        public const string PreoperationalToHaltedAuto = "PreoperationalToHaltedAuto";

        /// <summary>
        /// The BrowseName for the PreoperationalToInitialized component.
        /// </summary>
        public const string PreoperationalToInitialized = "PreoperationalToInitialized";

        /// <summary>
        /// The BrowseName for the PreoperationalToInitializedAuto component.
        /// </summary>
        public const string PreoperationalToInitializedAuto = "PreoperationalToInitializedAuto";

        /// <summary>
        /// The BrowseName for the PreoperationalToOperational component.
        /// </summary>
        public const string PreoperationalToOperational = "PreoperationalToOperational";

        /// <summary>
        /// The BrowseName for the PreoperationalToOperationalAuto component.
        /// </summary>
        public const string PreoperationalToOperationalAuto = "PreoperationalToOperationalAuto";

        /// <summary>
        /// The BrowseName for the Prepare component.
        /// </summary>
        public const string Prepare = "Prepare";

        /// <summary>
        /// The BrowseName for the PrepareProduct component.
        /// </summary>
        public const string PrepareProduct = "PrepareProduct";

        /// <summary>
        /// The BrowseName for the PrepareRecipe component.
        /// </summary>
        public const string PrepareRecipe = "PrepareRecipe";

        /// <summary>
        /// The BrowseName for the ProcessingTimes component.
        /// </summary>
        public const string ProcessingTimes = "ProcessingTimes";

        /// <summary>
        /// The BrowseName for the ProcessingTimesDataType component.
        /// </summary>
        public const string ProcessingTimesDataType = "ProcessingTimesDataType";

        /// <summary>
        /// The BrowseName for the Product component.
        /// </summary>
        public const string Product = "<Product>";

        /// <summary>
        /// The BrowseName for the ProductDataType component.
        /// </summary>
        public const string ProductDataType = "ProductDataType";

        /// <summary>
        /// The BrowseName for the ProductFolderType component.
        /// </summary>
        public const string ProductFolderType = "ProductFolderType";

        /// <summary>
        /// The BrowseName for the ProductId component.
        /// </summary>
        public const string ProductId = "ProductId";

        /// <summary>
        /// The BrowseName for the ProductIdDataType component.
        /// </summary>
        public const string ProductIdDataType = "ProductIdDataType";

        /// <summary>
        /// The BrowseName for the Products component.
        /// </summary>
        public const string Products = "Products";

        /// <summary>
        /// The BrowseName for the Ready component.
        /// </summary>
        public const string Ready = "Ready";

        /// <summary>
        /// The BrowseName for the ReadyEventType component.
        /// </summary>
        public const string ReadyEventType = "ReadyEventType";

        /// <summary>
        /// The BrowseName for the ReadyStepModel component.
        /// </summary>
        public const string ReadyStepModel = "ReadyStepModel";

        /// <summary>
        /// The BrowseName for the ReadyToContinuousExecution component.
        /// </summary>
        public const string ReadyToContinuousExecution = "ReadyToContinuousExecution";

        /// <summary>
        /// The BrowseName for the ReadyToContinuousExecutionAuto component.
        /// </summary>
        public const string ReadyToContinuousExecutionAuto = "ReadyToContinuousExecutionAuto";

        /// <summary>
        /// The BrowseName for the ReadyToInitializedAuto component.
        /// </summary>
        public const string ReadyToInitializedAuto = "ReadyToInitializedAuto";

        /// <summary>
        /// The BrowseName for the ReadyToInitializedProduct component.
        /// </summary>
        public const string ReadyToInitializedProduct = "ReadyToInitializedProduct";

        /// <summary>
        /// The BrowseName for the ReadyToInitializedRecipe component.
        /// </summary>
        public const string ReadyToInitializedRecipe = "ReadyToInitializedRecipe";

        /// <summary>
        /// The BrowseName for the ReadyToSingleExecution component.
        /// </summary>
        public const string ReadyToSingleExecution = "ReadyToSingleExecution";

        /// <summary>
        /// The BrowseName for the ReadyToSingleExecutionAuto component.
        /// </summary>
        public const string ReadyToSingleExecutionAuto = "ReadyToSingleExecutionAuto";

        /// <summary>
        /// The BrowseName for the Recipe component.
        /// </summary>
        public const string Recipe = "<Recipe>";

        /// <summary>
        /// The BrowseName for the RecipeFolderType component.
        /// </summary>
        public const string RecipeFolderType = "RecipeFolderType";

        /// <summary>
        /// The BrowseName for the RecipeIdExternalDataType component.
        /// </summary>
        public const string RecipeIdExternalDataType = "RecipeIdExternalDataType";

        /// <summary>
        /// The BrowseName for the RecipeIdInternalDataType component.
        /// </summary>
        public const string RecipeIdInternalDataType = "RecipeIdInternalDataType";

        /// <summary>
        /// The BrowseName for the RecipeManagement component.
        /// </summary>
        public const string RecipeManagement = "RecipeManagement";

        /// <summary>
        /// The BrowseName for the RecipeManagementType component.
        /// </summary>
        public const string RecipeManagementType = "RecipeManagementType";

        /// <summary>
        /// The BrowseName for the RecipePreparedEventType component.
        /// </summary>
        public const string RecipePreparedEventType = "RecipePreparedEventType";

        /// <summary>
        /// The BrowseName for the Recipes component.
        /// </summary>
        public const string Recipes = "Recipes";

        /// <summary>
        /// The BrowseName for the RecipeTransfer component.
        /// </summary>
        public const string RecipeTransfer = "RecipeTransfer";

        /// <summary>
        /// The BrowseName for the RecipeTransferOptions component.
        /// </summary>
        public const string RecipeTransferOptions = "RecipeTransferOptions";

        /// <summary>
        /// The BrowseName for the RecipeTransferType component.
        /// </summary>
        public const string RecipeTransferType = "RecipeTransferType";

        /// <summary>
        /// The BrowseName for the RecipeType component.
        /// </summary>
        public const string RecipeType = "RecipeType";

        /// <summary>
        /// The BrowseName for the ReleaseConfigurationHandle component.
        /// </summary>
        public const string ReleaseConfigurationHandle = "ReleaseConfigurationHandle";

        /// <summary>
        /// The BrowseName for the ReleaseRecipeHandle component.
        /// </summary>
        public const string ReleaseRecipeHandle = "ReleaseRecipeHandle";

        /// <summary>
        /// The BrowseName for the ReleaseResultHandle component.
        /// </summary>
        public const string ReleaseResultHandle = "ReleaseResultHandle";

        /// <summary>
        /// The BrowseName for the RemoveConfiguration component.
        /// </summary>
        public const string RemoveConfiguration = "RemoveConfiguration";

        /// <summary>
        /// The BrowseName for the RemoveRecipe component.
        /// </summary>
        public const string RemoveRecipe = "RemoveRecipe";

        /// <summary>
        /// The BrowseName for the ReportSafetyState component.
        /// </summary>
        public const string ReportSafetyState = "ReportSafetyState";

        /// <summary>
        /// The BrowseName for the Reset component.
        /// </summary>
        public const string Reset = "Reset";

        /// <summary>
        /// The BrowseName for the ResultContent component.
        /// </summary>
        public const string ResultContent = "ResultContent";

        /// <summary>
        /// The BrowseName for the ResultDataType component.
        /// </summary>
        public const string ResultDataType = "ResultDataType";

        /// <summary>
        /// The BrowseName for the ResultFolderType component.
        /// </summary>
        public const string ResultFolderType = "ResultFolderType";

        /// <summary>
        /// The BrowseName for the ResultId component.
        /// </summary>
        public const string ResultId = "ResultId";

        /// <summary>
        /// The BrowseName for the ResultIdDataType component.
        /// </summary>
        public const string ResultIdDataType = "ResultIdDataType";

        /// <summary>
        /// The BrowseName for the ResultManagement component.
        /// </summary>
        public const string ResultManagement = "ResultManagement";

        /// <summary>
        /// The BrowseName for the ResultManagementType component.
        /// </summary>
        public const string ResultManagementType = "ResultManagementType";

        /// <summary>
        /// The BrowseName for the ResultReadyEventType component.
        /// </summary>
        public const string ResultReadyEventType = "ResultReadyEventType";

        /// <summary>
        /// The BrowseName for the Results component.
        /// </summary>
        public const string Results = "Results";

        /// <summary>
        /// The BrowseName for the ResultState component.
        /// </summary>
        public const string ResultState = "ResultState";

        /// <summary>
        /// The BrowseName for the ResultStateDataType component.
        /// </summary>
        public const string ResultStateDataType = "ResultStateDataType";

        /// <summary>
        /// The BrowseName for the ResultTransfer component.
        /// </summary>
        public const string ResultTransfer = "ResultTransfer";

        /// <summary>
        /// The BrowseName for the ResultTransferOptions component.
        /// </summary>
        public const string ResultTransferOptions = "ResultTransferOptions";

        /// <summary>
        /// The BrowseName for the ResultTransferType component.
        /// </summary>
        public const string ResultTransferType = "ResultTransferType";

        /// <summary>
        /// The BrowseName for the ResultType component.
        /// </summary>
        public const string ResultType = "ResultType";

        /// <summary>
        /// The BrowseName for the ResultVariable component.
        /// </summary>
        public const string ResultVariable = "<ResultVariable>";

        /// <summary>
        /// The BrowseName for the SafetyStateManagement component.
        /// </summary>
        public const string SafetyStateManagement = "SafetyStateManagement";

        /// <summary>
        /// The BrowseName for the SafetyStateManagementType component.
        /// </summary>
        public const string SafetyStateManagementType = "SafetyStateManagementType";

        /// <summary>
        /// The BrowseName for the SelectModeAutomatic component.
        /// </summary>
        public const string SelectModeAutomatic = "SelectModeAutomatic";

        /// <summary>
        /// The BrowseName for the SimulationMode component.
        /// </summary>
        public const string SimulationMode = "SimulationMode";

        /// <summary>
        /// The BrowseName for the SingleExecution component.
        /// </summary>
        public const string SingleExecution = "SingleExecution";

        /// <summary>
        /// The BrowseName for the SingleExecutionStepModel component.
        /// </summary>
        public const string SingleExecutionStepModel = "SingleExecutionStepModel";

        /// <summary>
        /// The BrowseName for the SingleExecutionToReadyAbort component.
        /// </summary>
        public const string SingleExecutionToReadyAbort = "SingleExecutionToReadyAbort";

        /// <summary>
        /// The BrowseName for the SingleExecutionToReadyAuto component.
        /// </summary>
        public const string SingleExecutionToReadyAuto = "SingleExecutionToReadyAuto";

        /// <summary>
        /// The BrowseName for the SingleExecutionToReadyStop component.
        /// </summary>
        public const string SingleExecutionToReadyStop = "SingleExecutionToReadyStop";

        /// <summary>
        /// The BrowseName for the StartContinuous component.
        /// </summary>
        public const string StartContinuous = "StartContinuous";

        /// <summary>
        /// The BrowseName for the StartSingleJob component.
        /// </summary>
        public const string StartSingleJob = "StartSingleJob";

        /// <summary>
        /// The BrowseName for the StateChangedEventType component.
        /// </summary>
        public const string StateChangedEventType = "StateChangedEventType";

        /// <summary>
        /// The BrowseName for the Step component.
        /// </summary>
        public const string Step = "Step";

        /// <summary>
        /// The BrowseName for the Steps component.
        /// </summary>
        public const string Steps = "Steps";

        /// <summary>
        /// The BrowseName for the StepToExitAuto component.
        /// </summary>
        public const string StepToExitAuto = "StepToExitAuto";

        /// <summary>
        /// The BrowseName for the StepToWaitAuto component.
        /// </summary>
        public const string StepToWaitAuto = "StepToWaitAuto";

        /// <summary>
        /// The BrowseName for the Stop component.
        /// </summary>
        public const string Stop = "Stop";

        /// <summary>
        /// The BrowseName for the StopReaction component.
        /// </summary>
        public const string StopReaction = "StopReaction";

        /// <summary>
        /// The BrowseName for the Sync component.
        /// </summary>
        public const string Sync = "Sync";

        /// <summary>
        /// The BrowseName for the SystemState component.
        /// </summary>
        public const string SystemState = "SystemState";

        /// <summary>
        /// The BrowseName for the SystemStateDataType component.
        /// </summary>
        public const string SystemStateDataType = "SystemStateDataType";

        /// <summary>
        /// The BrowseName for the SystemStateDescriptionDataType component.
        /// </summary>
        public const string SystemStateDescriptionDataType = "SystemStateDescriptionDataType";

        /// <summary>
        /// The BrowseName for the ToTransition component.
        /// </summary>
        public const string ToTransition = "ToTransition";

        /// <summary>
        /// The BrowseName for the TrimmedString component.
        /// </summary>
        public const string TrimmedString = "TrimmedString";

        /// <summary>
        /// The BrowseName for the TriStateBooleanDataType component.
        /// </summary>
        public const string TriStateBooleanDataType = "TriStateBooleanDataType";

        /// <summary>
        /// The BrowseName for the UnlinkProduct component.
        /// </summary>
        public const string UnlinkProduct = "UnlinkProduct";

        /// <summary>
        /// The BrowseName for the Unprepare component.
        /// </summary>
        public const string Unprepare = "Unprepare";

        /// <summary>
        /// The BrowseName for the UnprepareProduct component.
        /// </summary>
        public const string UnprepareProduct = "UnprepareProduct";

        /// <summary>
        /// The BrowseName for the UnprepareRecipe component.
        /// </summary>
        public const string UnprepareRecipe = "UnprepareRecipe";

        /// <summary>
        /// The BrowseName for the VisionAutomaticModeStateMachineType component.
        /// </summary>
        public const string VisionAutomaticModeStateMachineType = "VisionAutomaticModeStateMachineType";

        /// <summary>
        /// The BrowseName for the VisionConditionType component.
        /// </summary>
        public const string VisionConditionType = "VisionConditionType";

        /// <summary>
        /// The BrowseName for the VisionDiagnosticInfoEventType component.
        /// </summary>
        public const string VisionDiagnosticInfoEventType = "VisionDiagnosticInfoEventType";

        /// <summary>
        /// The BrowseName for the VisionErrorConditionType component.
        /// </summary>
        public const string VisionErrorConditionType = "VisionErrorConditionType";

        /// <summary>
        /// The BrowseName for the VisionEventType component.
        /// </summary>
        public const string VisionEventType = "VisionEventType";

        /// <summary>
        /// The BrowseName for the VisionInformationEventType component.
        /// </summary>
        public const string VisionInformationEventType = "VisionInformationEventType";

        /// <summary>
        /// The BrowseName for the VisionPersistentErrorConditionType component.
        /// </summary>
        public const string VisionPersistentErrorConditionType = "VisionPersistentErrorConditionType";

        /// <summary>
        /// The BrowseName for the VisionSafetyEventType component.
        /// </summary>
        public const string VisionSafetyEventType = "VisionSafetyEventType";

        /// <summary>
        /// The BrowseName for the VisionSafetyInformation component.
        /// </summary>
        public const string VisionSafetyInformation = "VisionSafetyInformation";

        /// <summary>
        /// The BrowseName for the VisionSafetyTriggered component.
        /// </summary>
        public const string VisionSafetyTriggered = "VisionSafetyTriggered";

        /// <summary>
        /// The BrowseName for the VisionStateMachine component.
        /// </summary>
        public const string VisionStateMachine = "VisionStateMachine";

        /// <summary>
        /// The BrowseName for the VisionStateMachineType component.
        /// </summary>
        public const string VisionStateMachineType = "VisionStateMachineType";

        /// <summary>
        /// The BrowseName for the VisionStepModelStateMachineType component.
        /// </summary>
        public const string VisionStepModelStateMachineType = "VisionStepModelStateMachineType";

        /// <summary>
        /// The BrowseName for the VisionSystemType component.
        /// </summary>
        public const string VisionSystemType = "VisionSystemType";

        /// <summary>
        /// The BrowseName for the VisionWarningConditionType component.
        /// </summary>
        public const string VisionWarningConditionType = "VisionWarningConditionType";

        /// <summary>
        /// The BrowseName for the Wait component.
        /// </summary>
        public const string Wait = "Wait";

        /// <summary>
        /// The BrowseName for the WaitToStep component.
        /// </summary>
        public const string WaitToStep = "WaitToStep";

        /// <summary>
        /// The BrowseName for the WaitToStepAuto component.
        /// </summary>
        public const string WaitToStepAuto = "WaitToStepAuto";
    }
    #endregion

    #region Namespace Declarations
    /// <summary>
    /// Defines constants for all namespaces referenced by the model design.
    /// </summary>
    public static partial class Namespaces
    {
        /// <summary>
        /// The URI for the Name0Xsd namespace (.NET code namespace is 'Prefix0').
        /// </summary>
        public const string Name0Xsd = "http://opcfoundation.org/UA/";

        /// <summary>
        /// The URI for the Name0Xsd namespace (.NET code namespace is 'Prefix0').
        /// </summary>
        public const string Name0Xsd = "http://opcfoundation.org/UA/";

        /// <summary>
        /// The URI for the Name2Xsd namespace (.NET code namespace is 'Prefix2').
        /// </summary>
        public const string Name2Xsd = "http://opcfoundation.org/UA/MachineVision";

        /// <summary>
        /// The URI for the Name2Xsd namespace (.NET code namespace is 'Prefix2').
        /// </summary>
        public const string Name2Xsd = "http://opcfoundation.org/UA/MachineVision";
    }
    #endregion

    #region SystemStateDataType Enumeration
    #if (!OPCUA_EXCLUDE_SystemStateDataType)
    /// <summary>
    /// A description for the SystemStateDataType DataType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [DataContract(Namespace = Prefix2.Namespaces.Name2Xsd)]
    public enum SystemStateDataType
    {
        /// <summary>
        /// Production: The vision system is currently working on a job.
        /// </summary>
        [EnumMember(Value = "PRD_1")]
        PRD_1 = 1,

        /// <summary>
        /// Stand by: The vision system is ready to accept a command but is currently not executing a job. It could for example be waiting for a Start command or a user input.
        /// </summary>
        [EnumMember(Value = "SBY_2")]
        SBY_2 = 2,

        /// <summary>
        /// Engineering: The vision system is not working and not ready to accept a command because a user is currently working on the system.  This could be for editing a recipe or changing the system configuration.
        /// </summary>
        [EnumMember(Value = "ENG_3")]
        ENG_3 = 3,

        /// <summary>
        /// Scheduled downtime: The vision system is not available for production and this was planned in advance. This could be for cleaning, maintenance or calibration works.
        /// </summary>
        [EnumMember(Value = "SDT_4")]
        SDT_4 = 4,

        /// <summary>
        /// Unscheduled downtime: The vision system is not available for production due to failure and repair. This covers all kinds of error states that might occur during operation.
        /// </summary>
        [EnumMember(Value = "UDT_5")]
        UDT_5 = 5,

        /// <summary>
        /// Nonscheduled time: The vision system is not working because no production was scheduled. This also covers things like operator training on the system.
        /// </summary>
        [EnumMember(Value = "NST_6")]
        NST_6 = 6,
    }

    #region SystemStateDataTypeCollection Class
    /// <summary>
    /// A collection of SystemStateDataType objects.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [CollectionDataContract(Name = "ListOfSystemStateDataType", Namespace = Prefix2.Namespaces.Name2Xsd, ItemName = "SystemStateDataType")]
    #if !NET_STANDARD
    public partial class SystemStateDataTypeCollection : List<SystemStateDataType>, ICloneable
    #else
    public partial class SystemStateDataTypeCollection : List<SystemStateDataType>
    #endif
    {
        #region Constructors
        /// <summary>
        /// Initializes the collection with default values.
        /// </summary>
        public SystemStateDataTypeCollection() {}

        /// <summary>
        /// Initializes the collection with an initial capacity.
        /// </summary>
        public SystemStateDataTypeCollection(int capacity) : base(capacity) {}

        /// <summary>
        /// Initializes the collection with another collection.
        /// </summary>
        public SystemStateDataTypeCollection(IEnumerable<SystemStateDataType> collection) : base(collection) {}
        #endregion

        #region Static Operators
        /// <summary>
        /// Converts an array to a collection.
        /// </summary>
        public static implicit operator SystemStateDataTypeCollection(SystemStateDataType[] values)
        {
            if (values != null)
            {
                return new SystemStateDataTypeCollection(values);
            }

            return new SystemStateDataTypeCollection();
        }

        /// <summary>
        /// Converts a collection to an array.
        /// </summary>
        public static explicit operator SystemStateDataType[](SystemStateDataTypeCollection values)
        {
            if (values != null)
            {
                return values.ToArray();
            }

            return null;
        }
        #endregion

        #if !NET_STANDARD
        #region ICloneable Methods
        /// <summary>
        /// Creates a deep copy of the collection.
        /// </summary>
        public object Clone()
        {
            return (SystemStateDataTypeCollection)this.MemberwiseClone();
        }
        #endregion
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            SystemStateDataTypeCollection clone = new SystemStateDataTypeCollection(this.Count);

            for (int ii = 0; ii < this.Count; ii++)
            {
                clone.Add((SystemStateDataType)Utils.Clone(this[ii]));
            }

            return clone;
        }
    }
    #endregion
    #endif
    #endregion

    #region TriStateBooleanDataType Enumeration
    #if (!OPCUA_EXCLUDE_TriStateBooleanDataType)
    /// <summary>
    /// A description for the TriStateBooleanDataType DataType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [DataContract(Namespace = Prefix2.Namespaces.Name2Xsd)]
    public enum TriStateBooleanDataType
    {
        /// <summary>
        /// The filtering function shall look for entities where the filtered value is FALSE.
        /// </summary>
        [EnumMember(Value = "FALSE_0")]
        FALSE_0 = 0,

        /// <summary>
        /// The filtering function shall look for entities where the filtered value is TRUE.
        /// </summary>
        [EnumMember(Value = "TRUE_1")]
        TRUE_1 = 1,

        /// <summary>
        /// The filtering function shall not take the value into account.
        /// </summary>
        [EnumMember(Value = "DONTCARE_2")]
        DONTCARE_2 = 2,
    }

    #region TriStateBooleanDataTypeCollection Class
    /// <summary>
    /// A collection of TriStateBooleanDataType objects.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [CollectionDataContract(Name = "ListOfTriStateBooleanDataType", Namespace = Prefix2.Namespaces.Name2Xsd, ItemName = "TriStateBooleanDataType")]
    #if !NET_STANDARD
    public partial class TriStateBooleanDataTypeCollection : List<TriStateBooleanDataType>, ICloneable
    #else
    public partial class TriStateBooleanDataTypeCollection : List<TriStateBooleanDataType>
    #endif
    {
        #region Constructors
        /// <summary>
        /// Initializes the collection with default values.
        /// </summary>
        public TriStateBooleanDataTypeCollection() {}

        /// <summary>
        /// Initializes the collection with an initial capacity.
        /// </summary>
        public TriStateBooleanDataTypeCollection(int capacity) : base(capacity) {}

        /// <summary>
        /// Initializes the collection with another collection.
        /// </summary>
        public TriStateBooleanDataTypeCollection(IEnumerable<TriStateBooleanDataType> collection) : base(collection) {}
        #endregion

        #region Static Operators
        /// <summary>
        /// Converts an array to a collection.
        /// </summary>
        public static implicit operator TriStateBooleanDataTypeCollection(TriStateBooleanDataType[] values)
        {
            if (values != null)
            {
                return new TriStateBooleanDataTypeCollection(values);
            }

            return new TriStateBooleanDataTypeCollection();
        }

        /// <summary>
        /// Converts a collection to an array.
        /// </summary>
        public static explicit operator TriStateBooleanDataType[](TriStateBooleanDataTypeCollection values)
        {
            if (values != null)
            {
                return values.ToArray();
            }

            return null;
        }
        #endregion

        #if !NET_STANDARD
        #region ICloneable Methods
        /// <summary>
        /// Creates a deep copy of the collection.
        /// </summary>
        public object Clone()
        {
            return (TriStateBooleanDataTypeCollection)this.MemberwiseClone();
        }
        #endregion
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            TriStateBooleanDataTypeCollection clone = new TriStateBooleanDataTypeCollection(this.Count);

            for (int ii = 0; ii < this.Count; ii++)
            {
                clone.Add((TriStateBooleanDataType)Utils.Clone(this[ii]));
            }

            return clone;
        }
    }
    #endregion
    #endif
    #endregion

    #region BinaryIdBaseDataType Class
    #if (!OPCUA_EXCLUDE_BinaryIdBaseDataType)
    /// <summary>
    /// A description for the BinaryIdBaseDataType DataType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [DataContract(Namespace = Prefix2.Namespaces.Name2Xsd)]
    public partial class BinaryIdBaseDataType : IEncodeable
    {
        #region Constructors
        /// <summary>
        /// The default constructor.
        /// </summary>
        public BinaryIdBaseDataType()
        {
            Initialize();
        }

        /// <summary>
        /// Called by the .NET framework during deserialization.
        /// </summary>
        [OnDeserializing]
        private void Initialize(StreamingContext context)
        {
            Initialize();
        }

        /// <summary>
        /// Sets private members to default values.
        /// </summary>
        private void Initialize()
        {
            m_ıd = null;
            m_version = null;
            m_hash = null;
            m_hashAlgorithm = null;
            m_description = null;
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// Id is a system-wide unique name for identifying the recipe.
        /// </summary>
        [DataMember(Name = "Id", IsRequired = false, Order = 1)]
        public string Id
        {
            get { return m_ıd;  }
            set { m_ıd = value; }
        }

        /// <summary>
        /// Represents an optional version number of the identified recipe. It is recommended to be of the format Major.minor.patch.build or a subset thereof, but the actual format is implementation defined.
        /// </summary>
        [DataMember(Name = "Version", IsRequired = false, Order = 2)]
        public string Version
        {
            get { return m_version;  }
            set { m_version = value; }
        }

        /// <summary>
        /// Represents an optional hash of the binary content of the actual recipe (as it would be transmitted by the transfer methods).
The hash is supposed to be provided by the environment if existing. The environment shall use the same hash function on all recipes so that a difference in the hash indicates a difference in the recipe. It is recommended to use the SHA-256 algorithm for computing the hash, however, the actual algorithm is implementation-defined.
        /// </summary>
        [DataMember(Name = "Hash", IsRequired = false, Order = 3)]
        public byte[] Hash
        {
            get { return m_hash;  }
            set { m_hash = value; }
        }

        /// <summary>
        /// Name of the hash function used. Required if internally and externally computed hashes are to be compared.
        /// </summary>
        [DataMember(Name = "HashAlgorithm", IsRequired = false, Order = 4)]
        public string HashAlgorithm
        {
            get { return m_hashAlgorithm;  }
            set { m_hashAlgorithm = value; }
        }

        /// <summary>
        /// Optional short human readable description of the configuration.
        /// </summary>
        [DataMember(Name = "Description", IsRequired = false, Order = 5)]
        public LocalizedText Description
        {
            get { return m_description;  }
            set { m_description = value; }
        }
        #endregion

        #region IEncodeable Members
        /// <summary cref="IEncodeable.TypeId" />
        public virtual ExpandedNodeId TypeId
        {
            get { return DataTypeIds.BinaryIdBaseDataType; }
        }

        /// <summary cref="IEncodeable.BinaryEncodingId" />
        public virtual ExpandedNodeId BinaryEncodingId
        {
            get { return ObjectIds.BinaryIdBaseDataType_Encoding_DefaultBinary; }
        }

        /// <summary cref="IEncodeable.XmlEncodingId" />
        public virtual ExpandedNodeId XmlEncodingId
        {
            get { return ObjectIds.BinaryIdBaseDataType_Encoding_DefaultXml; }
        }

        /// <summary cref="IEncodeable.Encode(IEncoder)" />
        public virtual void Encode(IEncoder encoder)
        {
            encoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);

            encoder.WriteString("Id", Id);
            encoder.WriteString("Version", Version);
            encoder.WriteByteString("Hash", Hash);
            encoder.WriteString("HashAlgorithm", HashAlgorithm);
            encoder.WriteLocalizedText("Description", Description);

            encoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.Decode(IDecoder)" />
        public virtual void Decode(IDecoder decoder)
        {
            decoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);

            Id = decoder.ReadString("Id");
            Version = decoder.ReadString("Version");
            Hash = decoder.ReadByteString("Hash");
            HashAlgorithm = decoder.ReadString("HashAlgorithm");
            Description = decoder.ReadLocalizedText("Description");

            decoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.IsEqual(IEncodeable)" />
        public virtual bool IsEqual(IEncodeable encodeable)
        {
            if (Object.ReferenceEquals(this, encodeable))
            {
                return true;
            }

            BinaryIdBaseDataType value = encodeable as BinaryIdBaseDataType;

            if (value == null)
            {
                return false;
            }

            if (!Utils.IsEqual(m_ıd, value.m_ıd)) return false;
            if (!Utils.IsEqual(m_version, value.m_version)) return false;
            if (!Utils.IsEqual(m_hash, value.m_hash)) return false;
            if (!Utils.IsEqual(m_hashAlgorithm, value.m_hashAlgorithm)) return false;
            if (!Utils.IsEqual(m_description, value.m_description)) return false;

            return true;
        }

        #if !NET_STANDARD
        /// <summary cref="ICloneable.Clone" />
        public virtual object Clone()
        {
            return (BinaryIdBaseDataType)this.MemberwiseClone();
        }
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            BinaryIdBaseDataType clone = (BinaryIdBaseDataType)base.MemberwiseClone();

            clone.m_ıd = (string)Utils.Clone(this.m_ıd);
            clone.m_version = (string)Utils.Clone(this.m_version);
            clone.m_hash = (byte[])Utils.Clone(this.m_hash);
            clone.m_hashAlgorithm = (string)Utils.Clone(this.m_hashAlgorithm);
            clone.m_description = (LocalizedText)Utils.Clone(this.m_description);

            return clone;
        }
        #endregion

        #region Private Fields
        private string m_ıd;
        private string m_version;
        private byte[] m_hash;
        private string m_hashAlgorithm;
        private LocalizedText m_description;
        #endregion
    }

    #region BinaryIdBaseDataTypeCollection Class
    /// <summary>
    /// A collection of BinaryIdBaseDataType objects.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [CollectionDataContract(Name = "ListOfBinaryIdBaseDataType", Namespace = Prefix2.Namespaces.Name2Xsd, ItemName = "BinaryIdBaseDataType")]
    #if !NET_STANDARD
    public partial class BinaryIdBaseDataTypeCollection : List<BinaryIdBaseDataType>, ICloneable
    #else
    public partial class BinaryIdBaseDataTypeCollection : List<BinaryIdBaseDataType>
    #endif
    {
        #region Constructors
        /// <summary>
        /// Initializes the collection with default values.
        /// </summary>
        public BinaryIdBaseDataTypeCollection() {}

        /// <summary>
        /// Initializes the collection with an initial capacity.
        /// </summary>
        public BinaryIdBaseDataTypeCollection(int capacity) : base(capacity) {}

        /// <summary>
        /// Initializes the collection with another collection.
        /// </summary>
        public BinaryIdBaseDataTypeCollection(IEnumerable<BinaryIdBaseDataType> collection) : base(collection) {}
        #endregion

        #region Static Operators
        /// <summary>
        /// Converts an array to a collection.
        /// </summary>
        public static implicit operator BinaryIdBaseDataTypeCollection(BinaryIdBaseDataType[] values)
        {
            if (values != null)
            {
                return new BinaryIdBaseDataTypeCollection(values);
            }

            return new BinaryIdBaseDataTypeCollection();
        }

        /// <summary>
        /// Converts a collection to an array.
        /// </summary>
        public static explicit operator BinaryIdBaseDataType[](BinaryIdBaseDataTypeCollection values)
        {
            if (values != null)
            {
                return values.ToArray();
            }

            return null;
        }
        #endregion

        #if !NET_STANDARD
        #region ICloneable Methods
        /// <summary>
        /// Creates a deep copy of the collection.
        /// </summary>
        public object Clone()
        {
            return (BinaryIdBaseDataTypeCollection)this.MemberwiseClone();
        }
        #endregion
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            BinaryIdBaseDataTypeCollection clone = new BinaryIdBaseDataTypeCollection(this.Count);

            for (int ii = 0; ii < this.Count; ii++)
            {
                clone.Add((BinaryIdBaseDataType)Utils.Clone(this[ii]));
            }

            return clone;
        }
    }
    #endregion
    #endif
    #endregion

    #region ConfigurationIdDataType Class
    #if (!OPCUA_EXCLUDE_ConfigurationIdDataType)
    /// <summary>
    /// A description for the ConfigurationIdDataType DataType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [DataContract(Namespace = Prefix2.Namespaces.Name2Xsd)]
    public partial class ConfigurationIdDataType : BinaryIdBaseDataType
    {
        #region Constructors
        /// <summary>
        /// The default constructor.
        /// </summary>
        public ConfigurationIdDataType()
        {
            Initialize();
        }

        /// <summary>
        /// Called by the .NET framework during deserialization.
        /// </summary>
        [OnDeserializing]
        private void Initialize(StreamingContext context)
        {
            Initialize();
        }

        /// <summary>
        /// Sets private members to default values.
        /// </summary>
        private void Initialize()
        {
        }
        #endregion

        #region Public Properties
        #endregion

        #region IEncodeable Members
        /// <summary cref="IEncodeable.TypeId" />
        public override ExpandedNodeId TypeId
        {
            get { return DataTypeIds.ConfigurationIdDataType; }
        }

        /// <summary cref="IEncodeable.BinaryEncodingId" />
        public override ExpandedNodeId BinaryEncodingId
        {
            get { return ObjectIds.ConfigurationIdDataType_Encoding_DefaultBinary; }
        }

        /// <summary cref="IEncodeable.XmlEncodingId" />
        public override ExpandedNodeId XmlEncodingId
        {
            get { return ObjectIds.ConfigurationIdDataType_Encoding_DefaultXml; }
        }

        /// <summary cref="IEncodeable.Encode(IEncoder)" />
        public override void Encode(IEncoder encoder)
        {
            base.Encode(encoder);

            encoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);


            encoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.Decode(IDecoder)" />
        public override void Decode(IDecoder decoder)
        {
            base.Decode(decoder);

            decoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);


            decoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.IsEqual(IEncodeable)" />
        public override bool IsEqual(IEncodeable encodeable)
        {
            if (Object.ReferenceEquals(this, encodeable))
            {
                return true;
            }

            ConfigurationIdDataType value = encodeable as ConfigurationIdDataType;

            if (value == null)
            {
                return false;
            }


            return true;
        }    

        #if !NET_STANDARD
        /// <summary cref="ICloneable.Clone" />
        public override object Clone()
        {
            return (ConfigurationIdDataType)this.MemberwiseClone();
        }
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            ConfigurationIdDataType clone = (ConfigurationIdDataType)base.MemberwiseClone();


            return clone;
        }
        #endregion

        #region Private Fields
        #endregion
    }

    #region ConfigurationIdDataTypeCollection Class
    /// <summary>
    /// A collection of ConfigurationIdDataType objects.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [CollectionDataContract(Name = "ListOfConfigurationIdDataType", Namespace = Prefix2.Namespaces.Name2Xsd, ItemName = "ConfigurationIdDataType")]
    #if !NET_STANDARD
    public partial class ConfigurationIdDataTypeCollection : List<ConfigurationIdDataType>, ICloneable
    #else
    public partial class ConfigurationIdDataTypeCollection : List<ConfigurationIdDataType>
    #endif
    {
        #region Constructors
        /// <summary>
        /// Initializes the collection with default values.
        /// </summary>
        public ConfigurationIdDataTypeCollection() {}

        /// <summary>
        /// Initializes the collection with an initial capacity.
        /// </summary>
        public ConfigurationIdDataTypeCollection(int capacity) : base(capacity) {}

        /// <summary>
        /// Initializes the collection with another collection.
        /// </summary>
        public ConfigurationIdDataTypeCollection(IEnumerable<ConfigurationIdDataType> collection) : base(collection) {}
        #endregion

        #region Static Operators
        /// <summary>
        /// Converts an array to a collection.
        /// </summary>
        public static implicit operator ConfigurationIdDataTypeCollection(ConfigurationIdDataType[] values)
        {
            if (values != null)
            {
                return new ConfigurationIdDataTypeCollection(values);
            }

            return new ConfigurationIdDataTypeCollection();
        }

        /// <summary>
        /// Converts a collection to an array.
        /// </summary>
        public static explicit operator ConfigurationIdDataType[](ConfigurationIdDataTypeCollection values)
        {
            if (values != null)
            {
                return values.ToArray();
            }

            return null;
        }
        #endregion

        #if !NET_STANDARD
        #region ICloneable Methods
        /// <summary>
        /// Creates a deep copy of the collection.
        /// </summary>
        public object Clone()
        {
            return (ConfigurationIdDataTypeCollection)this.MemberwiseClone();
        }
        #endregion
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            ConfigurationIdDataTypeCollection clone = new ConfigurationIdDataTypeCollection(this.Count);

            for (int ii = 0; ii < this.Count; ii++)
            {
                clone.Add((ConfigurationIdDataType)Utils.Clone(this[ii]));
            }

            return clone;
        }
    }
    #endregion
    #endif
    #endregion

    #region RecipeIdExternalDataType Class
    #if (!OPCUA_EXCLUDE_RecipeIdExternalDataType)
    /// <summary>
    /// A description for the RecipeIdExternalDataType DataType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [DataContract(Namespace = Prefix2.Namespaces.Name2Xsd)]
    public partial class RecipeIdExternalDataType : BinaryIdBaseDataType
    {
        #region Constructors
        /// <summary>
        /// The default constructor.
        /// </summary>
        public RecipeIdExternalDataType()
        {
            Initialize();
        }

        /// <summary>
        /// Called by the .NET framework during deserialization.
        /// </summary>
        [OnDeserializing]
        private void Initialize(StreamingContext context)
        {
            Initialize();
        }

        /// <summary>
        /// Sets private members to default values.
        /// </summary>
        private void Initialize()
        {
        }
        #endregion

        #region Public Properties
        #endregion

        #region IEncodeable Members
        /// <summary cref="IEncodeable.TypeId" />
        public override ExpandedNodeId TypeId
        {
            get { return DataTypeIds.RecipeIdExternalDataType; }
        }

        /// <summary cref="IEncodeable.BinaryEncodingId" />
        public override ExpandedNodeId BinaryEncodingId
        {
            get { return ObjectIds.RecipeIdExternalDataType_Encoding_DefaultBinary; }
        }

        /// <summary cref="IEncodeable.XmlEncodingId" />
        public override ExpandedNodeId XmlEncodingId
        {
            get { return ObjectIds.RecipeIdExternalDataType_Encoding_DefaultXml; }
        }

        /// <summary cref="IEncodeable.Encode(IEncoder)" />
        public override void Encode(IEncoder encoder)
        {
            base.Encode(encoder);

            encoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);


            encoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.Decode(IDecoder)" />
        public override void Decode(IDecoder decoder)
        {
            base.Decode(decoder);

            decoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);


            decoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.IsEqual(IEncodeable)" />
        public override bool IsEqual(IEncodeable encodeable)
        {
            if (Object.ReferenceEquals(this, encodeable))
            {
                return true;
            }

            RecipeIdExternalDataType value = encodeable as RecipeIdExternalDataType;

            if (value == null)
            {
                return false;
            }


            return true;
        }    

        #if !NET_STANDARD
        /// <summary cref="ICloneable.Clone" />
        public override object Clone()
        {
            return (RecipeIdExternalDataType)this.MemberwiseClone();
        }
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            RecipeIdExternalDataType clone = (RecipeIdExternalDataType)base.MemberwiseClone();


            return clone;
        }
        #endregion

        #region Private Fields
        #endregion
    }

    #region RecipeIdExternalDataTypeCollection Class
    /// <summary>
    /// A collection of RecipeIdExternalDataType objects.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [CollectionDataContract(Name = "ListOfRecipeIdExternalDataType", Namespace = Prefix2.Namespaces.Name2Xsd, ItemName = "RecipeIdExternalDataType")]
    #if !NET_STANDARD
    public partial class RecipeIdExternalDataTypeCollection : List<RecipeIdExternalDataType>, ICloneable
    #else
    public partial class RecipeIdExternalDataTypeCollection : List<RecipeIdExternalDataType>
    #endif
    {
        #region Constructors
        /// <summary>
        /// Initializes the collection with default values.
        /// </summary>
        public RecipeIdExternalDataTypeCollection() {}

        /// <summary>
        /// Initializes the collection with an initial capacity.
        /// </summary>
        public RecipeIdExternalDataTypeCollection(int capacity) : base(capacity) {}

        /// <summary>
        /// Initializes the collection with another collection.
        /// </summary>
        public RecipeIdExternalDataTypeCollection(IEnumerable<RecipeIdExternalDataType> collection) : base(collection) {}
        #endregion

        #region Static Operators
        /// <summary>
        /// Converts an array to a collection.
        /// </summary>
        public static implicit operator RecipeIdExternalDataTypeCollection(RecipeIdExternalDataType[] values)
        {
            if (values != null)
            {
                return new RecipeIdExternalDataTypeCollection(values);
            }

            return new RecipeIdExternalDataTypeCollection();
        }

        /// <summary>
        /// Converts a collection to an array.
        /// </summary>
        public static explicit operator RecipeIdExternalDataType[](RecipeIdExternalDataTypeCollection values)
        {
            if (values != null)
            {
                return values.ToArray();
            }

            return null;
        }
        #endregion

        #if !NET_STANDARD
        #region ICloneable Methods
        /// <summary>
        /// Creates a deep copy of the collection.
        /// </summary>
        public object Clone()
        {
            return (RecipeIdExternalDataTypeCollection)this.MemberwiseClone();
        }
        #endregion
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            RecipeIdExternalDataTypeCollection clone = new RecipeIdExternalDataTypeCollection(this.Count);

            for (int ii = 0; ii < this.Count; ii++)
            {
                clone.Add((RecipeIdExternalDataType)Utils.Clone(this[ii]));
            }

            return clone;
        }
    }
    #endregion
    #endif
    #endregion

    #region RecipeIdInternalDataType Class
    #if (!OPCUA_EXCLUDE_RecipeIdInternalDataType)
    /// <summary>
    /// A description for the RecipeIdInternalDataType DataType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [DataContract(Namespace = Prefix2.Namespaces.Name2Xsd)]
    public partial class RecipeIdInternalDataType : BinaryIdBaseDataType
    {
        #region Constructors
        /// <summary>
        /// The default constructor.
        /// </summary>
        public RecipeIdInternalDataType()
        {
            Initialize();
        }

        /// <summary>
        /// Called by the .NET framework during deserialization.
        /// </summary>
        [OnDeserializing]
        private void Initialize(StreamingContext context)
        {
            Initialize();
        }

        /// <summary>
        /// Sets private members to default values.
        /// </summary>
        private void Initialize()
        {
        }
        #endregion

        #region Public Properties
        #endregion

        #region IEncodeable Members
        /// <summary cref="IEncodeable.TypeId" />
        public override ExpandedNodeId TypeId
        {
            get { return DataTypeIds.RecipeIdInternalDataType; }
        }

        /// <summary cref="IEncodeable.BinaryEncodingId" />
        public override ExpandedNodeId BinaryEncodingId
        {
            get { return ObjectIds.RecipeIdInternalDataType_Encoding_DefaultBinary; }
        }

        /// <summary cref="IEncodeable.XmlEncodingId" />
        public override ExpandedNodeId XmlEncodingId
        {
            get { return ObjectIds.RecipeIdInternalDataType_Encoding_DefaultXml; }
        }

        /// <summary cref="IEncodeable.Encode(IEncoder)" />
        public override void Encode(IEncoder encoder)
        {
            base.Encode(encoder);

            encoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);


            encoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.Decode(IDecoder)" />
        public override void Decode(IDecoder decoder)
        {
            base.Decode(decoder);

            decoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);


            decoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.IsEqual(IEncodeable)" />
        public override bool IsEqual(IEncodeable encodeable)
        {
            if (Object.ReferenceEquals(this, encodeable))
            {
                return true;
            }

            RecipeIdInternalDataType value = encodeable as RecipeIdInternalDataType;

            if (value == null)
            {
                return false;
            }


            return true;
        }    

        #if !NET_STANDARD
        /// <summary cref="ICloneable.Clone" />
        public override object Clone()
        {
            return (RecipeIdInternalDataType)this.MemberwiseClone();
        }
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            RecipeIdInternalDataType clone = (RecipeIdInternalDataType)base.MemberwiseClone();


            return clone;
        }
        #endregion

        #region Private Fields
        #endregion
    }

    #region RecipeIdInternalDataTypeCollection Class
    /// <summary>
    /// A collection of RecipeIdInternalDataType objects.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [CollectionDataContract(Name = "ListOfRecipeIdInternalDataType", Namespace = Prefix2.Namespaces.Name2Xsd, ItemName = "RecipeIdInternalDataType")]
    #if !NET_STANDARD
    public partial class RecipeIdInternalDataTypeCollection : List<RecipeIdInternalDataType>, ICloneable
    #else
    public partial class RecipeIdInternalDataTypeCollection : List<RecipeIdInternalDataType>
    #endif
    {
        #region Constructors
        /// <summary>
        /// Initializes the collection with default values.
        /// </summary>
        public RecipeIdInternalDataTypeCollection() {}

        /// <summary>
        /// Initializes the collection with an initial capacity.
        /// </summary>
        public RecipeIdInternalDataTypeCollection(int capacity) : base(capacity) {}

        /// <summary>
        /// Initializes the collection with another collection.
        /// </summary>
        public RecipeIdInternalDataTypeCollection(IEnumerable<RecipeIdInternalDataType> collection) : base(collection) {}
        #endregion

        #region Static Operators
        /// <summary>
        /// Converts an array to a collection.
        /// </summary>
        public static implicit operator RecipeIdInternalDataTypeCollection(RecipeIdInternalDataType[] values)
        {
            if (values != null)
            {
                return new RecipeIdInternalDataTypeCollection(values);
            }

            return new RecipeIdInternalDataTypeCollection();
        }

        /// <summary>
        /// Converts a collection to an array.
        /// </summary>
        public static explicit operator RecipeIdInternalDataType[](RecipeIdInternalDataTypeCollection values)
        {
            if (values != null)
            {
                return values.ToArray();
            }

            return null;
        }
        #endregion

        #if !NET_STANDARD
        #region ICloneable Methods
        /// <summary>
        /// Creates a deep copy of the collection.
        /// </summary>
        public object Clone()
        {
            return (RecipeIdInternalDataTypeCollection)this.MemberwiseClone();
        }
        #endregion
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            RecipeIdInternalDataTypeCollection clone = new RecipeIdInternalDataTypeCollection(this.Count);

            for (int ii = 0; ii < this.Count; ii++)
            {
                clone.Add((RecipeIdInternalDataType)Utils.Clone(this[ii]));
            }

            return clone;
        }
    }
    #endregion
    #endif
    #endregion

    #region ConfigurationDataType Class
    #if (!OPCUA_EXCLUDE_ConfigurationDataType)
    /// <summary>
    /// A description for the ConfigurationDataType DataType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [DataContract(Namespace = Prefix2.Namespaces.Name2Xsd)]
    public partial class ConfigurationDataType : IEncodeable
    {
        #region Constructors
        /// <summary>
        /// The default constructor.
        /// </summary>
        public ConfigurationDataType()
        {
            Initialize();
        }

        /// <summary>
        /// Called by the .NET framework during deserialization.
        /// </summary>
        [OnDeserializing]
        private void Initialize(StreamingContext context)
        {
            Initialize();
        }

        /// <summary>
        /// Sets private members to default values.
        /// </summary>
        private void Initialize()
        {
            m_hasTransferableDataOnFile = true;
            m_externalId = new ConfigurationIdDataType();
            m_ınternalId = new ConfigurationIdDataType();
            m_lastModified = DateTime.MinValue;
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// Indicates that actual content of the configuration may be transferred through temporary file transfer method.
        /// </summary>
        [DataMember(Name = "HasTransferableDataOnFile", IsRequired = false, Order = 1)]
        public bool HasTransferableDataOnFile
        {
            get { return m_hasTransferableDataOnFile;  }
            set { m_hasTransferableDataOnFile = value; }
        }

        /// <summary>
        /// Identification of the configuration used by the environment. This argument must not be empty.
        /// </summary>
        [DataMember(Name = "ExternalId", IsRequired = false, Order = 2)]
        public ConfigurationIdDataType ExternalId
        {
            get
            {
                return m_externalId;
            }

            set
            {
                m_externalId = value;

                if (value == null)
                {
                    m_externalId = new ConfigurationIdDataType();
                }
            }
        }

        /// <summary>
        /// System-wide unique ID for identifying a configuration. This ID is assigned by the vision system.
        /// </summary>
        [DataMember(Name = "InternalId", IsRequired = false, Order = 3)]
        public ConfigurationIdDataType InternalId
        {
            get
            {
                return m_ınternalId;
            }

            set
            {
                m_ınternalId = value;

                if (value == null)
                {
                    m_ınternalId = new ConfigurationIdDataType();
                }
            }
        }

        /// <summary>
        /// The time and date when this configuration was last modified.
        /// </summary>
        [DataMember(Name = "LastModified", IsRequired = false, Order = 4)]
        public DateTime LastModified
        {
            get { return m_lastModified;  }
            set { m_lastModified = value; }
        }
        #endregion

        #region IEncodeable Members
        /// <summary cref="IEncodeable.TypeId" />
        public virtual ExpandedNodeId TypeId
        {
            get { return DataTypeIds.ConfigurationDataType; }
        }

        /// <summary cref="IEncodeable.BinaryEncodingId" />
        public virtual ExpandedNodeId BinaryEncodingId
        {
            get { return ObjectIds.ConfigurationDataType_Encoding_DefaultBinary; }
        }

        /// <summary cref="IEncodeable.XmlEncodingId" />
        public virtual ExpandedNodeId XmlEncodingId
        {
            get { return ObjectIds.ConfigurationDataType_Encoding_DefaultXml; }
        }

        /// <summary cref="IEncodeable.Encode(IEncoder)" />
        public virtual void Encode(IEncoder encoder)
        {
            encoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);

            encoder.WriteBoolean("HasTransferableDataOnFile", HasTransferableDataOnFile);
            encoder.WriteEncodeable("ExternalId", ExternalId, typeof(ConfigurationIdDataType));
            encoder.WriteEncodeable("InternalId", InternalId, typeof(ConfigurationIdDataType));
            encoder.WriteDateTime("LastModified", LastModified);

            encoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.Decode(IDecoder)" />
        public virtual void Decode(IDecoder decoder)
        {
            decoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);

            HasTransferableDataOnFile = decoder.ReadBoolean("HasTransferableDataOnFile");
            ExternalId = (ConfigurationIdDataType)decoder.ReadEncodeable("ExternalId", typeof(ConfigurationIdDataType));
            InternalId = (ConfigurationIdDataType)decoder.ReadEncodeable("InternalId", typeof(ConfigurationIdDataType));
            LastModified = decoder.ReadDateTime("LastModified");

            decoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.IsEqual(IEncodeable)" />
        public virtual bool IsEqual(IEncodeable encodeable)
        {
            if (Object.ReferenceEquals(this, encodeable))
            {
                return true;
            }

            ConfigurationDataType value = encodeable as ConfigurationDataType;

            if (value == null)
            {
                return false;
            }

            if (!Utils.IsEqual(m_hasTransferableDataOnFile, value.m_hasTransferableDataOnFile)) return false;
            if (!Utils.IsEqual(m_externalId, value.m_externalId)) return false;
            if (!Utils.IsEqual(m_ınternalId, value.m_ınternalId)) return false;
            if (!Utils.IsEqual(m_lastModified, value.m_lastModified)) return false;

            return true;
        }

        #if !NET_STANDARD
        /// <summary cref="ICloneable.Clone" />
        public virtual object Clone()
        {
            return (ConfigurationDataType)this.MemberwiseClone();
        }
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            ConfigurationDataType clone = (ConfigurationDataType)base.MemberwiseClone();

            clone.m_hasTransferableDataOnFile = (bool)Utils.Clone(this.m_hasTransferableDataOnFile);
            clone.m_externalId = (ConfigurationIdDataType)Utils.Clone(this.m_externalId);
            clone.m_ınternalId = (ConfigurationIdDataType)Utils.Clone(this.m_ınternalId);
            clone.m_lastModified = (DateTime)Utils.Clone(this.m_lastModified);

            return clone;
        }
        #endregion

        #region Private Fields
        private bool m_hasTransferableDataOnFile;
        private ConfigurationIdDataType m_externalId;
        private ConfigurationIdDataType m_ınternalId;
        private DateTime m_lastModified;
        #endregion
    }

    #region ConfigurationDataTypeCollection Class
    /// <summary>
    /// A collection of ConfigurationDataType objects.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [CollectionDataContract(Name = "ListOfConfigurationDataType", Namespace = Prefix2.Namespaces.Name2Xsd, ItemName = "ConfigurationDataType")]
    #if !NET_STANDARD
    public partial class ConfigurationDataTypeCollection : List<ConfigurationDataType>, ICloneable
    #else
    public partial class ConfigurationDataTypeCollection : List<ConfigurationDataType>
    #endif
    {
        #region Constructors
        /// <summary>
        /// Initializes the collection with default values.
        /// </summary>
        public ConfigurationDataTypeCollection() {}

        /// <summary>
        /// Initializes the collection with an initial capacity.
        /// </summary>
        public ConfigurationDataTypeCollection(int capacity) : base(capacity) {}

        /// <summary>
        /// Initializes the collection with another collection.
        /// </summary>
        public ConfigurationDataTypeCollection(IEnumerable<ConfigurationDataType> collection) : base(collection) {}
        #endregion

        #region Static Operators
        /// <summary>
        /// Converts an array to a collection.
        /// </summary>
        public static implicit operator ConfigurationDataTypeCollection(ConfigurationDataType[] values)
        {
            if (values != null)
            {
                return new ConfigurationDataTypeCollection(values);
            }

            return new ConfigurationDataTypeCollection();
        }

        /// <summary>
        /// Converts a collection to an array.
        /// </summary>
        public static explicit operator ConfigurationDataType[](ConfigurationDataTypeCollection values)
        {
            if (values != null)
            {
                return values.ToArray();
            }

            return null;
        }
        #endregion

        #if !NET_STANDARD
        #region ICloneable Methods
        /// <summary>
        /// Creates a deep copy of the collection.
        /// </summary>
        public object Clone()
        {
            return (ConfigurationDataTypeCollection)this.MemberwiseClone();
        }
        #endregion
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            ConfigurationDataTypeCollection clone = new ConfigurationDataTypeCollection(this.Count);

            for (int ii = 0; ii < this.Count; ii++)
            {
                clone.Add((ConfigurationDataType)Utils.Clone(this[ii]));
            }

            return clone;
        }
    }
    #endregion
    #endif
    #endregion

    #region ConfigurationTransferOptions Class
    #if (!OPCUA_EXCLUDE_ConfigurationTransferOptions)
    /// <summary>
    /// A description for the ConfigurationTransferOptions DataType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [DataContract(Namespace = Prefix2.Namespaces.Name2Xsd)]
    public partial class ConfigurationTransferOptions : IEncodeable
    {
        #region Constructors
        /// <summary>
        /// The default constructor.
        /// </summary>
        public ConfigurationTransferOptions()
        {
            Initialize();
        }

        /// <summary>
        /// Called by the .NET framework during deserialization.
        /// </summary>
        [OnDeserializing]
        private void Initialize(StreamingContext context)
        {
            Initialize();
        }

        /// <summary>
        /// Sets private members to default values.
        /// </summary>
        private void Initialize()
        {
            m_ınternalId = new ConfigurationIdDataType();
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// The Id of the configuration to be transferred to or from the client.
        /// </summary>
        [DataMember(Name = "InternalId", IsRequired = false, Order = 1)]
        public ConfigurationIdDataType InternalId
        {
            get
            {
                return m_ınternalId;
            }

            set
            {
                m_ınternalId = value;

                if (value == null)
                {
                    m_ınternalId = new ConfigurationIdDataType();
                }
            }
        }
        #endregion

        #region IEncodeable Members
        /// <summary cref="IEncodeable.TypeId" />
        public virtual ExpandedNodeId TypeId
        {
            get { return DataTypeIds.ConfigurationTransferOptions; }
        }

        /// <summary cref="IEncodeable.BinaryEncodingId" />
        public virtual ExpandedNodeId BinaryEncodingId
        {
            get { return ObjectIds.ConfigurationTransferOptions_Encoding_DefaultBinary; }
        }

        /// <summary cref="IEncodeable.XmlEncodingId" />
        public virtual ExpandedNodeId XmlEncodingId
        {
            get { return ObjectIds.ConfigurationTransferOptions_Encoding_DefaultXml; }
        }

        /// <summary cref="IEncodeable.Encode(IEncoder)" />
        public virtual void Encode(IEncoder encoder)
        {
            encoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);

            encoder.WriteEncodeable("InternalId", InternalId, typeof(ConfigurationIdDataType));

            encoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.Decode(IDecoder)" />
        public virtual void Decode(IDecoder decoder)
        {
            decoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);

            InternalId = (ConfigurationIdDataType)decoder.ReadEncodeable("InternalId", typeof(ConfigurationIdDataType));

            decoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.IsEqual(IEncodeable)" />
        public virtual bool IsEqual(IEncodeable encodeable)
        {
            if (Object.ReferenceEquals(this, encodeable))
            {
                return true;
            }

            ConfigurationTransferOptions value = encodeable as ConfigurationTransferOptions;

            if (value == null)
            {
                return false;
            }

            if (!Utils.IsEqual(m_ınternalId, value.m_ınternalId)) return false;

            return true;
        }

        #if !NET_STANDARD
        /// <summary cref="ICloneable.Clone" />
        public virtual object Clone()
        {
            return (ConfigurationTransferOptions)this.MemberwiseClone();
        }
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            ConfigurationTransferOptions clone = (ConfigurationTransferOptions)base.MemberwiseClone();

            clone.m_ınternalId = (ConfigurationIdDataType)Utils.Clone(this.m_ınternalId);

            return clone;
        }
        #endregion

        #region Private Fields
        private ConfigurationIdDataType m_ınternalId;
        #endregion
    }

    #region ConfigurationTransferOptionsCollection Class
    /// <summary>
    /// A collection of ConfigurationTransferOptions objects.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [CollectionDataContract(Name = "ListOfConfigurationTransferOptions", Namespace = Prefix2.Namespaces.Name2Xsd, ItemName = "ConfigurationTransferOptions")]
    #if !NET_STANDARD
    public partial class ConfigurationTransferOptionsCollection : List<ConfigurationTransferOptions>, ICloneable
    #else
    public partial class ConfigurationTransferOptionsCollection : List<ConfigurationTransferOptions>
    #endif
    {
        #region Constructors
        /// <summary>
        /// Initializes the collection with default values.
        /// </summary>
        public ConfigurationTransferOptionsCollection() {}

        /// <summary>
        /// Initializes the collection with an initial capacity.
        /// </summary>
        public ConfigurationTransferOptionsCollection(int capacity) : base(capacity) {}

        /// <summary>
        /// Initializes the collection with another collection.
        /// </summary>
        public ConfigurationTransferOptionsCollection(IEnumerable<ConfigurationTransferOptions> collection) : base(collection) {}
        #endregion

        #region Static Operators
        /// <summary>
        /// Converts an array to a collection.
        /// </summary>
        public static implicit operator ConfigurationTransferOptionsCollection(ConfigurationTransferOptions[] values)
        {
            if (values != null)
            {
                return new ConfigurationTransferOptionsCollection(values);
            }

            return new ConfigurationTransferOptionsCollection();
        }

        /// <summary>
        /// Converts a collection to an array.
        /// </summary>
        public static explicit operator ConfigurationTransferOptions[](ConfigurationTransferOptionsCollection values)
        {
            if (values != null)
            {
                return values.ToArray();
            }

            return null;
        }
        #endregion

        #if !NET_STANDARD
        #region ICloneable Methods
        /// <summary>
        /// Creates a deep copy of the collection.
        /// </summary>
        public object Clone()
        {
            return (ConfigurationTransferOptionsCollection)this.MemberwiseClone();
        }
        #endregion
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            ConfigurationTransferOptionsCollection clone = new ConfigurationTransferOptionsCollection(this.Count);

            for (int ii = 0; ii < this.Count; ii++)
            {
                clone.Add((ConfigurationTransferOptions)Utils.Clone(this[ii]));
            }

            return clone;
        }
    }
    #endregion
    #endif
    #endregion

    #region JobIdDataType Class
    #if (!OPCUA_EXCLUDE_JobIdDataType)
    /// <summary>
    /// A description for the JobIdDataType DataType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [DataContract(Namespace = Prefix2.Namespaces.Name2Xsd)]
    public partial class JobIdDataType : IEncodeable
    {
        #region Constructors
        /// <summary>
        /// The default constructor.
        /// </summary>
        public JobIdDataType()
        {
            Initialize();
        }

        /// <summary>
        /// Called by the .NET framework during deserialization.
        /// </summary>
        [OnDeserializing]
        private void Initialize(StreamingContext context)
        {
            Initialize();
        }

        /// <summary>
        /// Sets private members to default values.
        /// </summary>
        private void Initialize()
        {
            m_ıd = null;
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// Id is a system-wide unique identifier/name for identifying the job carried out.
        /// </summary>
        [DataMember(Name = "Id", IsRequired = false, Order = 1)]
        public string Id
        {
            get { return m_ıd;  }
            set { m_ıd = value; }
        }
        #endregion

        #region IEncodeable Members
        /// <summary cref="IEncodeable.TypeId" />
        public virtual ExpandedNodeId TypeId
        {
            get { return DataTypeIds.JobIdDataType; }
        }

        /// <summary cref="IEncodeable.BinaryEncodingId" />
        public virtual ExpandedNodeId BinaryEncodingId
        {
            get { return ObjectIds.JobIdDataType_Encoding_DefaultBinary; }
        }

        /// <summary cref="IEncodeable.XmlEncodingId" />
        public virtual ExpandedNodeId XmlEncodingId
        {
            get { return ObjectIds.JobIdDataType_Encoding_DefaultXml; }
        }

        /// <summary cref="IEncodeable.Encode(IEncoder)" />
        public virtual void Encode(IEncoder encoder)
        {
            encoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);

            encoder.WriteString("Id", Id);

            encoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.Decode(IDecoder)" />
        public virtual void Decode(IDecoder decoder)
        {
            decoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);

            Id = decoder.ReadString("Id");

            decoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.IsEqual(IEncodeable)" />
        public virtual bool IsEqual(IEncodeable encodeable)
        {
            if (Object.ReferenceEquals(this, encodeable))
            {
                return true;
            }

            JobIdDataType value = encodeable as JobIdDataType;

            if (value == null)
            {
                return false;
            }

            if (!Utils.IsEqual(m_ıd, value.m_ıd)) return false;

            return true;
        }

        #if !NET_STANDARD
        /// <summary cref="ICloneable.Clone" />
        public virtual object Clone()
        {
            return (JobIdDataType)this.MemberwiseClone();
        }
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            JobIdDataType clone = (JobIdDataType)base.MemberwiseClone();

            clone.m_ıd = (string)Utils.Clone(this.m_ıd);

            return clone;
        }
        #endregion

        #region Private Fields
        private string m_ıd;
        #endregion
    }

    #region JobIdDataTypeCollection Class
    /// <summary>
    /// A collection of JobIdDataType objects.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [CollectionDataContract(Name = "ListOfJobIdDataType", Namespace = Prefix2.Namespaces.Name2Xsd, ItemName = "JobIdDataType")]
    #if !NET_STANDARD
    public partial class JobIdDataTypeCollection : List<JobIdDataType>, ICloneable
    #else
    public partial class JobIdDataTypeCollection : List<JobIdDataType>
    #endif
    {
        #region Constructors
        /// <summary>
        /// Initializes the collection with default values.
        /// </summary>
        public JobIdDataTypeCollection() {}

        /// <summary>
        /// Initializes the collection with an initial capacity.
        /// </summary>
        public JobIdDataTypeCollection(int capacity) : base(capacity) {}

        /// <summary>
        /// Initializes the collection with another collection.
        /// </summary>
        public JobIdDataTypeCollection(IEnumerable<JobIdDataType> collection) : base(collection) {}
        #endregion

        #region Static Operators
        /// <summary>
        /// Converts an array to a collection.
        /// </summary>
        public static implicit operator JobIdDataTypeCollection(JobIdDataType[] values)
        {
            if (values != null)
            {
                return new JobIdDataTypeCollection(values);
            }

            return new JobIdDataTypeCollection();
        }

        /// <summary>
        /// Converts a collection to an array.
        /// </summary>
        public static explicit operator JobIdDataType[](JobIdDataTypeCollection values)
        {
            if (values != null)
            {
                return values.ToArray();
            }

            return null;
        }
        #endregion

        #if !NET_STANDARD
        #region ICloneable Methods
        /// <summary>
        /// Creates a deep copy of the collection.
        /// </summary>
        public object Clone()
        {
            return (JobIdDataTypeCollection)this.MemberwiseClone();
        }
        #endregion
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            JobIdDataTypeCollection clone = new JobIdDataTypeCollection(this.Count);

            for (int ii = 0; ii < this.Count; ii++)
            {
                clone.Add((JobIdDataType)Utils.Clone(this[ii]));
            }

            return clone;
        }
    }
    #endregion
    #endif
    #endregion

    #region MeasIdDataType Class
    #if (!OPCUA_EXCLUDE_MeasIdDataType)
    /// <summary>
    /// A description for the MeasIdDataType DataType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [DataContract(Namespace = Prefix2.Namespaces.Name2Xsd)]
    public partial class MeasIdDataType : IEncodeable
    {
        #region Constructors
        /// <summary>
        /// The default constructor.
        /// </summary>
        public MeasIdDataType()
        {
            Initialize();
        }

        /// <summary>
        /// Called by the .NET framework during deserialization.
        /// </summary>
        [OnDeserializing]
        private void Initialize(StreamingContext context)
        {
            Initialize();
        }

        /// <summary>
        /// Sets private members to default values.
        /// </summary>
        private void Initialize()
        {
            m_ıd = null;
            m_description = null;
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// Id is an identifier/name for identifying the measurement operation. This identifier is passed by the client to the vision system so no assumptions can be made about its uniqueness or other properties.
        /// </summary>
        [DataMember(Name = "Id", IsRequired = false, Order = 1)]
        public string Id
        {
            get { return m_ıd;  }
            set { m_ıd = value; }
        }

        /// <summary>
        /// Optional short human readable description of the measurement.
        /// </summary>
        [DataMember(Name = "Description", IsRequired = false, Order = 2)]
        public LocalizedText Description
        {
            get { return m_description;  }
            set { m_description = value; }
        }
        #endregion

        #region IEncodeable Members
        /// <summary cref="IEncodeable.TypeId" />
        public virtual ExpandedNodeId TypeId
        {
            get { return DataTypeIds.MeasIdDataType; }
        }

        /// <summary cref="IEncodeable.BinaryEncodingId" />
        public virtual ExpandedNodeId BinaryEncodingId
        {
            get { return ObjectIds.MeasIdDataType_Encoding_DefaultBinary; }
        }

        /// <summary cref="IEncodeable.XmlEncodingId" />
        public virtual ExpandedNodeId XmlEncodingId
        {
            get { return ObjectIds.MeasIdDataType_Encoding_DefaultXml; }
        }

        /// <summary cref="IEncodeable.Encode(IEncoder)" />
        public virtual void Encode(IEncoder encoder)
        {
            encoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);

            encoder.WriteString("Id", Id);
            encoder.WriteLocalizedText("Description", Description);

            encoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.Decode(IDecoder)" />
        public virtual void Decode(IDecoder decoder)
        {
            decoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);

            Id = decoder.ReadString("Id");
            Description = decoder.ReadLocalizedText("Description");

            decoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.IsEqual(IEncodeable)" />
        public virtual bool IsEqual(IEncodeable encodeable)
        {
            if (Object.ReferenceEquals(this, encodeable))
            {
                return true;
            }

            MeasIdDataType value = encodeable as MeasIdDataType;

            if (value == null)
            {
                return false;
            }

            if (!Utils.IsEqual(m_ıd, value.m_ıd)) return false;
            if (!Utils.IsEqual(m_description, value.m_description)) return false;

            return true;
        }

        #if !NET_STANDARD
        /// <summary cref="ICloneable.Clone" />
        public virtual object Clone()
        {
            return (MeasIdDataType)this.MemberwiseClone();
        }
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            MeasIdDataType clone = (MeasIdDataType)base.MemberwiseClone();

            clone.m_ıd = (string)Utils.Clone(this.m_ıd);
            clone.m_description = (LocalizedText)Utils.Clone(this.m_description);

            return clone;
        }
        #endregion

        #region Private Fields
        private string m_ıd;
        private LocalizedText m_description;
        #endregion
    }

    #region MeasIdDataTypeCollection Class
    /// <summary>
    /// A collection of MeasIdDataType objects.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [CollectionDataContract(Name = "ListOfMeasIdDataType", Namespace = Prefix2.Namespaces.Name2Xsd, ItemName = "MeasIdDataType")]
    #if !NET_STANDARD
    public partial class MeasIdDataTypeCollection : List<MeasIdDataType>, ICloneable
    #else
    public partial class MeasIdDataTypeCollection : List<MeasIdDataType>
    #endif
    {
        #region Constructors
        /// <summary>
        /// Initializes the collection with default values.
        /// </summary>
        public MeasIdDataTypeCollection() {}

        /// <summary>
        /// Initializes the collection with an initial capacity.
        /// </summary>
        public MeasIdDataTypeCollection(int capacity) : base(capacity) {}

        /// <summary>
        /// Initializes the collection with another collection.
        /// </summary>
        public MeasIdDataTypeCollection(IEnumerable<MeasIdDataType> collection) : base(collection) {}
        #endregion

        #region Static Operators
        /// <summary>
        /// Converts an array to a collection.
        /// </summary>
        public static implicit operator MeasIdDataTypeCollection(MeasIdDataType[] values)
        {
            if (values != null)
            {
                return new MeasIdDataTypeCollection(values);
            }

            return new MeasIdDataTypeCollection();
        }

        /// <summary>
        /// Converts a collection to an array.
        /// </summary>
        public static explicit operator MeasIdDataType[](MeasIdDataTypeCollection values)
        {
            if (values != null)
            {
                return values.ToArray();
            }

            return null;
        }
        #endregion

        #if !NET_STANDARD
        #region ICloneable Methods
        /// <summary>
        /// Creates a deep copy of the collection.
        /// </summary>
        public object Clone()
        {
            return (MeasIdDataTypeCollection)this.MemberwiseClone();
        }
        #endregion
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            MeasIdDataTypeCollection clone = new MeasIdDataTypeCollection(this.Count);

            for (int ii = 0; ii < this.Count; ii++)
            {
                clone.Add((MeasIdDataType)Utils.Clone(this[ii]));
            }

            return clone;
        }
    }
    #endregion
    #endif
    #endregion

    #region PartIdDataType Class
    #if (!OPCUA_EXCLUDE_PartIdDataType)
    /// <summary>
    /// A description for the PartIdDataType DataType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [DataContract(Namespace = Prefix2.Namespaces.Name2Xsd)]
    public partial class PartIdDataType : IEncodeable
    {
        #region Constructors
        /// <summary>
        /// The default constructor.
        /// </summary>
        public PartIdDataType()
        {
            Initialize();
        }

        /// <summary>
        /// Called by the .NET framework during deserialization.
        /// </summary>
        [OnDeserializing]
        private void Initialize(StreamingContext context)
        {
            Initialize();
        }

        /// <summary>
        /// Sets private members to default values.
        /// </summary>
        private void Initialize()
        {
            m_ıd = null;
            m_description = null;
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// Describes the connection between a unit under test and a result, which was created during the processing of a recipe applied on this unit under test. Usually passed by the client with a Start method call and not changed by the server.
        /// </summary>
        [DataMember(Name = "Id", IsRequired = false, Order = 1)]
        public string Id
        {
            get { return m_ıd;  }
            set { m_ıd = value; }
        }

        /// <summary>
        /// Optional short human readable description of the part.
        /// </summary>
        [DataMember(Name = "Description", IsRequired = false, Order = 2)]
        public LocalizedText Description
        {
            get { return m_description;  }
            set { m_description = value; }
        }
        #endregion

        #region IEncodeable Members
        /// <summary cref="IEncodeable.TypeId" />
        public virtual ExpandedNodeId TypeId
        {
            get { return DataTypeIds.PartIdDataType; }
        }

        /// <summary cref="IEncodeable.BinaryEncodingId" />
        public virtual ExpandedNodeId BinaryEncodingId
        {
            get { return ObjectIds.PartIdDataType_Encoding_DefaultBinary; }
        }

        /// <summary cref="IEncodeable.XmlEncodingId" />
        public virtual ExpandedNodeId XmlEncodingId
        {
            get { return ObjectIds.PartIdDataType_Encoding_DefaultXml; }
        }

        /// <summary cref="IEncodeable.Encode(IEncoder)" />
        public virtual void Encode(IEncoder encoder)
        {
            encoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);

            encoder.WriteString("Id", Id);
            encoder.WriteLocalizedText("Description", Description);

            encoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.Decode(IDecoder)" />
        public virtual void Decode(IDecoder decoder)
        {
            decoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);

            Id = decoder.ReadString("Id");
            Description = decoder.ReadLocalizedText("Description");

            decoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.IsEqual(IEncodeable)" />
        public virtual bool IsEqual(IEncodeable encodeable)
        {
            if (Object.ReferenceEquals(this, encodeable))
            {
                return true;
            }

            PartIdDataType value = encodeable as PartIdDataType;

            if (value == null)
            {
                return false;
            }

            if (!Utils.IsEqual(m_ıd, value.m_ıd)) return false;
            if (!Utils.IsEqual(m_description, value.m_description)) return false;

            return true;
        }

        #if !NET_STANDARD
        /// <summary cref="ICloneable.Clone" />
        public virtual object Clone()
        {
            return (PartIdDataType)this.MemberwiseClone();
        }
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            PartIdDataType clone = (PartIdDataType)base.MemberwiseClone();

            clone.m_ıd = (string)Utils.Clone(this.m_ıd);
            clone.m_description = (LocalizedText)Utils.Clone(this.m_description);

            return clone;
        }
        #endregion

        #region Private Fields
        private string m_ıd;
        private LocalizedText m_description;
        #endregion
    }

    #region PartIdDataTypeCollection Class
    /// <summary>
    /// A collection of PartIdDataType objects.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [CollectionDataContract(Name = "ListOfPartIdDataType", Namespace = Prefix2.Namespaces.Name2Xsd, ItemName = "PartIdDataType")]
    #if !NET_STANDARD
    public partial class PartIdDataTypeCollection : List<PartIdDataType>, ICloneable
    #else
    public partial class PartIdDataTypeCollection : List<PartIdDataType>
    #endif
    {
        #region Constructors
        /// <summary>
        /// Initializes the collection with default values.
        /// </summary>
        public PartIdDataTypeCollection() {}

        /// <summary>
        /// Initializes the collection with an initial capacity.
        /// </summary>
        public PartIdDataTypeCollection(int capacity) : base(capacity) {}

        /// <summary>
        /// Initializes the collection with another collection.
        /// </summary>
        public PartIdDataTypeCollection(IEnumerable<PartIdDataType> collection) : base(collection) {}
        #endregion

        #region Static Operators
        /// <summary>
        /// Converts an array to a collection.
        /// </summary>
        public static implicit operator PartIdDataTypeCollection(PartIdDataType[] values)
        {
            if (values != null)
            {
                return new PartIdDataTypeCollection(values);
            }

            return new PartIdDataTypeCollection();
        }

        /// <summary>
        /// Converts a collection to an array.
        /// </summary>
        public static explicit operator PartIdDataType[](PartIdDataTypeCollection values)
        {
            if (values != null)
            {
                return values.ToArray();
            }

            return null;
        }
        #endregion

        #if !NET_STANDARD
        #region ICloneable Methods
        /// <summary>
        /// Creates a deep copy of the collection.
        /// </summary>
        public object Clone()
        {
            return (PartIdDataTypeCollection)this.MemberwiseClone();
        }
        #endregion
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            PartIdDataTypeCollection clone = new PartIdDataTypeCollection(this.Count);

            for (int ii = 0; ii < this.Count; ii++)
            {
                clone.Add((PartIdDataType)Utils.Clone(this[ii]));
            }

            return clone;
        }
    }
    #endregion
    #endif
    #endregion

    #region ProcessingTimesDataType Class
    #if (!OPCUA_EXCLUDE_ProcessingTimesDataType)
    /// <summary>
    /// A description for the ProcessingTimesDataType DataType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [DataContract(Namespace = Prefix2.Namespaces.Name2Xsd)]
    public partial class ProcessingTimesDataType : IEncodeable
    {
        #region Constructors
        /// <summary>
        /// The default constructor.
        /// </summary>
        public ProcessingTimesDataType()
        {
            Initialize();
        }

        /// <summary>
        /// Called by the .NET framework during deserialization.
        /// </summary>
        [OnDeserializing]
        private void Initialize(StreamingContext context)
        {
            Initialize();
        }

        /// <summary>
        /// Sets private members to default values.
        /// </summary>
        private void Initialize()
        {
            m_startTime = DateTime.MinValue;
            m_endTime = DateTime.MinValue;
            m_acquisitionDuration = (double)0;
            m_processingDuration = (double)0;
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// Contains the time when the vision system started execution of the recipe.
        /// </summary>
        [DataMember(Name = "StartTime", IsRequired = false, Order = 1)]
        public DateTime StartTime
        {
            get { return m_startTime;  }
            set { m_startTime = value; }
        }

        /// <summary>
        /// Contains the time when the vision system finished (or stopped/aborted) execution of the recipe.
        /// </summary>
        [DataMember(Name = "EndTime", IsRequired = false, Order = 2)]
        public DateTime EndTime
        {
            get { return m_endTime;  }
            set { m_endTime = value; }
        }

        /// <summary>
        /// Time spent by the vision system acquiring images.
        /// </summary>
        [DataMember(Name = "AcquisitionDuration", IsRequired = false, Order = 3)]
        public double AcquisitionDuration
        {
            get { return m_acquisitionDuration;  }
            set { m_acquisitionDuration = value; }
        }

        /// <summary>
        /// Time spent by the vision system processing data.
        /// </summary>
        [DataMember(Name = "ProcessingDuration", IsRequired = false, Order = 4)]
        public double ProcessingDuration
        {
            get { return m_processingDuration;  }
            set { m_processingDuration = value; }
        }
        #endregion

        #region IEncodeable Members
        /// <summary cref="IEncodeable.TypeId" />
        public virtual ExpandedNodeId TypeId
        {
            get { return DataTypeIds.ProcessingTimesDataType; }
        }

        /// <summary cref="IEncodeable.BinaryEncodingId" />
        public virtual ExpandedNodeId BinaryEncodingId
        {
            get { return ObjectIds.ProcessingTimesDataType_Encoding_DefaultBinary; }
        }

        /// <summary cref="IEncodeable.XmlEncodingId" />
        public virtual ExpandedNodeId XmlEncodingId
        {
            get { return ObjectIds.ProcessingTimesDataType_Encoding_DefaultXml; }
        }

        /// <summary cref="IEncodeable.Encode(IEncoder)" />
        public virtual void Encode(IEncoder encoder)
        {
            encoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);

            encoder.WriteDateTime("StartTime", StartTime);
            encoder.WriteDateTime("EndTime", EndTime);
            encoder.WriteDouble("AcquisitionDuration", AcquisitionDuration);
            encoder.WriteDouble("ProcessingDuration", ProcessingDuration);

            encoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.Decode(IDecoder)" />
        public virtual void Decode(IDecoder decoder)
        {
            decoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);

            StartTime = decoder.ReadDateTime("StartTime");
            EndTime = decoder.ReadDateTime("EndTime");
            AcquisitionDuration = decoder.ReadDouble("AcquisitionDuration");
            ProcessingDuration = decoder.ReadDouble("ProcessingDuration");

            decoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.IsEqual(IEncodeable)" />
        public virtual bool IsEqual(IEncodeable encodeable)
        {
            if (Object.ReferenceEquals(this, encodeable))
            {
                return true;
            }

            ProcessingTimesDataType value = encodeable as ProcessingTimesDataType;

            if (value == null)
            {
                return false;
            }

            if (!Utils.IsEqual(m_startTime, value.m_startTime)) return false;
            if (!Utils.IsEqual(m_endTime, value.m_endTime)) return false;
            if (!Utils.IsEqual(m_acquisitionDuration, value.m_acquisitionDuration)) return false;
            if (!Utils.IsEqual(m_processingDuration, value.m_processingDuration)) return false;

            return true;
        }

        #if !NET_STANDARD
        /// <summary cref="ICloneable.Clone" />
        public virtual object Clone()
        {
            return (ProcessingTimesDataType)this.MemberwiseClone();
        }
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            ProcessingTimesDataType clone = (ProcessingTimesDataType)base.MemberwiseClone();

            clone.m_startTime = (DateTime)Utils.Clone(this.m_startTime);
            clone.m_endTime = (DateTime)Utils.Clone(this.m_endTime);
            clone.m_acquisitionDuration = (double)Utils.Clone(this.m_acquisitionDuration);
            clone.m_processingDuration = (double)Utils.Clone(this.m_processingDuration);

            return clone;
        }
        #endregion

        #region Private Fields
        private DateTime m_startTime;
        private DateTime m_endTime;
        private double m_acquisitionDuration;
        private double m_processingDuration;
        #endregion
    }

    #region ProcessingTimesDataTypeCollection Class
    /// <summary>
    /// A collection of ProcessingTimesDataType objects.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [CollectionDataContract(Name = "ListOfProcessingTimesDataType", Namespace = Prefix2.Namespaces.Name2Xsd, ItemName = "ProcessingTimesDataType")]
    #if !NET_STANDARD
    public partial class ProcessingTimesDataTypeCollection : List<ProcessingTimesDataType>, ICloneable
    #else
    public partial class ProcessingTimesDataTypeCollection : List<ProcessingTimesDataType>
    #endif
    {
        #region Constructors
        /// <summary>
        /// Initializes the collection with default values.
        /// </summary>
        public ProcessingTimesDataTypeCollection() {}

        /// <summary>
        /// Initializes the collection with an initial capacity.
        /// </summary>
        public ProcessingTimesDataTypeCollection(int capacity) : base(capacity) {}

        /// <summary>
        /// Initializes the collection with another collection.
        /// </summary>
        public ProcessingTimesDataTypeCollection(IEnumerable<ProcessingTimesDataType> collection) : base(collection) {}
        #endregion

        #region Static Operators
        /// <summary>
        /// Converts an array to a collection.
        /// </summary>
        public static implicit operator ProcessingTimesDataTypeCollection(ProcessingTimesDataType[] values)
        {
            if (values != null)
            {
                return new ProcessingTimesDataTypeCollection(values);
            }

            return new ProcessingTimesDataTypeCollection();
        }

        /// <summary>
        /// Converts a collection to an array.
        /// </summary>
        public static explicit operator ProcessingTimesDataType[](ProcessingTimesDataTypeCollection values)
        {
            if (values != null)
            {
                return values.ToArray();
            }

            return null;
        }
        #endregion

        #if !NET_STANDARD
        #region ICloneable Methods
        /// <summary>
        /// Creates a deep copy of the collection.
        /// </summary>
        public object Clone()
        {
            return (ProcessingTimesDataTypeCollection)this.MemberwiseClone();
        }
        #endregion
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            ProcessingTimesDataTypeCollection clone = new ProcessingTimesDataTypeCollection(this.Count);

            for (int ii = 0; ii < this.Count; ii++)
            {
                clone.Add((ProcessingTimesDataType)Utils.Clone(this[ii]));
            }

            return clone;
        }
    }
    #endregion
    #endif
    #endregion

    #region ProductDataType Class
    #if (!OPCUA_EXCLUDE_ProductDataType)
    /// <summary>
    /// A description for the ProductDataType DataType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [DataContract(Namespace = Prefix2.Namespaces.Name2Xsd)]
    public partial class ProductDataType : IEncodeable
    {
        #region Constructors
        /// <summary>
        /// The default constructor.
        /// </summary>
        public ProductDataType()
        {
            Initialize();
        }

        /// <summary>
        /// Called by the .NET framework during deserialization.
        /// </summary>
        [OnDeserializing]
        private void Initialize(StreamingContext context)
        {
            Initialize();
        }

        /// <summary>
        /// Sets private members to default values.
        /// </summary>
        private void Initialize()
        {
            m_externalId = new ProductIdDataType();
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// Identification of the product used by the environment. This argument must not be empty.
        /// </summary>
        [DataMember(Name = "ExternalId", IsRequired = false, Order = 1)]
        public ProductIdDataType ExternalId
        {
            get
            {
                return m_externalId;
            }

            set
            {
                m_externalId = value;

                if (value == null)
                {
                    m_externalId = new ProductIdDataType();
                }
            }
        }
        #endregion

        #region IEncodeable Members
        /// <summary cref="IEncodeable.TypeId" />
        public virtual ExpandedNodeId TypeId
        {
            get { return DataTypeIds.ProductDataType; }
        }

        /// <summary cref="IEncodeable.BinaryEncodingId" />
        public virtual ExpandedNodeId BinaryEncodingId
        {
            get { return ObjectIds.ProductDataType_Encoding_DefaultBinary; }
        }

        /// <summary cref="IEncodeable.XmlEncodingId" />
        public virtual ExpandedNodeId XmlEncodingId
        {
            get { return ObjectIds.ProductDataType_Encoding_DefaultXml; }
        }

        /// <summary cref="IEncodeable.Encode(IEncoder)" />
        public virtual void Encode(IEncoder encoder)
        {
            encoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);

            encoder.WriteEncodeable("ExternalId", ExternalId, typeof(ProductIdDataType));

            encoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.Decode(IDecoder)" />
        public virtual void Decode(IDecoder decoder)
        {
            decoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);

            ExternalId = (ProductIdDataType)decoder.ReadEncodeable("ExternalId", typeof(ProductIdDataType));

            decoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.IsEqual(IEncodeable)" />
        public virtual bool IsEqual(IEncodeable encodeable)
        {
            if (Object.ReferenceEquals(this, encodeable))
            {
                return true;
            }

            ProductDataType value = encodeable as ProductDataType;

            if (value == null)
            {
                return false;
            }

            if (!Utils.IsEqual(m_externalId, value.m_externalId)) return false;

            return true;
        }

        #if !NET_STANDARD
        /// <summary cref="ICloneable.Clone" />
        public virtual object Clone()
        {
            return (ProductDataType)this.MemberwiseClone();
        }
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            ProductDataType clone = (ProductDataType)base.MemberwiseClone();

            clone.m_externalId = (ProductIdDataType)Utils.Clone(this.m_externalId);

            return clone;
        }
        #endregion

        #region Private Fields
        private ProductIdDataType m_externalId;
        #endregion
    }

    #region ProductDataTypeCollection Class
    /// <summary>
    /// A collection of ProductDataType objects.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [CollectionDataContract(Name = "ListOfProductDataType", Namespace = Prefix2.Namespaces.Name2Xsd, ItemName = "ProductDataType")]
    #if !NET_STANDARD
    public partial class ProductDataTypeCollection : List<ProductDataType>, ICloneable
    #else
    public partial class ProductDataTypeCollection : List<ProductDataType>
    #endif
    {
        #region Constructors
        /// <summary>
        /// Initializes the collection with default values.
        /// </summary>
        public ProductDataTypeCollection() {}

        /// <summary>
        /// Initializes the collection with an initial capacity.
        /// </summary>
        public ProductDataTypeCollection(int capacity) : base(capacity) {}

        /// <summary>
        /// Initializes the collection with another collection.
        /// </summary>
        public ProductDataTypeCollection(IEnumerable<ProductDataType> collection) : base(collection) {}
        #endregion

        #region Static Operators
        /// <summary>
        /// Converts an array to a collection.
        /// </summary>
        public static implicit operator ProductDataTypeCollection(ProductDataType[] values)
        {
            if (values != null)
            {
                return new ProductDataTypeCollection(values);
            }

            return new ProductDataTypeCollection();
        }

        /// <summary>
        /// Converts a collection to an array.
        /// </summary>
        public static explicit operator ProductDataType[](ProductDataTypeCollection values)
        {
            if (values != null)
            {
                return values.ToArray();
            }

            return null;
        }
        #endregion

        #if !NET_STANDARD
        #region ICloneable Methods
        /// <summary>
        /// Creates a deep copy of the collection.
        /// </summary>
        public object Clone()
        {
            return (ProductDataTypeCollection)this.MemberwiseClone();
        }
        #endregion
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            ProductDataTypeCollection clone = new ProductDataTypeCollection(this.Count);

            for (int ii = 0; ii < this.Count; ii++)
            {
                clone.Add((ProductDataType)Utils.Clone(this[ii]));
            }

            return clone;
        }
    }
    #endregion
    #endif
    #endregion

    #region ProductIdDataType Class
    #if (!OPCUA_EXCLUDE_ProductIdDataType)
    /// <summary>
    /// A description for the ProductIdDataType DataType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [DataContract(Namespace = Prefix2.Namespaces.Name2Xsd)]
    public partial class ProductIdDataType : IEncodeable
    {
        #region Constructors
        /// <summary>
        /// The default constructor.
        /// </summary>
        public ProductIdDataType()
        {
            Initialize();
        }

        /// <summary>
        /// Called by the .NET framework during deserialization.
        /// </summary>
        [OnDeserializing]
        private void Initialize(StreamingContext context)
        {
            Initialize();
        }

        /// <summary>
        /// Sets private members to default values.
        /// </summary>
        private void Initialize()
        {
            m_ıd = null;
            m_description = null;
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// Id is a system-wide unique identifier/name for identifying the product.
        /// </summary>
        [DataMember(Name = "Id", IsRequired = false, Order = 1)]
        public string Id
        {
            get { return m_ıd;  }
            set { m_ıd = value; }
        }

        /// <summary>
        /// Optional short human readable description of the configuration
        /// </summary>
        [DataMember(Name = "Description", IsRequired = false, Order = 2)]
        public LocalizedText Description
        {
            get { return m_description;  }
            set { m_description = value; }
        }
        #endregion

        #region IEncodeable Members
        /// <summary cref="IEncodeable.TypeId" />
        public virtual ExpandedNodeId TypeId
        {
            get { return DataTypeIds.ProductIdDataType; }
        }

        /// <summary cref="IEncodeable.BinaryEncodingId" />
        public virtual ExpandedNodeId BinaryEncodingId
        {
            get { return ObjectIds.ProductIdDataType_Encoding_DefaultBinary; }
        }

        /// <summary cref="IEncodeable.XmlEncodingId" />
        public virtual ExpandedNodeId XmlEncodingId
        {
            get { return ObjectIds.ProductIdDataType_Encoding_DefaultXml; }
        }

        /// <summary cref="IEncodeable.Encode(IEncoder)" />
        public virtual void Encode(IEncoder encoder)
        {
            encoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);

            encoder.WriteString("Id", Id);
            encoder.WriteLocalizedText("Description", Description);

            encoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.Decode(IDecoder)" />
        public virtual void Decode(IDecoder decoder)
        {
            decoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);

            Id = decoder.ReadString("Id");
            Description = decoder.ReadLocalizedText("Description");

            decoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.IsEqual(IEncodeable)" />
        public virtual bool IsEqual(IEncodeable encodeable)
        {
            if (Object.ReferenceEquals(this, encodeable))
            {
                return true;
            }

            ProductIdDataType value = encodeable as ProductIdDataType;

            if (value == null)
            {
                return false;
            }

            if (!Utils.IsEqual(m_ıd, value.m_ıd)) return false;
            if (!Utils.IsEqual(m_description, value.m_description)) return false;

            return true;
        }

        #if !NET_STANDARD
        /// <summary cref="ICloneable.Clone" />
        public virtual object Clone()
        {
            return (ProductIdDataType)this.MemberwiseClone();
        }
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            ProductIdDataType clone = (ProductIdDataType)base.MemberwiseClone();

            clone.m_ıd = (string)Utils.Clone(this.m_ıd);
            clone.m_description = (LocalizedText)Utils.Clone(this.m_description);

            return clone;
        }
        #endregion

        #region Private Fields
        private string m_ıd;
        private LocalizedText m_description;
        #endregion
    }

    #region ProductIdDataTypeCollection Class
    /// <summary>
    /// A collection of ProductIdDataType objects.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [CollectionDataContract(Name = "ListOfProductIdDataType", Namespace = Prefix2.Namespaces.Name2Xsd, ItemName = "ProductIdDataType")]
    #if !NET_STANDARD
    public partial class ProductIdDataTypeCollection : List<ProductIdDataType>, ICloneable
    #else
    public partial class ProductIdDataTypeCollection : List<ProductIdDataType>
    #endif
    {
        #region Constructors
        /// <summary>
        /// Initializes the collection with default values.
        /// </summary>
        public ProductIdDataTypeCollection() {}

        /// <summary>
        /// Initializes the collection with an initial capacity.
        /// </summary>
        public ProductIdDataTypeCollection(int capacity) : base(capacity) {}

        /// <summary>
        /// Initializes the collection with another collection.
        /// </summary>
        public ProductIdDataTypeCollection(IEnumerable<ProductIdDataType> collection) : base(collection) {}
        #endregion

        #region Static Operators
        /// <summary>
        /// Converts an array to a collection.
        /// </summary>
        public static implicit operator ProductIdDataTypeCollection(ProductIdDataType[] values)
        {
            if (values != null)
            {
                return new ProductIdDataTypeCollection(values);
            }

            return new ProductIdDataTypeCollection();
        }

        /// <summary>
        /// Converts a collection to an array.
        /// </summary>
        public static explicit operator ProductIdDataType[](ProductIdDataTypeCollection values)
        {
            if (values != null)
            {
                return values.ToArray();
            }

            return null;
        }
        #endregion

        #if !NET_STANDARD
        #region ICloneable Methods
        /// <summary>
        /// Creates a deep copy of the collection.
        /// </summary>
        public object Clone()
        {
            return (ProductIdDataTypeCollection)this.MemberwiseClone();
        }
        #endregion
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            ProductIdDataTypeCollection clone = new ProductIdDataTypeCollection(this.Count);

            for (int ii = 0; ii < this.Count; ii++)
            {
                clone.Add((ProductIdDataType)Utils.Clone(this[ii]));
            }

            return clone;
        }
    }
    #endregion
    #endif
    #endregion

    #region RecipeTransferOptions Class
    #if (!OPCUA_EXCLUDE_RecipeTransferOptions)
    /// <summary>
    /// A description for the RecipeTransferOptions DataType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [DataContract(Namespace = Prefix2.Namespaces.Name2Xsd)]
    public partial class RecipeTransferOptions : IEncodeable
    {
        #region Constructors
        /// <summary>
        /// The default constructor.
        /// </summary>
        public RecipeTransferOptions()
        {
            Initialize();
        }

        /// <summary>
        /// Called by the .NET framework during deserialization.
        /// </summary>
        [OnDeserializing]
        private void Initialize(StreamingContext context)
        {
            Initialize();
        }

        /// <summary>
        /// Sets private members to default values.
        /// </summary>
        private void Initialize()
        {
            m_ınternalId = new RecipeIdInternalDataType();
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// The InternalId of the recipe to be transferred to or from the client.
        /// </summary>
        [DataMember(Name = "InternalId", IsRequired = false, Order = 1)]
        public RecipeIdInternalDataType InternalId
        {
            get
            {
                return m_ınternalId;
            }

            set
            {
                m_ınternalId = value;

                if (value == null)
                {
                    m_ınternalId = new RecipeIdInternalDataType();
                }
            }
        }
        #endregion

        #region IEncodeable Members
        /// <summary cref="IEncodeable.TypeId" />
        public virtual ExpandedNodeId TypeId
        {
            get { return DataTypeIds.RecipeTransferOptions; }
        }

        /// <summary cref="IEncodeable.BinaryEncodingId" />
        public virtual ExpandedNodeId BinaryEncodingId
        {
            get { return ObjectIds.RecipeTransferOptions_Encoding_DefaultBinary; }
        }

        /// <summary cref="IEncodeable.XmlEncodingId" />
        public virtual ExpandedNodeId XmlEncodingId
        {
            get { return ObjectIds.RecipeTransferOptions_Encoding_DefaultXml; }
        }

        /// <summary cref="IEncodeable.Encode(IEncoder)" />
        public virtual void Encode(IEncoder encoder)
        {
            encoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);

            encoder.WriteEncodeable("InternalId", InternalId, typeof(RecipeIdInternalDataType));

            encoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.Decode(IDecoder)" />
        public virtual void Decode(IDecoder decoder)
        {
            decoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);

            InternalId = (RecipeIdInternalDataType)decoder.ReadEncodeable("InternalId", typeof(RecipeIdInternalDataType));

            decoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.IsEqual(IEncodeable)" />
        public virtual bool IsEqual(IEncodeable encodeable)
        {
            if (Object.ReferenceEquals(this, encodeable))
            {
                return true;
            }

            RecipeTransferOptions value = encodeable as RecipeTransferOptions;

            if (value == null)
            {
                return false;
            }

            if (!Utils.IsEqual(m_ınternalId, value.m_ınternalId)) return false;

            return true;
        }

        #if !NET_STANDARD
        /// <summary cref="ICloneable.Clone" />
        public virtual object Clone()
        {
            return (RecipeTransferOptions)this.MemberwiseClone();
        }
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            RecipeTransferOptions clone = (RecipeTransferOptions)base.MemberwiseClone();

            clone.m_ınternalId = (RecipeIdInternalDataType)Utils.Clone(this.m_ınternalId);

            return clone;
        }
        #endregion

        #region Private Fields
        private RecipeIdInternalDataType m_ınternalId;
        #endregion
    }

    #region RecipeTransferOptionsCollection Class
    /// <summary>
    /// A collection of RecipeTransferOptions objects.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [CollectionDataContract(Name = "ListOfRecipeTransferOptions", Namespace = Prefix2.Namespaces.Name2Xsd, ItemName = "RecipeTransferOptions")]
    #if !NET_STANDARD
    public partial class RecipeTransferOptionsCollection : List<RecipeTransferOptions>, ICloneable
    #else
    public partial class RecipeTransferOptionsCollection : List<RecipeTransferOptions>
    #endif
    {
        #region Constructors
        /// <summary>
        /// Initializes the collection with default values.
        /// </summary>
        public RecipeTransferOptionsCollection() {}

        /// <summary>
        /// Initializes the collection with an initial capacity.
        /// </summary>
        public RecipeTransferOptionsCollection(int capacity) : base(capacity) {}

        /// <summary>
        /// Initializes the collection with another collection.
        /// </summary>
        public RecipeTransferOptionsCollection(IEnumerable<RecipeTransferOptions> collection) : base(collection) {}
        #endregion

        #region Static Operators
        /// <summary>
        /// Converts an array to a collection.
        /// </summary>
        public static implicit operator RecipeTransferOptionsCollection(RecipeTransferOptions[] values)
        {
            if (values != null)
            {
                return new RecipeTransferOptionsCollection(values);
            }

            return new RecipeTransferOptionsCollection();
        }

        /// <summary>
        /// Converts a collection to an array.
        /// </summary>
        public static explicit operator RecipeTransferOptions[](RecipeTransferOptionsCollection values)
        {
            if (values != null)
            {
                return values.ToArray();
            }

            return null;
        }
        #endregion

        #if !NET_STANDARD
        #region ICloneable Methods
        /// <summary>
        /// Creates a deep copy of the collection.
        /// </summary>
        public object Clone()
        {
            return (RecipeTransferOptionsCollection)this.MemberwiseClone();
        }
        #endregion
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            RecipeTransferOptionsCollection clone = new RecipeTransferOptionsCollection(this.Count);

            for (int ii = 0; ii < this.Count; ii++)
            {
                clone.Add((RecipeTransferOptions)Utils.Clone(this[ii]));
            }

            return clone;
        }
    }
    #endregion
    #endif
    #endregion

    #region ResultDataType Class
    #if (!OPCUA_EXCLUDE_ResultDataType)
    /// <summary>
    /// A description for the ResultDataType DataType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [DataContract(Namespace = Prefix2.Namespaces.Name2Xsd)]
    public partial class ResultDataType : IEncodeable
    {
        #region Constructors
        /// <summary>
        /// The default constructor.
        /// </summary>
        public ResultDataType()
        {
            Initialize();
        }

        /// <summary>
        /// Called by the .NET framework during deserialization.
        /// </summary>
        [OnDeserializing]
        private void Initialize(StreamingContext context)
        {
            Initialize();
        }

        /// <summary>
        /// Sets private members to default values.
        /// </summary>
        private void Initialize()
        {
            m_resultId = new ResultIdDataType();
            m_hasTransferableDataOnFile = true;
            m_ısPartial = true;
            m_ısSimulated = true;
            m_resultState = (int)0;
            m_measId = new MeasIdDataType();
            m_partId = new PartIdDataType();
            m_externalRecipeId = new RecipeIdExternalDataType();
            m_ınternalRecipeId = new RecipeIdInternalDataType();
            m_productId = new ProductIdDataType();
            m_externalConfigurationId = new ConfigurationIdDataType();
            m_ınternalConfigurationId = new ConfigurationIdDataType();
            m_jobId = new JobIdDataType();
            m_creationTime = DateTime.MinValue;
            m_processingTimes = new ProcessingTimesDataType();
            m_resultContent = new VariantCollection();
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// System-wide unique identifier, which is assigned by the system. This ID can be used for fetching exactly this result using the pertinent result management methods and it is identical to the ResultId of the ResultReadyEventType.
        /// </summary>
        [DataMember(Name = "ResultId", IsRequired = false, Order = 1)]
        public ResultIdDataType ResultId
        {
            get
            {
                return m_resultId;
            }

            set
            {
                m_resultId = value;

                if (value == null)
                {
                    m_resultId = new ResultIdDataType();
                }
            }
        }

        /// <summary>
        /// Indicates that additional data for this result can be retrieved by temporary file transfer.
        /// </summary>
        [DataMember(Name = "HasTransferableDataOnFile", IsRequired = false, Order = 2)]
        public bool HasTransferableDataOnFile
        {
            get { return m_hasTransferableDataOnFile;  }
            set { m_hasTransferableDataOnFile = value; }
        }

        /// <summary>
        /// Indicates whether the result is the partial result of a total result.
        /// </summary>
        [DataMember(Name = "IsPartial", IsRequired = false, Order = 3)]
        public bool IsPartial
        {
            get { return m_ısPartial;  }
            set { m_ısPartial = value; }
        }

        /// <summary>
        /// Indicates whether the system was in simulation mode when the result was created.
        /// </summary>
        [DataMember(Name = "IsSimulated", IsRequired = false, Order = 4)]
        public bool IsSimulated
        {
            get { return m_ısSimulated;  }
            set { m_ısSimulated = value; }
        }

        /// <summary>
        /// ResultState provides information about the current state of a result and the ResultStateDataType is defined in Section 12.18.
        /// </summary>
        [DataMember(Name = "ResultState", IsRequired = false, Order = 5)]
        public int ResultState
        {
            get { return m_resultState;  }
            set { m_resultState = value; }
        }

        /// <summary>
        /// This identifier is given by the client when starting a single job or continuous execution and transmitted to the vision system. It is used to identify the respective result data generated for this job. Although the system-wide unique JobId would be sufficient to identify the job which the result belongs to, this makes for easier filtering on the part of the client without keeping track of JobIds.
        /// </summary>
        [DataMember(Name = "MeasId", IsRequired = false, Order = 6)]
        public MeasIdDataType MeasId
        {
            get
            {
                return m_measId;
            }

            set
            {
                m_measId = value;

                if (value == null)
                {
                    m_measId = new MeasIdDataType();
                }
            }
        }

        /// <summary>
        /// A PartId is given by the client when starting the job; although the system-wide unique JobId would be sufficient to identify the job which the result belongs to, this makes for easier filtering on the part of the client without keeping track of JobIds.
        /// </summary>
        [DataMember(Name = "PartId", IsRequired = false, Order = 7)]
        public PartIdDataType PartId
        {
            get
            {
                return m_partId;
            }

            set
            {
                m_partId = value;

                if (value == null)
                {
                    m_partId = new PartIdDataType();
                }
            }
        }

        /// <summary>
        /// External Id of the recipe in use which produced the result. The ExternalID is only managed by the environment.
        /// </summary>
        [DataMember(Name = "ExternalRecipeId", IsRequired = false, Order = 8)]
        public RecipeIdExternalDataType ExternalRecipeId
        {
            get
            {
                return m_externalRecipeId;
            }

            set
            {
                m_externalRecipeId = value;

                if (value == null)
                {
                    m_externalRecipeId = new RecipeIdExternalDataType();
                }
            }
        }

        /// <summary>
        /// Internal Id of the recipe in use which produced the result. This ID is system-wide unique and is assigned by the vision system.
        /// </summary>
        [DataMember(Name = "InternalRecipeId", IsRequired = false, Order = 9)]
        public RecipeIdInternalDataType InternalRecipeId
        {
            get
            {
                return m_ınternalRecipeId;
            }

            set
            {
                m_ınternalRecipeId = value;

                if (value == null)
                {
                    m_ınternalRecipeId = new RecipeIdInternalDataType();
                }
            }
        }

        /// <summary>
        /// productId which was used to trigger the job which created the result.
        /// </summary>
        [DataMember(Name = "ProductId", IsRequired = false, Order = 10)]
        public ProductIdDataType ProductId
        {
            get
            {
                return m_productId;
            }

            set
            {
                m_productId = value;

                if (value == null)
                {
                    m_productId = new ProductIdDataType();
                }
            }
        }

        /// <summary>
        /// External Id of the configuration in use which produced the result. The ExternalID is only managed by the environment.
        /// </summary>
        [DataMember(Name = "ExternalConfigurationId", IsRequired = false, Order = 11)]
        public ConfigurationIdDataType ExternalConfigurationId
        {
            get
            {
                return m_externalConfigurationId;
            }

            set
            {
                m_externalConfigurationId = value;

                if (value == null)
                {
                    m_externalConfigurationId = new ConfigurationIdDataType();
                }
            }
        }

        /// <summary>
        /// Internal Id of the configuration in use which produced the result. This ID is system-wide unique and is assigned by the vision system.
        /// </summary>
        [DataMember(Name = "InternalConfigurationId", IsRequired = false, Order = 12)]
        public ConfigurationIdDataType InternalConfigurationId
        {
            get
            {
                return m_ınternalConfigurationId;
            }

            set
            {
                m_ınternalConfigurationId = value;

                if (value == null)
                {
                    m_ınternalConfigurationId = new ConfigurationIdDataType();
                }
            }
        }

        /// <summary>
        /// The ID of the job, created by the transition from state Ready to state SingleExecution or to state ContinuousExecution which produced the result.
        /// </summary>
        [DataMember(Name = "JobId", IsRequired = false, Order = 13)]
        public JobIdDataType JobId
        {
            get
            {
                return m_jobId;
            }

            set
            {
                m_jobId = value;

                if (value == null)
                {
                    m_jobId = new JobIdDataType();
                }
            }
        }

        /// <summary>
        /// CreationTime indicates the time when the result was created. 
        /// </summary>
        [DataMember(Name = "CreationTime", IsRequired = false, Order = 14)]
        public DateTime CreationTime
        {
            get { return m_creationTime;  }
            set { m_creationTime = value; }
        }

        /// <summary>
        /// Collection of different processing times that were needed to create the result.
        /// </summary>
        [DataMember(Name = "ProcessingTimes", IsRequired = false, Order = 15)]
        public ProcessingTimesDataType ProcessingTimes
        {
            get
            {
                return m_processingTimes;
            }

            set
            {
                m_processingTimes = value;

                if (value == null)
                {
                    m_processingTimes = new ProcessingTimesDataType();
                }
            }
        }

        /// <summary>
        /// Abstract data type to be subtyped from to hold result data created by the selected recipe.
        /// </summary>
        [DataMember(Name = "ResultContent", IsRequired = false, Order = 16)]
        public VariantCollection ResultContent
        {
            get
            {
                return m_resultContent;
            }

            set
            {
                m_resultContent = value;

                if (value == null)
                {
                    m_resultContent = new VariantCollection();
                }
            }
        }
        #endregion

        #region IEncodeable Members
        /// <summary cref="IEncodeable.TypeId" />
        public virtual ExpandedNodeId TypeId
        {
            get { return DataTypeIds.ResultDataType; }
        }

        /// <summary cref="IEncodeable.BinaryEncodingId" />
        public virtual ExpandedNodeId BinaryEncodingId
        {
            get { return ObjectIds.ResultDataType_Encoding_DefaultBinary; }
        }

        /// <summary cref="IEncodeable.XmlEncodingId" />
        public virtual ExpandedNodeId XmlEncodingId
        {
            get { return ObjectIds.ResultDataType_Encoding_DefaultXml; }
        }

        /// <summary cref="IEncodeable.Encode(IEncoder)" />
        public virtual void Encode(IEncoder encoder)
        {
            encoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);

            encoder.WriteEncodeable("ResultId", ResultId, typeof(ResultIdDataType));
            encoder.WriteBoolean("HasTransferableDataOnFile", HasTransferableDataOnFile);
            encoder.WriteBoolean("IsPartial", IsPartial);
            encoder.WriteBoolean("IsSimulated", IsSimulated);
            encoder.WriteInt32("ResultState", ResultState);
            encoder.WriteEncodeable("MeasId", MeasId, typeof(MeasIdDataType));
            encoder.WriteEncodeable("PartId", PartId, typeof(PartIdDataType));
            encoder.WriteEncodeable("ExternalRecipeId", ExternalRecipeId, typeof(RecipeIdExternalDataType));
            encoder.WriteEncodeable("InternalRecipeId", InternalRecipeId, typeof(RecipeIdInternalDataType));
            encoder.WriteEncodeable("ProductId", ProductId, typeof(ProductIdDataType));
            encoder.WriteEncodeable("ExternalConfigurationId", ExternalConfigurationId, typeof(ConfigurationIdDataType));
            encoder.WriteEncodeable("InternalConfigurationId", InternalConfigurationId, typeof(ConfigurationIdDataType));
            encoder.WriteEncodeable("JobId", JobId, typeof(JobIdDataType));
            encoder.WriteDateTime("CreationTime", CreationTime);
            encoder.WriteEncodeable("ProcessingTimes", ProcessingTimes, typeof(ProcessingTimesDataType));
            encoder.WriteVariantArray("ResultContent", ResultContent);

            encoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.Decode(IDecoder)" />
        public virtual void Decode(IDecoder decoder)
        {
            decoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);

            ResultId = (ResultIdDataType)decoder.ReadEncodeable("ResultId", typeof(ResultIdDataType));
            HasTransferableDataOnFile = decoder.ReadBoolean("HasTransferableDataOnFile");
            IsPartial = decoder.ReadBoolean("IsPartial");
            IsSimulated = decoder.ReadBoolean("IsSimulated");
            ResultState = decoder.ReadInt32("ResultState");
            MeasId = (MeasIdDataType)decoder.ReadEncodeable("MeasId", typeof(MeasIdDataType));
            PartId = (PartIdDataType)decoder.ReadEncodeable("PartId", typeof(PartIdDataType));
            ExternalRecipeId = (RecipeIdExternalDataType)decoder.ReadEncodeable("ExternalRecipeId", typeof(RecipeIdExternalDataType));
            InternalRecipeId = (RecipeIdInternalDataType)decoder.ReadEncodeable("InternalRecipeId", typeof(RecipeIdInternalDataType));
            ProductId = (ProductIdDataType)decoder.ReadEncodeable("ProductId", typeof(ProductIdDataType));
            ExternalConfigurationId = (ConfigurationIdDataType)decoder.ReadEncodeable("ExternalConfigurationId", typeof(ConfigurationIdDataType));
            InternalConfigurationId = (ConfigurationIdDataType)decoder.ReadEncodeable("InternalConfigurationId", typeof(ConfigurationIdDataType));
            JobId = (JobIdDataType)decoder.ReadEncodeable("JobId", typeof(JobIdDataType));
            CreationTime = decoder.ReadDateTime("CreationTime");
            ProcessingTimes = (ProcessingTimesDataType)decoder.ReadEncodeable("ProcessingTimes", typeof(ProcessingTimesDataType));
            ResultContent = decoder.ReadVariantArray("ResultContent");

            decoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.IsEqual(IEncodeable)" />
        public virtual bool IsEqual(IEncodeable encodeable)
        {
            if (Object.ReferenceEquals(this, encodeable))
            {
                return true;
            }

            ResultDataType value = encodeable as ResultDataType;

            if (value == null)
            {
                return false;
            }

            if (!Utils.IsEqual(m_resultId, value.m_resultId)) return false;
            if (!Utils.IsEqual(m_hasTransferableDataOnFile, value.m_hasTransferableDataOnFile)) return false;
            if (!Utils.IsEqual(m_ısPartial, value.m_ısPartial)) return false;
            if (!Utils.IsEqual(m_ısSimulated, value.m_ısSimulated)) return false;
            if (!Utils.IsEqual(m_resultState, value.m_resultState)) return false;
            if (!Utils.IsEqual(m_measId, value.m_measId)) return false;
            if (!Utils.IsEqual(m_partId, value.m_partId)) return false;
            if (!Utils.IsEqual(m_externalRecipeId, value.m_externalRecipeId)) return false;
            if (!Utils.IsEqual(m_ınternalRecipeId, value.m_ınternalRecipeId)) return false;
            if (!Utils.IsEqual(m_productId, value.m_productId)) return false;
            if (!Utils.IsEqual(m_externalConfigurationId, value.m_externalConfigurationId)) return false;
            if (!Utils.IsEqual(m_ınternalConfigurationId, value.m_ınternalConfigurationId)) return false;
            if (!Utils.IsEqual(m_jobId, value.m_jobId)) return false;
            if (!Utils.IsEqual(m_creationTime, value.m_creationTime)) return false;
            if (!Utils.IsEqual(m_processingTimes, value.m_processingTimes)) return false;
            if (!Utils.IsEqual(m_resultContent, value.m_resultContent)) return false;

            return true;
        }

        #if !NET_STANDARD
        /// <summary cref="ICloneable.Clone" />
        public virtual object Clone()
        {
            return (ResultDataType)this.MemberwiseClone();
        }
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            ResultDataType clone = (ResultDataType)base.MemberwiseClone();

            clone.m_resultId = (ResultIdDataType)Utils.Clone(this.m_resultId);
            clone.m_hasTransferableDataOnFile = (bool)Utils.Clone(this.m_hasTransferableDataOnFile);
            clone.m_ısPartial = (bool)Utils.Clone(this.m_ısPartial);
            clone.m_ısSimulated = (bool)Utils.Clone(this.m_ısSimulated);
            clone.m_resultState = (int)Utils.Clone(this.m_resultState);
            clone.m_measId = (MeasIdDataType)Utils.Clone(this.m_measId);
            clone.m_partId = (PartIdDataType)Utils.Clone(this.m_partId);
            clone.m_externalRecipeId = (RecipeIdExternalDataType)Utils.Clone(this.m_externalRecipeId);
            clone.m_ınternalRecipeId = (RecipeIdInternalDataType)Utils.Clone(this.m_ınternalRecipeId);
            clone.m_productId = (ProductIdDataType)Utils.Clone(this.m_productId);
            clone.m_externalConfigurationId = (ConfigurationIdDataType)Utils.Clone(this.m_externalConfigurationId);
            clone.m_ınternalConfigurationId = (ConfigurationIdDataType)Utils.Clone(this.m_ınternalConfigurationId);
            clone.m_jobId = (JobIdDataType)Utils.Clone(this.m_jobId);
            clone.m_creationTime = (DateTime)Utils.Clone(this.m_creationTime);
            clone.m_processingTimes = (ProcessingTimesDataType)Utils.Clone(this.m_processingTimes);
            clone.m_resultContent = (VariantCollection)Utils.Clone(this.m_resultContent);

            return clone;
        }
        #endregion

        #region Private Fields
        private ResultIdDataType m_resultId;
        private bool m_hasTransferableDataOnFile;
        private bool m_ısPartial;
        private bool m_ısSimulated;
        private int m_resultState;
        private MeasIdDataType m_measId;
        private PartIdDataType m_partId;
        private RecipeIdExternalDataType m_externalRecipeId;
        private RecipeIdInternalDataType m_ınternalRecipeId;
        private ProductIdDataType m_productId;
        private ConfigurationIdDataType m_externalConfigurationId;
        private ConfigurationIdDataType m_ınternalConfigurationId;
        private JobIdDataType m_jobId;
        private DateTime m_creationTime;
        private ProcessingTimesDataType m_processingTimes;
        private VariantCollection m_resultContent;
        #endregion
    }

    #region ResultDataTypeCollection Class
    /// <summary>
    /// A collection of ResultDataType objects.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [CollectionDataContract(Name = "ListOfResultDataType", Namespace = Prefix2.Namespaces.Name2Xsd, ItemName = "ResultDataType")]
    #if !NET_STANDARD
    public partial class ResultDataTypeCollection : List<ResultDataType>, ICloneable
    #else
    public partial class ResultDataTypeCollection : List<ResultDataType>
    #endif
    {
        #region Constructors
        /// <summary>
        /// Initializes the collection with default values.
        /// </summary>
        public ResultDataTypeCollection() {}

        /// <summary>
        /// Initializes the collection with an initial capacity.
        /// </summary>
        public ResultDataTypeCollection(int capacity) : base(capacity) {}

        /// <summary>
        /// Initializes the collection with another collection.
        /// </summary>
        public ResultDataTypeCollection(IEnumerable<ResultDataType> collection) : base(collection) {}
        #endregion

        #region Static Operators
        /// <summary>
        /// Converts an array to a collection.
        /// </summary>
        public static implicit operator ResultDataTypeCollection(ResultDataType[] values)
        {
            if (values != null)
            {
                return new ResultDataTypeCollection(values);
            }

            return new ResultDataTypeCollection();
        }

        /// <summary>
        /// Converts a collection to an array.
        /// </summary>
        public static explicit operator ResultDataType[](ResultDataTypeCollection values)
        {
            if (values != null)
            {
                return values.ToArray();
            }

            return null;
        }
        #endregion

        #if !NET_STANDARD
        #region ICloneable Methods
        /// <summary>
        /// Creates a deep copy of the collection.
        /// </summary>
        public object Clone()
        {
            return (ResultDataTypeCollection)this.MemberwiseClone();
        }
        #endregion
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            ResultDataTypeCollection clone = new ResultDataTypeCollection(this.Count);

            for (int ii = 0; ii < this.Count; ii++)
            {
                clone.Add((ResultDataType)Utils.Clone(this[ii]));
            }

            return clone;
        }
    }
    #endregion
    #endif
    #endregion

    #region ResultIdDataType Class
    #if (!OPCUA_EXCLUDE_ResultIdDataType)
    /// <summary>
    /// A description for the ResultIdDataType DataType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [DataContract(Namespace = Prefix2.Namespaces.Name2Xsd)]
    public partial class ResultIdDataType : IEncodeable
    {
        #region Constructors
        /// <summary>
        /// The default constructor.
        /// </summary>
        public ResultIdDataType()
        {
            Initialize();
        }

        /// <summary>
        /// Called by the .NET framework during deserialization.
        /// </summary>
        [OnDeserializing]
        private void Initialize(StreamingContext context)
        {
            Initialize();
        }

        /// <summary>
        /// Sets private members to default values.
        /// </summary>
        private void Initialize()
        {
            m_ıd = null;
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// Id is a system-wide unique identifier/name for identifying the generated result.
        /// </summary>
        [DataMember(Name = "Id", IsRequired = false, Order = 1)]
        public string Id
        {
            get { return m_ıd;  }
            set { m_ıd = value; }
        }
        #endregion

        #region IEncodeable Members
        /// <summary cref="IEncodeable.TypeId" />
        public virtual ExpandedNodeId TypeId
        {
            get { return DataTypeIds.ResultIdDataType; }
        }

        /// <summary cref="IEncodeable.BinaryEncodingId" />
        public virtual ExpandedNodeId BinaryEncodingId
        {
            get { return ObjectIds.ResultIdDataType_Encoding_DefaultBinary; }
        }

        /// <summary cref="IEncodeable.XmlEncodingId" />
        public virtual ExpandedNodeId XmlEncodingId
        {
            get { return ObjectIds.ResultIdDataType_Encoding_DefaultXml; }
        }

        /// <summary cref="IEncodeable.Encode(IEncoder)" />
        public virtual void Encode(IEncoder encoder)
        {
            encoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);

            encoder.WriteString("Id", Id);

            encoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.Decode(IDecoder)" />
        public virtual void Decode(IDecoder decoder)
        {
            decoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);

            Id = decoder.ReadString("Id");

            decoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.IsEqual(IEncodeable)" />
        public virtual bool IsEqual(IEncodeable encodeable)
        {
            if (Object.ReferenceEquals(this, encodeable))
            {
                return true;
            }

            ResultIdDataType value = encodeable as ResultIdDataType;

            if (value == null)
            {
                return false;
            }

            if (!Utils.IsEqual(m_ıd, value.m_ıd)) return false;

            return true;
        }

        #if !NET_STANDARD
        /// <summary cref="ICloneable.Clone" />
        public virtual object Clone()
        {
            return (ResultIdDataType)this.MemberwiseClone();
        }
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            ResultIdDataType clone = (ResultIdDataType)base.MemberwiseClone();

            clone.m_ıd = (string)Utils.Clone(this.m_ıd);

            return clone;
        }
        #endregion

        #region Private Fields
        private string m_ıd;
        #endregion
    }

    #region ResultIdDataTypeCollection Class
    /// <summary>
    /// A collection of ResultIdDataType objects.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [CollectionDataContract(Name = "ListOfResultIdDataType", Namespace = Prefix2.Namespaces.Name2Xsd, ItemName = "ResultIdDataType")]
    #if !NET_STANDARD
    public partial class ResultIdDataTypeCollection : List<ResultIdDataType>, ICloneable
    #else
    public partial class ResultIdDataTypeCollection : List<ResultIdDataType>
    #endif
    {
        #region Constructors
        /// <summary>
        /// Initializes the collection with default values.
        /// </summary>
        public ResultIdDataTypeCollection() {}

        /// <summary>
        /// Initializes the collection with an initial capacity.
        /// </summary>
        public ResultIdDataTypeCollection(int capacity) : base(capacity) {}

        /// <summary>
        /// Initializes the collection with another collection.
        /// </summary>
        public ResultIdDataTypeCollection(IEnumerable<ResultIdDataType> collection) : base(collection) {}
        #endregion

        #region Static Operators
        /// <summary>
        /// Converts an array to a collection.
        /// </summary>
        public static implicit operator ResultIdDataTypeCollection(ResultIdDataType[] values)
        {
            if (values != null)
            {
                return new ResultIdDataTypeCollection(values);
            }

            return new ResultIdDataTypeCollection();
        }

        /// <summary>
        /// Converts a collection to an array.
        /// </summary>
        public static explicit operator ResultIdDataType[](ResultIdDataTypeCollection values)
        {
            if (values != null)
            {
                return values.ToArray();
            }

            return null;
        }
        #endregion

        #if !NET_STANDARD
        #region ICloneable Methods
        /// <summary>
        /// Creates a deep copy of the collection.
        /// </summary>
        public object Clone()
        {
            return (ResultIdDataTypeCollection)this.MemberwiseClone();
        }
        #endregion
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            ResultIdDataTypeCollection clone = new ResultIdDataTypeCollection(this.Count);

            for (int ii = 0; ii < this.Count; ii++)
            {
                clone.Add((ResultIdDataType)Utils.Clone(this[ii]));
            }

            return clone;
        }
    }
    #endregion
    #endif
    #endregion

    #region ResultTransferOptions Class
    #if (!OPCUA_EXCLUDE_ResultTransferOptions)
    /// <summary>
    /// A description for the ResultTransferOptions DataType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [DataContract(Namespace = Prefix2.Namespaces.Name2Xsd)]
    public partial class ResultTransferOptions : IEncodeable
    {
        #region Constructors
        /// <summary>
        /// The default constructor.
        /// </summary>
        public ResultTransferOptions()
        {
            Initialize();
        }

        /// <summary>
        /// Called by the .NET framework during deserialization.
        /// </summary>
        [OnDeserializing]
        private void Initialize(StreamingContext context)
        {
            Initialize();
        }

        /// <summary>
        /// Sets private members to default values.
        /// </summary>
        private void Initialize()
        {
            m_ıd = new ResultIdDataType();
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// The Id of the result to be transferred to the client.
        /// </summary>
        [DataMember(Name = "Id", IsRequired = false, Order = 1)]
        public ResultIdDataType Id
        {
            get
            {
                return m_ıd;
            }

            set
            {
                m_ıd = value;

                if (value == null)
                {
                    m_ıd = new ResultIdDataType();
                }
            }
        }
        #endregion

        #region IEncodeable Members
        /// <summary cref="IEncodeable.TypeId" />
        public virtual ExpandedNodeId TypeId
        {
            get { return DataTypeIds.ResultTransferOptions; }
        }

        /// <summary cref="IEncodeable.BinaryEncodingId" />
        public virtual ExpandedNodeId BinaryEncodingId
        {
            get { return ObjectIds.ResultTransferOptions_Encoding_DefaultBinary; }
        }

        /// <summary cref="IEncodeable.XmlEncodingId" />
        public virtual ExpandedNodeId XmlEncodingId
        {
            get { return ObjectIds.ResultTransferOptions_Encoding_DefaultXml; }
        }

        /// <summary cref="IEncodeable.Encode(IEncoder)" />
        public virtual void Encode(IEncoder encoder)
        {
            encoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);

            encoder.WriteEncodeable("Id", Id, typeof(ResultIdDataType));

            encoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.Decode(IDecoder)" />
        public virtual void Decode(IDecoder decoder)
        {
            decoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);

            Id = (ResultIdDataType)decoder.ReadEncodeable("Id", typeof(ResultIdDataType));

            decoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.IsEqual(IEncodeable)" />
        public virtual bool IsEqual(IEncodeable encodeable)
        {
            if (Object.ReferenceEquals(this, encodeable))
            {
                return true;
            }

            ResultTransferOptions value = encodeable as ResultTransferOptions;

            if (value == null)
            {
                return false;
            }

            if (!Utils.IsEqual(m_ıd, value.m_ıd)) return false;

            return true;
        }

        #if !NET_STANDARD
        /// <summary cref="ICloneable.Clone" />
        public virtual object Clone()
        {
            return (ResultTransferOptions)this.MemberwiseClone();
        }
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            ResultTransferOptions clone = (ResultTransferOptions)base.MemberwiseClone();

            clone.m_ıd = (ResultIdDataType)Utils.Clone(this.m_ıd);

            return clone;
        }
        #endregion

        #region Private Fields
        private ResultIdDataType m_ıd;
        #endregion
    }

    #region ResultTransferOptionsCollection Class
    /// <summary>
    /// A collection of ResultTransferOptions objects.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [CollectionDataContract(Name = "ListOfResultTransferOptions", Namespace = Prefix2.Namespaces.Name2Xsd, ItemName = "ResultTransferOptions")]
    #if !NET_STANDARD
    public partial class ResultTransferOptionsCollection : List<ResultTransferOptions>, ICloneable
    #else
    public partial class ResultTransferOptionsCollection : List<ResultTransferOptions>
    #endif
    {
        #region Constructors
        /// <summary>
        /// Initializes the collection with default values.
        /// </summary>
        public ResultTransferOptionsCollection() {}

        /// <summary>
        /// Initializes the collection with an initial capacity.
        /// </summary>
        public ResultTransferOptionsCollection(int capacity) : base(capacity) {}

        /// <summary>
        /// Initializes the collection with another collection.
        /// </summary>
        public ResultTransferOptionsCollection(IEnumerable<ResultTransferOptions> collection) : base(collection) {}
        #endregion

        #region Static Operators
        /// <summary>
        /// Converts an array to a collection.
        /// </summary>
        public static implicit operator ResultTransferOptionsCollection(ResultTransferOptions[] values)
        {
            if (values != null)
            {
                return new ResultTransferOptionsCollection(values);
            }

            return new ResultTransferOptionsCollection();
        }

        /// <summary>
        /// Converts a collection to an array.
        /// </summary>
        public static explicit operator ResultTransferOptions[](ResultTransferOptionsCollection values)
        {
            if (values != null)
            {
                return values.ToArray();
            }

            return null;
        }
        #endregion

        #if !NET_STANDARD
        #region ICloneable Methods
        /// <summary>
        /// Creates a deep copy of the collection.
        /// </summary>
        public object Clone()
        {
            return (ResultTransferOptionsCollection)this.MemberwiseClone();
        }
        #endregion
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            ResultTransferOptionsCollection clone = new ResultTransferOptionsCollection(this.Count);

            for (int ii = 0; ii < this.Count; ii++)
            {
                clone.Add((ResultTransferOptions)Utils.Clone(this[ii]));
            }

            return clone;
        }
    }
    #endregion
    #endif
    #endregion

    #region SystemStateDescriptionDataType Class
    #if (!OPCUA_EXCLUDE_SystemStateDescriptionDataType)
    /// <summary>
    /// A description for the SystemStateDescriptionDataType DataType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [DataContract(Namespace = Prefix2.Namespaces.Name2Xsd)]
    public partial class SystemStateDescriptionDataType : IEncodeable
    {
        #region Constructors
        /// <summary>
        /// The default constructor.
        /// </summary>
        public SystemStateDescriptionDataType()
        {
            Initialize();
        }

        /// <summary>
        /// Called by the .NET framework during deserialization.
        /// </summary>
        [OnDeserializing]
        private void Initialize(StreamingContext context)
        {
            Initialize();
        }

        /// <summary>
        /// Sets private members to default values.
        /// </summary>
        private void Initialize()
        {
            m_state = SystemStateDataType.PRD_1;
            m_stateDescription = null;
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// Denotes one of the basic SEMI E10 states
        /// </summary>
        [DataMember(Name = "State", IsRequired = false, Order = 1)]
        public SystemStateDataType State
        {
            get { return m_state;  }
            set { m_state = value; }
        }

        /// <summary>
        /// Optional string describing the full state path, starting with the SEMI E10 state denoted by the state member; the string format is described in Section 11.5.
        /// </summary>
        [DataMember(Name = "StateDescription", IsRequired = false, Order = 2)]
        public string StateDescription
        {
            get { return m_stateDescription;  }
            set { m_stateDescription = value; }
        }
        #endregion

        #region IEncodeable Members
        /// <summary cref="IEncodeable.TypeId" />
        public virtual ExpandedNodeId TypeId
        {
            get { return DataTypeIds.SystemStateDescriptionDataType; }
        }

        /// <summary cref="IEncodeable.BinaryEncodingId" />
        public virtual ExpandedNodeId BinaryEncodingId
        {
            get { return ObjectIds.SystemStateDescriptionDataType_Encoding_DefaultBinary; }
        }

        /// <summary cref="IEncodeable.XmlEncodingId" />
        public virtual ExpandedNodeId XmlEncodingId
        {
            get { return ObjectIds.SystemStateDescriptionDataType_Encoding_DefaultXml; }
        }

        /// <summary cref="IEncodeable.Encode(IEncoder)" />
        public virtual void Encode(IEncoder encoder)
        {
            encoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);

            encoder.WriteEnumerated("State", State);
            encoder.WriteString("StateDescription", StateDescription);

            encoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.Decode(IDecoder)" />
        public virtual void Decode(IDecoder decoder)
        {
            decoder.PushNamespace(Prefix2.Namespaces.Name2Xsd);

            State = (SystemStateDataType)decoder.ReadEnumerated("State", typeof(SystemStateDataType));
            StateDescription = decoder.ReadString("StateDescription");

            decoder.PopNamespace();
        }

        /// <summary cref="IEncodeable.IsEqual(IEncodeable)" />
        public virtual bool IsEqual(IEncodeable encodeable)
        {
            if (Object.ReferenceEquals(this, encodeable))
            {
                return true;
            }

            SystemStateDescriptionDataType value = encodeable as SystemStateDescriptionDataType;

            if (value == null)
            {
                return false;
            }

            if (!Utils.IsEqual(m_state, value.m_state)) return false;
            if (!Utils.IsEqual(m_stateDescription, value.m_stateDescription)) return false;

            return true;
        }

        #if !NET_STANDARD
        /// <summary cref="ICloneable.Clone" />
        public virtual object Clone()
        {
            return (SystemStateDescriptionDataType)this.MemberwiseClone();
        }
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            SystemStateDescriptionDataType clone = (SystemStateDescriptionDataType)base.MemberwiseClone();

            clone.m_state = (SystemStateDataType)Utils.Clone(this.m_state);
            clone.m_stateDescription = (string)Utils.Clone(this.m_stateDescription);

            return clone;
        }
        #endregion

        #region Private Fields
        private SystemStateDataType m_state;
        private string m_stateDescription;
        #endregion
    }

    #region SystemStateDescriptionDataTypeCollection Class
    /// <summary>
    /// A collection of SystemStateDescriptionDataType objects.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    [CollectionDataContract(Name = "ListOfSystemStateDescriptionDataType", Namespace = Prefix2.Namespaces.Name2Xsd, ItemName = "SystemStateDescriptionDataType")]
    #if !NET_STANDARD
    public partial class SystemStateDescriptionDataTypeCollection : List<SystemStateDescriptionDataType>, ICloneable
    #else
    public partial class SystemStateDescriptionDataTypeCollection : List<SystemStateDescriptionDataType>
    #endif
    {
        #region Constructors
        /// <summary>
        /// Initializes the collection with default values.
        /// </summary>
        public SystemStateDescriptionDataTypeCollection() {}

        /// <summary>
        /// Initializes the collection with an initial capacity.
        /// </summary>
        public SystemStateDescriptionDataTypeCollection(int capacity) : base(capacity) {}

        /// <summary>
        /// Initializes the collection with another collection.
        /// </summary>
        public SystemStateDescriptionDataTypeCollection(IEnumerable<SystemStateDescriptionDataType> collection) : base(collection) {}
        #endregion

        #region Static Operators
        /// <summary>
        /// Converts an array to a collection.
        /// </summary>
        public static implicit operator SystemStateDescriptionDataTypeCollection(SystemStateDescriptionDataType[] values)
        {
            if (values != null)
            {
                return new SystemStateDescriptionDataTypeCollection(values);
            }

            return new SystemStateDescriptionDataTypeCollection();
        }

        /// <summary>
        /// Converts a collection to an array.
        /// </summary>
        public static explicit operator SystemStateDescriptionDataType[](SystemStateDescriptionDataTypeCollection values)
        {
            if (values != null)
            {
                return values.ToArray();
            }

            return null;
        }
        #endregion

        #if !NET_STANDARD
        #region ICloneable Methods
        /// <summary>
        /// Creates a deep copy of the collection.
        /// </summary>
        public object Clone()
        {
            return (SystemStateDescriptionDataTypeCollection)this.MemberwiseClone();
        }
        #endregion
        #endif

        /// <summary cref="Object.MemberwiseClone" />
        public new object MemberwiseClone()
        {
            SystemStateDescriptionDataTypeCollection clone = new SystemStateDescriptionDataTypeCollection(this.Count);

            for (int ii = 0; ii < this.Count; ii++)
            {
                clone.Add((SystemStateDescriptionDataType)Utils.Clone(this[ii]));
            }

            return clone;
        }
    }
    #endregion
    #endif
    #endregion

    #region ResultState Class
    #if (!OPCUA_EXCLUDE_ResultState)
    /// <summary>
    /// Stores an instance of the ResultType VariableType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class ResultState : BaseDataVariableState<ResultDataType>
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public ResultState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.VariableTypes.ResultType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        /// <summary>
        /// Returns the id of the default data type node for the instance.
        /// </summary>
        protected override NodeId GetDefaultDataTypeId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.DataTypes.ResultDataType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        /// <summary>
        /// Returns the id of the default value rank for the instance.
        /// </summary>
        protected override int GetDefaultValueRank()
        {
            return ValueRanks.Scalar;
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);

            if (ExternalConfigurationId != null)
            {
                ExternalConfigurationId.Initialize(context, ExternalConfigurationId_InitializationString);
            }

            if (ExternalRecipeId != null)
            {
                ExternalRecipeId.Initialize(context, ExternalRecipeId_InitializationString);
            }

            if (HasTransferableDataOnFile != null)
            {
                HasTransferableDataOnFile.Initialize(context, HasTransferableDataOnFile_InitializationString);
            }

            if (IsSimulated != null)
            {
                IsSimulated.Initialize(context, IsSimulated_InitializationString);
            }

            if (MeasId != null)
            {
                MeasId.Initialize(context, MeasId_InitializationString);
            }

            if (PartId != null)
            {
                PartId.Initialize(context, PartId_InitializationString);
            }

            if (ProcessingTimes != null)
            {
                ProcessingTimes.Initialize(context, ProcessingTimes_InitializationString);
            }

            if (ProductId != null)
            {
                ProductId.Initialize(context, ProductId_InitializationString);
            }

            if (ResultContent != null)
            {
                ResultContent.Initialize(context, ResultContent_InitializationString);
            }
        }

        #region Initialization String
        private const string ExternalConfigurationId_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYIkKAgAA" +
           "AAEAFwAAAEV4dGVybmFsQ29uZmlndXJhdGlvbklkAQEeAAAvAD8eAAAAAQEKAP////8DA/////8AAAAA";

        private const string ExternalRecipeId_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYIkKAgAA" +
           "AAEAEAAAAEV4dGVybmFsUmVjaXBlSWQBAR8AAC8APx8AAAABAQsA/////wMD/////wAAAAA=";

        private const string HasTransferableDataOnFile_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYIkKAgAA" +
           "AAEAGQAAAEhhc1RyYW5zZmVyYWJsZURhdGFPbkZpbGUBASAAAC8APyAAAAAAAf////8DA/////8AAAAA";

        private const string IsSimulated_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYIkKAgAA" +
           "AAEACwAAAElzU2ltdWxhdGVkAQEkAAAvAD8kAAAAAAH/////AwP/////AAAAAA==";

        private const string MeasId_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYIkKAgAA" +
           "AAEABgAAAE1lYXNJZAEBJgAALwA/JgAAAAEBEAD/////AwP/////AAAAAA==";

        private const string PartId_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYIkKAgAA" +
           "AAEABgAAAFBhcnRJZAEBJwAALwA/JwAAAAEBEQD/////AwP/////AAAAAA==";

        private const string ProcessingTimes_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYIkKAgAA" +
           "AAEADwAAAFByb2Nlc3NpbmdUaW1lcwEBKAAALwA/KAAAAAEBEgD/////AwP/////AAAAAA==";

        private const string ProductId_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYIkKAgAA" +
           "AAEACQAAAFByb2R1Y3RJZAEBKQAALwA/KQAAAAEBFAD/////AwP/////AAAAAA==";

        private const string ResultContent_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8XYIkKAgAA" +
           "AAEADQAAAFJlc3VsdENvbnRlbnQBASoAAC8APyoAAAAAGAEAAAABAAAAAQAAAAMD/////wAAAAA=";

        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYKkAAgAA" +
           "AAEAEgAAAFJlc3VsdFR5cGVJbnN0YW5jZQEBHAABARwAFgEBmxMChAEAADxSZXN1bHREYXRhVHlwZSB4" +
           "bWxucz0iaHR0cDovL29wY2ZvdW5kYXRpb24ub3JnL1VBL01hY2hpbmVWaXNpb24vVHlwZXMueHNkIj48" +
           "RW5jb2RpbmdNYXNrPjA8L0VuY29kaW5nTWFzaz48UmVzdWx0SWQ+PElkPjwvSWQ+PC9SZXN1bHRJZD48" +
           "SXNQYXJ0aWFsPmZhbHNlPC9Jc1BhcnRpYWw+PFJlc3VsdFN0YXRlPjA8L1Jlc3VsdFN0YXRlPjxJbnRl" +
           "cm5hbFJlY2lwZUlkPjxJZD48L0lkPjwvSW50ZXJuYWxSZWNpcGVJZD48SW50ZXJuYWxDb25maWd1cmF0" +
           "aW9uSWQ+PElkPjwvSWQ+PC9JbnRlcm5hbENvbmZpZ3VyYXRpb25JZD48Sm9iSWQ+PElkPjwvSWQ+PC9K" +
           "b2JJZD48Q3JlYXRpb25UaW1lPjE5MDAtMDEtMDFUMDA6MDA6MDBaPC9DcmVhdGlvblRpbWU+PC9SZXN1" +
           "bHREYXRhVHlwZT4BARYA/////wEB/////xAAAAAVYIkKAgAAAAEADAAAAENyZWF0aW9uVGltZQEBHQAA" +
           "LwA/HQAAAAEAJgH/////AwP/////AAAAABVgiQoCAAAAAQAXAAAARXh0ZXJuYWxDb25maWd1cmF0aW9u" +
           "SWQBAR4AAC8APx4AAAABAQoA/////wMD/////wAAAAAVYIkKAgAAAAEAEAAAAEV4dGVybmFsUmVjaXBl" +
           "SWQBAR8AAC8APx8AAAABAQsA/////wMD/////wAAAAAVYIkKAgAAAAEAGQAAAEhhc1RyYW5zZmVyYWJs" +
           "ZURhdGFPbkZpbGUBASAAAC8APyAAAAAAAf////8DA/////8AAAAAFWCJCgIAAAABABcAAABJbnRlcm5h" +
           "bENvbmZpZ3VyYXRpb25JZAEBIQAALwA/IQAAAAEBCgD/////AwP/////AAAAABVgiQoCAAAAAQAQAAAA" +
           "SW50ZXJuYWxSZWNpcGVJZAEBIgAALwA/IgAAAAEBDAD/////AwP/////AAAAABVgiQoCAAAAAQAJAAAA" +
           "SXNQYXJ0aWFsAQEjAAAvAD8jAAAAAAH/////AwP/////AAAAABVgiQoCAAAAAQALAAAASXNTaW11bGF0" +
           "ZWQBASQAAC8APyQAAAAAAf////8DA/////8AAAAAFWCJCgIAAAABAAUAAABKb2JJZAEBJQAALwA/JQAA" +
           "AAEBDwD/////AwP/////AAAAABVgiQoCAAAAAQAGAAAATWVhc0lkAQEmAAAvAD8mAAAAAQEQAP////8D" +
           "A/////8AAAAAFWCJCgIAAAABAAYAAABQYXJ0SWQBAScAAC8APycAAAABAREA/////wMD/////wAAAAAV" +
           "YIkKAgAAAAEADwAAAFByb2Nlc3NpbmdUaW1lcwEBKAAALwA/KAAAAAEBEgD/////AwP/////AAAAABVg" +
           "iQoCAAAAAQAJAAAAUHJvZHVjdElkAQEpAAAvAD8pAAAAAQEUAP////8DA/////8AAAAAF2CJCgIAAAAB" +
           "AA0AAABSZXN1bHRDb250ZW50AQEqAAAvAD8qAAAAABgBAAAAAQAAAAEAAAADA/////8AAAAAFWCJCgIA" +
           "AAABAAgAAABSZXN1bHRJZAEBKwAALwA/KwAAAAEBFwD/////AwP/////AAAAABVgiQoCAAAAAQALAAAA" +
           "UmVzdWx0U3RhdGUBASwAAC8APywAAAABAQYA/////wMD/////wAAAAA=";
        #endregion
        #endif
        #endregion

        #region Public Properties
        /// <summary>
        /// A description for the CreationTime Variable.
        /// </summary>
        public BaseDataVariableState<DateTime> CreationTime
        {
            get
            {
                return m_creationTime;
            }

            set
            {
                if (!Object.ReferenceEquals(m_creationTime, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_creationTime = value;
            }
        }

        /// <summary>
        /// A description for the ExternalConfigurationId Variable.
        /// </summary>
        public BaseDataVariableState<ConfigurationIdDataType> ExternalConfigurationId
        {
            get
            {
                return m_externalConfigurationId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_externalConfigurationId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_externalConfigurationId = value;
            }
        }

        /// <summary>
        /// A description for the ExternalRecipeId Variable.
        /// </summary>
        public BaseDataVariableState<RecipeIdExternalDataType> ExternalRecipeId
        {
            get
            {
                return m_externalRecipeId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_externalRecipeId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_externalRecipeId = value;
            }
        }

        /// <summary>
        /// A description for the HasTransferableDataOnFile Variable.
        /// </summary>
        public BaseDataVariableState<bool> HasTransferableDataOnFile
        {
            get
            {
                return m_hasTransferableDataOnFile;
            }

            set
            {
                if (!Object.ReferenceEquals(m_hasTransferableDataOnFile, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_hasTransferableDataOnFile = value;
            }
        }

        /// <summary>
        /// A description for the InternalConfigurationId Variable.
        /// </summary>
        public BaseDataVariableState<ConfigurationIdDataType> InternalConfigurationId
        {
            get
            {
                return m_ınternalConfigurationId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_ınternalConfigurationId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_ınternalConfigurationId = value;
            }
        }

        /// <summary>
        /// A description for the InternalRecipeId Variable.
        /// </summary>
        public BaseDataVariableState<RecipeIdInternalDataType> InternalRecipeId
        {
            get
            {
                return m_ınternalRecipeId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_ınternalRecipeId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_ınternalRecipeId = value;
            }
        }

        /// <summary>
        /// A description for the IsPartial Variable.
        /// </summary>
        public BaseDataVariableState<bool> IsPartial
        {
            get
            {
                return m_ısPartial;
            }

            set
            {
                if (!Object.ReferenceEquals(m_ısPartial, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_ısPartial = value;
            }
        }

        /// <summary>
        /// A description for the IsSimulated Variable.
        /// </summary>
        public BaseDataVariableState<bool> IsSimulated
        {
            get
            {
                return m_ısSimulated;
            }

            set
            {
                if (!Object.ReferenceEquals(m_ısSimulated, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_ısSimulated = value;
            }
        }

        /// <summary>
        /// A description for the JobId Variable.
        /// </summary>
        public BaseDataVariableState<JobIdDataType> JobId
        {
            get
            {
                return m_jobId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_jobId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_jobId = value;
            }
        }

        /// <summary>
        /// A description for the MeasId Variable.
        /// </summary>
        public BaseDataVariableState<MeasIdDataType> MeasId
        {
            get
            {
                return m_measId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_measId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_measId = value;
            }
        }

        /// <summary>
        /// A description for the PartId Variable.
        /// </summary>
        public BaseDataVariableState<PartIdDataType> PartId
        {
            get
            {
                return m_partId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_partId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_partId = value;
            }
        }

        /// <summary>
        /// A description for the ProcessingTimes Variable.
        /// </summary>
        public BaseDataVariableState<ProcessingTimesDataType> ProcessingTimes
        {
            get
            {
                return m_processingTimes;
            }

            set
            {
                if (!Object.ReferenceEquals(m_processingTimes, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_processingTimes = value;
            }
        }

        /// <summary>
        /// A description for the ProductId Variable.
        /// </summary>
        public BaseDataVariableState<ProductIdDataType> ProductId
        {
            get
            {
                return m_productId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_productId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_productId = value;
            }
        }

        /// <summary>
        /// A description for the ResultContent Variable.
        /// </summary>
        public BaseDataVariableState<object[]> ResultContent
        {
            get
            {
                return m_resultContent;
            }

            set
            {
                if (!Object.ReferenceEquals(m_resultContent, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_resultContent = value;
            }
        }

        /// <summary>
        /// A description for the ResultId Variable.
        /// </summary>
        public BaseDataVariableState<ResultIdDataType> ResultId
        {
            get
            {
                return m_resultId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_resultId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_resultId = value;
            }
        }

        /// <summary>
        /// A description for the ResultState Variable.
        /// </summary>
        public BaseDataVariableState<int> ResultState
        {
            get
            {
                return m_resultState;
            }

            set
            {
                if (!Object.ReferenceEquals(m_resultState, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_resultState = value;
            }
        }
        #endregion

        #region Overridden Methods
        /// <summary>
        /// Populates a list with the children that belong to the node.
        /// </summary>
        /// <param name="context">The context for the system being accessed.</param>
        /// <param name="children">The list of children to populate.</param>
        public override void GetChildren(
            ISystemContext context,
            IList<BaseInstanceState> children)
        {
            if (m_creationTime != null)
            {
                children.Add(m_creationTime);
            }

            if (m_externalConfigurationId != null)
            {
                children.Add(m_externalConfigurationId);
            }

            if (m_externalRecipeId != null)
            {
                children.Add(m_externalRecipeId);
            }

            if (m_hasTransferableDataOnFile != null)
            {
                children.Add(m_hasTransferableDataOnFile);
            }

            if (m_ınternalConfigurationId != null)
            {
                children.Add(m_ınternalConfigurationId);
            }

            if (m_ınternalRecipeId != null)
            {
                children.Add(m_ınternalRecipeId);
            }

            if (m_ısPartial != null)
            {
                children.Add(m_ısPartial);
            }

            if (m_ısSimulated != null)
            {
                children.Add(m_ısSimulated);
            }

            if (m_jobId != null)
            {
                children.Add(m_jobId);
            }

            if (m_measId != null)
            {
                children.Add(m_measId);
            }

            if (m_partId != null)
            {
                children.Add(m_partId);
            }

            if (m_processingTimes != null)
            {
                children.Add(m_processingTimes);
            }

            if (m_productId != null)
            {
                children.Add(m_productId);
            }

            if (m_resultContent != null)
            {
                children.Add(m_resultContent);
            }

            if (m_resultId != null)
            {
                children.Add(m_resultId);
            }

            if (m_resultState != null)
            {
                children.Add(m_resultState);
            }

            base.GetChildren(context, children);
        }

        /// <summary>
        /// Finds the child with the specified browse name.
        /// </summary>
        protected override BaseInstanceState FindChild(
            ISystemContext context,
            QualifiedName browseName,
            bool createOrReplace,
            BaseInstanceState replacement)
        {
            if (QualifiedName.IsNull(browseName))
            {
                return null;
            }

            BaseInstanceState instance = null;

            switch (browseName.Name)
            {
                case Prefix2.BrowseNames.CreationTime:
                {
                    if (createOrReplace)
                    {
                        if (CreationTime == null)
                        {
                            if (replacement == null)
                            {
                                CreationTime = new BaseDataVariableState<DateTime>(this);
                            }
                            else
                            {
                                CreationTime = (BaseDataVariableState<DateTime>)replacement;
                            }
                        }
                    }

                    instance = CreationTime;
                    break;
                }

                case Prefix2.BrowseNames.ExternalConfigurationId:
                {
                    if (createOrReplace)
                    {
                        if (ExternalConfigurationId == null)
                        {
                            if (replacement == null)
                            {
                                ExternalConfigurationId = new BaseDataVariableState<ConfigurationIdDataType>(this);
                            }
                            else
                            {
                                ExternalConfigurationId = (BaseDataVariableState<ConfigurationIdDataType>)replacement;
                            }
                        }
                    }

                    instance = ExternalConfigurationId;
                    break;
                }

                case Prefix2.BrowseNames.ExternalRecipeId:
                {
                    if (createOrReplace)
                    {
                        if (ExternalRecipeId == null)
                        {
                            if (replacement == null)
                            {
                                ExternalRecipeId = new BaseDataVariableState<RecipeIdExternalDataType>(this);
                            }
                            else
                            {
                                ExternalRecipeId = (BaseDataVariableState<RecipeIdExternalDataType>)replacement;
                            }
                        }
                    }

                    instance = ExternalRecipeId;
                    break;
                }

                case Prefix2.BrowseNames.HasTransferableDataOnFile:
                {
                    if (createOrReplace)
                    {
                        if (HasTransferableDataOnFile == null)
                        {
                            if (replacement == null)
                            {
                                HasTransferableDataOnFile = new BaseDataVariableState<bool>(this);
                            }
                            else
                            {
                                HasTransferableDataOnFile = (BaseDataVariableState<bool>)replacement;
                            }
                        }
                    }

                    instance = HasTransferableDataOnFile;
                    break;
                }

                case Prefix2.BrowseNames.InternalConfigurationId:
                {
                    if (createOrReplace)
                    {
                        if (InternalConfigurationId == null)
                        {
                            if (replacement == null)
                            {
                                InternalConfigurationId = new BaseDataVariableState<ConfigurationIdDataType>(this);
                            }
                            else
                            {
                                InternalConfigurationId = (BaseDataVariableState<ConfigurationIdDataType>)replacement;
                            }
                        }
                    }

                    instance = InternalConfigurationId;
                    break;
                }

                case Prefix2.BrowseNames.InternalRecipeId:
                {
                    if (createOrReplace)
                    {
                        if (InternalRecipeId == null)
                        {
                            if (replacement == null)
                            {
                                InternalRecipeId = new BaseDataVariableState<RecipeIdInternalDataType>(this);
                            }
                            else
                            {
                                InternalRecipeId = (BaseDataVariableState<RecipeIdInternalDataType>)replacement;
                            }
                        }
                    }

                    instance = InternalRecipeId;
                    break;
                }

                case Prefix2.BrowseNames.IsPartial:
                {
                    if (createOrReplace)
                    {
                        if (IsPartial == null)
                        {
                            if (replacement == null)
                            {
                                IsPartial = new BaseDataVariableState<bool>(this);
                            }
                            else
                            {
                                IsPartial = (BaseDataVariableState<bool>)replacement;
                            }
                        }
                    }

                    instance = IsPartial;
                    break;
                }

                case Prefix2.BrowseNames.IsSimulated:
                {
                    if (createOrReplace)
                    {
                        if (IsSimulated == null)
                        {
                            if (replacement == null)
                            {
                                IsSimulated = new BaseDataVariableState<bool>(this);
                            }
                            else
                            {
                                IsSimulated = (BaseDataVariableState<bool>)replacement;
                            }
                        }
                    }

                    instance = IsSimulated;
                    break;
                }

                case Prefix2.BrowseNames.JobId:
                {
                    if (createOrReplace)
                    {
                        if (JobId == null)
                        {
                            if (replacement == null)
                            {
                                JobId = new BaseDataVariableState<JobIdDataType>(this);
                            }
                            else
                            {
                                JobId = (BaseDataVariableState<JobIdDataType>)replacement;
                            }
                        }
                    }

                    instance = JobId;
                    break;
                }

                case Prefix2.BrowseNames.MeasId:
                {
                    if (createOrReplace)
                    {
                        if (MeasId == null)
                        {
                            if (replacement == null)
                            {
                                MeasId = new BaseDataVariableState<MeasIdDataType>(this);
                            }
                            else
                            {
                                MeasId = (BaseDataVariableState<MeasIdDataType>)replacement;
                            }
                        }
                    }

                    instance = MeasId;
                    break;
                }

                case Prefix2.BrowseNames.PartId:
                {
                    if (createOrReplace)
                    {
                        if (PartId == null)
                        {
                            if (replacement == null)
                            {
                                PartId = new BaseDataVariableState<PartIdDataType>(this);
                            }
                            else
                            {
                                PartId = (BaseDataVariableState<PartIdDataType>)replacement;
                            }
                        }
                    }

                    instance = PartId;
                    break;
                }

                case Prefix2.BrowseNames.ProcessingTimes:
                {
                    if (createOrReplace)
                    {
                        if (ProcessingTimes == null)
                        {
                            if (replacement == null)
                            {
                                ProcessingTimes = new BaseDataVariableState<ProcessingTimesDataType>(this);
                            }
                            else
                            {
                                ProcessingTimes = (BaseDataVariableState<ProcessingTimesDataType>)replacement;
                            }
                        }
                    }

                    instance = ProcessingTimes;
                    break;
                }

                case Prefix2.BrowseNames.ProductId:
                {
                    if (createOrReplace)
                    {
                        if (ProductId == null)
                        {
                            if (replacement == null)
                            {
                                ProductId = new BaseDataVariableState<ProductIdDataType>(this);
                            }
                            else
                            {
                                ProductId = (BaseDataVariableState<ProductIdDataType>)replacement;
                            }
                        }
                    }

                    instance = ProductId;
                    break;
                }

                case Prefix2.BrowseNames.ResultContent:
                {
                    if (createOrReplace)
                    {
                        if (ResultContent == null)
                        {
                            if (replacement == null)
                            {
                                ResultContent = new BaseDataVariableState<object[]>(this);
                            }
                            else
                            {
                                ResultContent = (BaseDataVariableState<object[]>)replacement;
                            }
                        }
                    }

                    instance = ResultContent;
                    break;
                }

                case Prefix2.BrowseNames.ResultId:
                {
                    if (createOrReplace)
                    {
                        if (ResultId == null)
                        {
                            if (replacement == null)
                            {
                                ResultId = new BaseDataVariableState<ResultIdDataType>(this);
                            }
                            else
                            {
                                ResultId = (BaseDataVariableState<ResultIdDataType>)replacement;
                            }
                        }
                    }

                    instance = ResultId;
                    break;
                }

                case Prefix2.BrowseNames.ResultState:
                {
                    if (createOrReplace)
                    {
                        if (ResultState == null)
                        {
                            if (replacement == null)
                            {
                                ResultState = new BaseDataVariableState<int>(this);
                            }
                            else
                            {
                                ResultState = (BaseDataVariableState<int>)replacement;
                            }
                        }
                    }

                    instance = ResultState;
                    break;
                }
            }

            if (instance != null)
            {
                return instance;
            }

            return base.FindChild(context, browseName, createOrReplace, replacement);
        }
        #endregion

        #region Private Fields
        private BaseDataVariableState<DateTime> m_creationTime;
        private BaseDataVariableState<ConfigurationIdDataType> m_externalConfigurationId;
        private BaseDataVariableState<RecipeIdExternalDataType> m_externalRecipeId;
        private BaseDataVariableState<bool> m_hasTransferableDataOnFile;
        private BaseDataVariableState<ConfigurationIdDataType> m_ınternalConfigurationId;
        private BaseDataVariableState<RecipeIdInternalDataType> m_ınternalRecipeId;
        private BaseDataVariableState<bool> m_ısPartial;
        private BaseDataVariableState<bool> m_ısSimulated;
        private BaseDataVariableState<JobIdDataType> m_jobId;
        private BaseDataVariableState<MeasIdDataType> m_measId;
        private BaseDataVariableState<PartIdDataType> m_partId;
        private BaseDataVariableState<ProcessingTimesDataType> m_processingTimes;
        private BaseDataVariableState<ProductIdDataType> m_productId;
        private BaseDataVariableState<object[]> m_resultContent;
        private BaseDataVariableState<ResultIdDataType> m_resultId;
        private BaseDataVariableState<int> m_resultState;
        #endregion
    }

    #region ResultValue Class
    /// <summary>
    /// A typed version of the _BrowseName_ variable.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public class ResultValue : BaseVariableValue
    {
        #region Constructors
        /// <summary>
        /// Initializes the instance with its defalt attribute values.
        /// </summary>
        public ResultValue(ResultState variable, ResultDataType value, object dataLock) : base(dataLock)
        {
            m_value = value;

            if (m_value == null)
            {
                m_value = new ResultDataType();
            }

            Initialize(variable);
        }
        #endregion

        #region Public Members
        /// <summary>
        /// The variable that the value belongs to.
        /// </summary>
        public ResultState Variable
        {
            get { return m_variable; }
        }

        /// <summary>
        /// The value of the variable.
        /// </summary>
        public ResultDataType Value
        {
            get { return m_value;  }
            set { m_value = value; }
        }
        #endregion

        #region Private Methods
        /// <summary>
        /// Initializes the object.
        /// </summary>
        private void Initialize(ResultState variable)
        {
            lock (Lock)
            {
                m_variable = variable;

                variable.Value = m_value;

                variable.OnReadValue = OnReadValue;
                variable.OnSimpleWriteValue = OnWriteValue;

                BaseVariableState instance = null;
                List<BaseInstanceState> updateList = new List<BaseInstanceState>();
                updateList.Add(variable);

                instance = m_variable.ResultId;
                instance.OnReadValue = OnRead_ResultId;
                instance.OnSimpleWriteValue = OnWrite_ResultId;
                updateList.Add(instance);
                instance = m_variable.HasTransferableDataOnFile;
                instance.OnReadValue = OnRead_HasTransferableDataOnFile;
                instance.OnSimpleWriteValue = OnWrite_HasTransferableDataOnFile;
                updateList.Add(instance);
                instance = m_variable.IsPartial;
                instance.OnReadValue = OnRead_IsPartial;
                instance.OnSimpleWriteValue = OnWrite_IsPartial;
                updateList.Add(instance);
                instance = m_variable.IsSimulated;
                instance.OnReadValue = OnRead_IsSimulated;
                instance.OnSimpleWriteValue = OnWrite_IsSimulated;
                updateList.Add(instance);
                instance = m_variable.ResultState;
                instance.OnReadValue = OnRead_ResultState;
                instance.OnSimpleWriteValue = OnWrite_ResultState;
                updateList.Add(instance);
                instance = m_variable.MeasId;
                instance.OnReadValue = OnRead_MeasId;
                instance.OnSimpleWriteValue = OnWrite_MeasId;
                updateList.Add(instance);
                instance = m_variable.PartId;
                instance.OnReadValue = OnRead_PartId;
                instance.OnSimpleWriteValue = OnWrite_PartId;
                updateList.Add(instance);
                instance = m_variable.ExternalRecipeId;
                instance.OnReadValue = OnRead_ExternalRecipeId;
                instance.OnSimpleWriteValue = OnWrite_ExternalRecipeId;
                updateList.Add(instance);
                instance = m_variable.InternalRecipeId;
                instance.OnReadValue = OnRead_InternalRecipeId;
                instance.OnSimpleWriteValue = OnWrite_InternalRecipeId;
                updateList.Add(instance);
                instance = m_variable.ProductId;
                instance.OnReadValue = OnRead_ProductId;
                instance.OnSimpleWriteValue = OnWrite_ProductId;
                updateList.Add(instance);
                instance = m_variable.ExternalConfigurationId;
                instance.OnReadValue = OnRead_ExternalConfigurationId;
                instance.OnSimpleWriteValue = OnWrite_ExternalConfigurationId;
                updateList.Add(instance);
                instance = m_variable.InternalConfigurationId;
                instance.OnReadValue = OnRead_InternalConfigurationId;
                instance.OnSimpleWriteValue = OnWrite_InternalConfigurationId;
                updateList.Add(instance);
                instance = m_variable.JobId;
                instance.OnReadValue = OnRead_JobId;
                instance.OnSimpleWriteValue = OnWrite_JobId;
                updateList.Add(instance);
                instance = m_variable.CreationTime;
                instance.OnReadValue = OnRead_CreationTime;
                instance.OnSimpleWriteValue = OnWrite_CreationTime;
                updateList.Add(instance);
                instance = m_variable.ProcessingTimes;
                instance.OnReadValue = OnRead_ProcessingTimes;
                instance.OnSimpleWriteValue = OnWrite_ProcessingTimes;
                updateList.Add(instance);
                instance = m_variable.ResultContent;
                instance.OnReadValue = OnRead_ResultContent;
                instance.OnSimpleWriteValue = OnWrite_ResultContent;
                updateList.Add(instance);

                SetUpdateList(updateList);
            }
        }

        /// <summary>
        /// Reads the value of the variable.
        /// </summary>
        protected ServiceResult OnReadValue(
            ISystemContext context,
            NodeState node,
            NumericRange indexRange,
            QualifiedName dataEncoding,
            ref object value,
            ref StatusCode statusCode,
            ref DateTime timestamp)
        {
            lock (Lock)
            {
                DoBeforeReadProcessing(context, node);

                if (m_value != null)
                {
                    value = m_value;
                }

                return Read(context, node, indexRange, dataEncoding, ref value, ref statusCode, ref timestamp);
            }
        }

        /// <summary>
        /// Writes the value of the variable.
        /// </summary>
        private ServiceResult OnWriteValue(ISystemContext context, NodeState node, ref object value)
        {
            lock (Lock)
            {
                m_value = (ResultDataType)Write(value);
            }

            return ServiceResult.Good;
        }

        #region ResultId Access Methods
        /// <summary>
        /// Reads the value of the variable child.
        /// </summary>
        private ServiceResult OnRead_ResultId(
            ISystemContext context,
            NodeState node,
            NumericRange indexRange,
            QualifiedName dataEncoding,
            ref object value,
            ref StatusCode statusCode,
            ref DateTime timestamp)
        {
            lock (Lock)
            {
                DoBeforeReadProcessing(context, node);

                if (m_value != null)
                {
                    value = m_value.ResultId;
                }

                return Read(context, node, indexRange, dataEncoding, ref value, ref statusCode, ref timestamp);
            }
        }

        /// <summary>
        /// Writes the value of the variable child.
        /// </summary>
        private ServiceResult OnWrite_ResultId(ISystemContext context, NodeState node, ref object value)
        {
            lock (Lock)
            {
                m_value.ResultId = (ResultIdDataType)Write(value);
            }

            return ServiceResult.Good;
        }
        #endregion

        #region HasTransferableDataOnFile Access Methods
        /// <summary>
        /// Reads the value of the variable child.
        /// </summary>
        private ServiceResult OnRead_HasTransferableDataOnFile(
            ISystemContext context,
            NodeState node,
            NumericRange indexRange,
            QualifiedName dataEncoding,
            ref object value,
            ref StatusCode statusCode,
            ref DateTime timestamp)
        {
            lock (Lock)
            {
                DoBeforeReadProcessing(context, node);

                if (m_value != null)
                {
                    value = m_value.HasTransferableDataOnFile;
                }

                return Read(context, node, indexRange, dataEncoding, ref value, ref statusCode, ref timestamp);
            }
        }

        /// <summary>
        /// Writes the value of the variable child.
        /// </summary>
        private ServiceResult OnWrite_HasTransferableDataOnFile(ISystemContext context, NodeState node, ref object value)
        {
            lock (Lock)
            {
                m_value.HasTransferableDataOnFile = (bool)Write(value);
            }

            return ServiceResult.Good;
        }
        #endregion

        #region IsPartial Access Methods
        /// <summary>
        /// Reads the value of the variable child.
        /// </summary>
        private ServiceResult OnRead_IsPartial(
            ISystemContext context,
            NodeState node,
            NumericRange indexRange,
            QualifiedName dataEncoding,
            ref object value,
            ref StatusCode statusCode,
            ref DateTime timestamp)
        {
            lock (Lock)
            {
                DoBeforeReadProcessing(context, node);

                if (m_value != null)
                {
                    value = m_value.IsPartial;
                }

                return Read(context, node, indexRange, dataEncoding, ref value, ref statusCode, ref timestamp);
            }
        }

        /// <summary>
        /// Writes the value of the variable child.
        /// </summary>
        private ServiceResult OnWrite_IsPartial(ISystemContext context, NodeState node, ref object value)
        {
            lock (Lock)
            {
                m_value.IsPartial = (bool)Write(value);
            }

            return ServiceResult.Good;
        }
        #endregion

        #region IsSimulated Access Methods
        /// <summary>
        /// Reads the value of the variable child.
        /// </summary>
        private ServiceResult OnRead_IsSimulated(
            ISystemContext context,
            NodeState node,
            NumericRange indexRange,
            QualifiedName dataEncoding,
            ref object value,
            ref StatusCode statusCode,
            ref DateTime timestamp)
        {
            lock (Lock)
            {
                DoBeforeReadProcessing(context, node);

                if (m_value != null)
                {
                    value = m_value.IsSimulated;
                }

                return Read(context, node, indexRange, dataEncoding, ref value, ref statusCode, ref timestamp);
            }
        }

        /// <summary>
        /// Writes the value of the variable child.
        /// </summary>
        private ServiceResult OnWrite_IsSimulated(ISystemContext context, NodeState node, ref object value)
        {
            lock (Lock)
            {
                m_value.IsSimulated = (bool)Write(value);
            }

            return ServiceResult.Good;
        }
        #endregion

        #region ResultState Access Methods
        /// <summary>
        /// Reads the value of the variable child.
        /// </summary>
        private ServiceResult OnRead_ResultState(
            ISystemContext context,
            NodeState node,
            NumericRange indexRange,
            QualifiedName dataEncoding,
            ref object value,
            ref StatusCode statusCode,
            ref DateTime timestamp)
        {
            lock (Lock)
            {
                DoBeforeReadProcessing(context, node);

                if (m_value != null)
                {
                    value = m_value.ResultState;
                }

                return Read(context, node, indexRange, dataEncoding, ref value, ref statusCode, ref timestamp);
            }
        }

        /// <summary>
        /// Writes the value of the variable child.
        /// </summary>
        private ServiceResult OnWrite_ResultState(ISystemContext context, NodeState node, ref object value)
        {
            lock (Lock)
            {
                m_value.ResultState = (int)Write(value);
            }

            return ServiceResult.Good;
        }
        #endregion

        #region MeasId Access Methods
        /// <summary>
        /// Reads the value of the variable child.
        /// </summary>
        private ServiceResult OnRead_MeasId(
            ISystemContext context,
            NodeState node,
            NumericRange indexRange,
            QualifiedName dataEncoding,
            ref object value,
            ref StatusCode statusCode,
            ref DateTime timestamp)
        {
            lock (Lock)
            {
                DoBeforeReadProcessing(context, node);

                if (m_value != null)
                {
                    value = m_value.MeasId;
                }

                return Read(context, node, indexRange, dataEncoding, ref value, ref statusCode, ref timestamp);
            }
        }

        /// <summary>
        /// Writes the value of the variable child.
        /// </summary>
        private ServiceResult OnWrite_MeasId(ISystemContext context, NodeState node, ref object value)
        {
            lock (Lock)
            {
                m_value.MeasId = (MeasIdDataType)Write(value);
            }

            return ServiceResult.Good;
        }
        #endregion

        #region PartId Access Methods
        /// <summary>
        /// Reads the value of the variable child.
        /// </summary>
        private ServiceResult OnRead_PartId(
            ISystemContext context,
            NodeState node,
            NumericRange indexRange,
            QualifiedName dataEncoding,
            ref object value,
            ref StatusCode statusCode,
            ref DateTime timestamp)
        {
            lock (Lock)
            {
                DoBeforeReadProcessing(context, node);

                if (m_value != null)
                {
                    value = m_value.PartId;
                }

                return Read(context, node, indexRange, dataEncoding, ref value, ref statusCode, ref timestamp);
            }
        }

        /// <summary>
        /// Writes the value of the variable child.
        /// </summary>
        private ServiceResult OnWrite_PartId(ISystemContext context, NodeState node, ref object value)
        {
            lock (Lock)
            {
                m_value.PartId = (PartIdDataType)Write(value);
            }

            return ServiceResult.Good;
        }
        #endregion

        #region ExternalRecipeId Access Methods
        /// <summary>
        /// Reads the value of the variable child.
        /// </summary>
        private ServiceResult OnRead_ExternalRecipeId(
            ISystemContext context,
            NodeState node,
            NumericRange indexRange,
            QualifiedName dataEncoding,
            ref object value,
            ref StatusCode statusCode,
            ref DateTime timestamp)
        {
            lock (Lock)
            {
                DoBeforeReadProcessing(context, node);

                if (m_value != null)
                {
                    value = m_value.ExternalRecipeId;
                }

                return Read(context, node, indexRange, dataEncoding, ref value, ref statusCode, ref timestamp);
            }
        }

        /// <summary>
        /// Writes the value of the variable child.
        /// </summary>
        private ServiceResult OnWrite_ExternalRecipeId(ISystemContext context, NodeState node, ref object value)
        {
            lock (Lock)
            {
                m_value.ExternalRecipeId = (RecipeIdExternalDataType)Write(value);
            }

            return ServiceResult.Good;
        }
        #endregion

        #region InternalRecipeId Access Methods
        /// <summary>
        /// Reads the value of the variable child.
        /// </summary>
        private ServiceResult OnRead_InternalRecipeId(
            ISystemContext context,
            NodeState node,
            NumericRange indexRange,
            QualifiedName dataEncoding,
            ref object value,
            ref StatusCode statusCode,
            ref DateTime timestamp)
        {
            lock (Lock)
            {
                DoBeforeReadProcessing(context, node);

                if (m_value != null)
                {
                    value = m_value.InternalRecipeId;
                }

                return Read(context, node, indexRange, dataEncoding, ref value, ref statusCode, ref timestamp);
            }
        }

        /// <summary>
        /// Writes the value of the variable child.
        /// </summary>
        private ServiceResult OnWrite_InternalRecipeId(ISystemContext context, NodeState node, ref object value)
        {
            lock (Lock)
            {
                m_value.InternalRecipeId = (RecipeIdInternalDataType)Write(value);
            }

            return ServiceResult.Good;
        }
        #endregion

        #region ProductId Access Methods
        /// <summary>
        /// Reads the value of the variable child.
        /// </summary>
        private ServiceResult OnRead_ProductId(
            ISystemContext context,
            NodeState node,
            NumericRange indexRange,
            QualifiedName dataEncoding,
            ref object value,
            ref StatusCode statusCode,
            ref DateTime timestamp)
        {
            lock (Lock)
            {
                DoBeforeReadProcessing(context, node);

                if (m_value != null)
                {
                    value = m_value.ProductId;
                }

                return Read(context, node, indexRange, dataEncoding, ref value, ref statusCode, ref timestamp);
            }
        }

        /// <summary>
        /// Writes the value of the variable child.
        /// </summary>
        private ServiceResult OnWrite_ProductId(ISystemContext context, NodeState node, ref object value)
        {
            lock (Lock)
            {
                m_value.ProductId = (ProductIdDataType)Write(value);
            }

            return ServiceResult.Good;
        }
        #endregion

        #region ExternalConfigurationId Access Methods
        /// <summary>
        /// Reads the value of the variable child.
        /// </summary>
        private ServiceResult OnRead_ExternalConfigurationId(
            ISystemContext context,
            NodeState node,
            NumericRange indexRange,
            QualifiedName dataEncoding,
            ref object value,
            ref StatusCode statusCode,
            ref DateTime timestamp)
        {
            lock (Lock)
            {
                DoBeforeReadProcessing(context, node);

                if (m_value != null)
                {
                    value = m_value.ExternalConfigurationId;
                }

                return Read(context, node, indexRange, dataEncoding, ref value, ref statusCode, ref timestamp);
            }
        }

        /// <summary>
        /// Writes the value of the variable child.
        /// </summary>
        private ServiceResult OnWrite_ExternalConfigurationId(ISystemContext context, NodeState node, ref object value)
        {
            lock (Lock)
            {
                m_value.ExternalConfigurationId = (ConfigurationIdDataType)Write(value);
            }

            return ServiceResult.Good;
        }
        #endregion

        #region InternalConfigurationId Access Methods
        /// <summary>
        /// Reads the value of the variable child.
        /// </summary>
        private ServiceResult OnRead_InternalConfigurationId(
            ISystemContext context,
            NodeState node,
            NumericRange indexRange,
            QualifiedName dataEncoding,
            ref object value,
            ref StatusCode statusCode,
            ref DateTime timestamp)
        {
            lock (Lock)
            {
                DoBeforeReadProcessing(context, node);

                if (m_value != null)
                {
                    value = m_value.InternalConfigurationId;
                }

                return Read(context, node, indexRange, dataEncoding, ref value, ref statusCode, ref timestamp);
            }
        }

        /// <summary>
        /// Writes the value of the variable child.
        /// </summary>
        private ServiceResult OnWrite_InternalConfigurationId(ISystemContext context, NodeState node, ref object value)
        {
            lock (Lock)
            {
                m_value.InternalConfigurationId = (ConfigurationIdDataType)Write(value);
            }

            return ServiceResult.Good;
        }
        #endregion

        #region JobId Access Methods
        /// <summary>
        /// Reads the value of the variable child.
        /// </summary>
        private ServiceResult OnRead_JobId(
            ISystemContext context,
            NodeState node,
            NumericRange indexRange,
            QualifiedName dataEncoding,
            ref object value,
            ref StatusCode statusCode,
            ref DateTime timestamp)
        {
            lock (Lock)
            {
                DoBeforeReadProcessing(context, node);

                if (m_value != null)
                {
                    value = m_value.JobId;
                }

                return Read(context, node, indexRange, dataEncoding, ref value, ref statusCode, ref timestamp);
            }
        }

        /// <summary>
        /// Writes the value of the variable child.
        /// </summary>
        private ServiceResult OnWrite_JobId(ISystemContext context, NodeState node, ref object value)
        {
            lock (Lock)
            {
                m_value.JobId = (JobIdDataType)Write(value);
            }

            return ServiceResult.Good;
        }
        #endregion

        #region CreationTime Access Methods
        /// <summary>
        /// Reads the value of the variable child.
        /// </summary>
        private ServiceResult OnRead_CreationTime(
            ISystemContext context,
            NodeState node,
            NumericRange indexRange,
            QualifiedName dataEncoding,
            ref object value,
            ref StatusCode statusCode,
            ref DateTime timestamp)
        {
            lock (Lock)
            {
                DoBeforeReadProcessing(context, node);

                if (m_value != null)
                {
                    value = m_value.CreationTime;
                }

                return Read(context, node, indexRange, dataEncoding, ref value, ref statusCode, ref timestamp);
            }
        }

        /// <summary>
        /// Writes the value of the variable child.
        /// </summary>
        private ServiceResult OnWrite_CreationTime(ISystemContext context, NodeState node, ref object value)
        {
            lock (Lock)
            {
                m_value.CreationTime = (DateTime)Write(value);
            }

            return ServiceResult.Good;
        }
        #endregion

        #region ProcessingTimes Access Methods
        /// <summary>
        /// Reads the value of the variable child.
        /// </summary>
        private ServiceResult OnRead_ProcessingTimes(
            ISystemContext context,
            NodeState node,
            NumericRange indexRange,
            QualifiedName dataEncoding,
            ref object value,
            ref StatusCode statusCode,
            ref DateTime timestamp)
        {
            lock (Lock)
            {
                DoBeforeReadProcessing(context, node);

                if (m_value != null)
                {
                    value = m_value.ProcessingTimes;
                }

                return Read(context, node, indexRange, dataEncoding, ref value, ref statusCode, ref timestamp);
            }
        }

        /// <summary>
        /// Writes the value of the variable child.
        /// </summary>
        private ServiceResult OnWrite_ProcessingTimes(ISystemContext context, NodeState node, ref object value)
        {
            lock (Lock)
            {
                m_value.ProcessingTimes = (ProcessingTimesDataType)Write(value);
            }

            return ServiceResult.Good;
        }
        #endregion

        #region ResultContent Access Methods
        /// <summary>
        /// Reads the value of the variable child.
        /// </summary>
        private ServiceResult OnRead_ResultContent(
            ISystemContext context,
            NodeState node,
            NumericRange indexRange,
            QualifiedName dataEncoding,
            ref object value,
            ref StatusCode statusCode,
            ref DateTime timestamp)
        {
            lock (Lock)
            {
                DoBeforeReadProcessing(context, node);

                if (m_value != null)
                {
                    value = m_value.ResultContent;
                }

                return Read(context, node, indexRange, dataEncoding, ref value, ref statusCode, ref timestamp);
            }
        }

        /// <summary>
        /// Writes the value of the variable child.
        /// </summary>
        private ServiceResult OnWrite_ResultContent(ISystemContext context, NodeState node, ref object value)
        {
            lock (Lock)
            {
                m_value.ResultContent = (VariantCollection)Write(value);
            }

            return ServiceResult.Good;
        }
        #endregion
        #endregion

        #region Private Fields
        private ResultDataType m_value;
        private ResultState m_variable;
        #endregion
    }
    #endregion
    #endif
    #endregion

    #region AcquisitionDoneEventState Class
    #if (!OPCUA_EXCLUDE_AcquisitionDoneEventState)
    /// <summary>
    /// Stores an instance of the AcquisitionDoneEventType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class AcquisitionDoneEventState : BaseEventState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public AcquisitionDoneEventState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.AcquisitionDoneEventType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);
        }

        #region Initialization String
        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAIAAAAEFjcXVpc2l0aW9uRG9uZUV2ZW50VHlwZUluc3RhbmNlAQEtAAEBLQD/////CgAAADVgiQoC" +
           "AAAAAAAHAAAARXZlbnRJZAEBLgADAAAAACsAAABBIGdsb2JhbGx5IHVuaXF1ZSBpZGVudGlmaWVyIGZv" +
           "ciB0aGUgZXZlbnQuAC4ARC4AAAAAD/////8BAf////8AAAAANWCJCgIAAAAAAAkAAABFdmVudFR5cGUB" +
           "AS8AAwAAAAAiAAAAVGhlIGlkZW50aWZpZXIgZm9yIHRoZSBldmVudCB0eXBlLgAuAEQvAAAAABH/////" +
           "AQH/////AAAAADVgiQoCAAAAAAAKAAAAU291cmNlTm9kZQEBMAADAAAAABgAAABUaGUgc291cmNlIG9m" +
           "IHRoZSBldmVudC4ALgBEMAAAAAAR/////wEB/////wAAAAA1YIkKAgAAAAAACgAAAFNvdXJjZU5hbWUB" +
           "ATEAAwAAAAApAAAAQSBkZXNjcmlwdGlvbiBvZiB0aGUgc291cmNlIG9mIHRoZSBldmVudC4ALgBEMQAA" +
           "AAAM/////wEB/////wAAAAA1YIkKAgAAAAAABAAAAFRpbWUBATIAAwAAAAAYAAAAV2hlbiB0aGUgZXZl" +
           "bnQgb2NjdXJyZWQuAC4ARDIAAAABACYB/////wEB/////wAAAAA1YIkKAgAAAAAACwAAAFJlY2VpdmVU" +
           "aW1lAQEzAAMAAAAAPgAAAFdoZW4gdGhlIHNlcnZlciByZWNlaXZlZCB0aGUgZXZlbnQgZnJvbSB0aGUg" +
           "dW5kZXJseWluZyBzeXN0ZW0uAC4ARDMAAAABACYB/////wEB/////wAAAAA1YIkKAgAAAAAACQAAAExv" +
           "Y2FsVGltZQEBNAADAAAAADwAAABJbmZvcm1hdGlvbiBhYm91dCB0aGUgbG9jYWwgdGltZSB3aGVyZSB0" +
           "aGUgZXZlbnQgb3JpZ2luYXRlZC4ALgBENAAAAAEA0CL/////AQH/////AAAAADVgiQoCAAAAAAAHAAAA" +
           "TWVzc2FnZQEBNQADAAAAACUAAABBIGxvY2FsaXplZCBkZXNjcmlwdGlvbiBvZiB0aGUgZXZlbnQuAC4A" +
           "RDUAAAAAFf////8BAf////8AAAAANWCJCgIAAAAAAAgAAABTZXZlcml0eQEBNgADAAAAACEAAABJbmRp" +
           "Y2F0ZXMgaG93IHVyZ2VudCBhbiBldmVudCBpcy4ALgBENgAAAAAF/////wEB/////wAAAAAVYKkKAgAA" +
           "AAEABQAAAEpvYklkAQE3AAAuAEQ3AAAAFgEBohMCZAAAADxKb2JJZERhdGFUeXBlIHhtbG5zPSJodHRw" +
           "Oi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbi9UeXBlcy54c2QiPjxJZD48L0lkPjwv" +
           "Sm9iSWREYXRhVHlwZT4BAQ8A/////wMD/////wAAAAA=";
        #endregion
        #endif
        #endregion

        #region Public Properties
        /// <summary>
        /// A description for the JobId Property.
        /// </summary>
        public PropertyState<JobIdDataType> JobId
        {
            get
            {
                return m_jobId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_jobId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_jobId = value;
            }
        }
        #endregion

        #region Overridden Methods
        /// <summary>
        /// Populates a list with the children that belong to the node.
        /// </summary>
        /// <param name="context">The context for the system being accessed.</param>
        /// <param name="children">The list of children to populate.</param>
        public override void GetChildren(
            ISystemContext context,
            IList<BaseInstanceState> children)
        {
            if (m_jobId != null)
            {
                children.Add(m_jobId);
            }

            base.GetChildren(context, children);
        }

        /// <summary>
        /// Finds the child with the specified browse name.
        /// </summary>
        protected override BaseInstanceState FindChild(
            ISystemContext context,
            QualifiedName browseName,
            bool createOrReplace,
            BaseInstanceState replacement)
        {
            if (QualifiedName.IsNull(browseName))
            {
                return null;
            }

            BaseInstanceState instance = null;

            switch (browseName.Name)
            {
                case Prefix2.BrowseNames.JobId:
                {
                    if (createOrReplace)
                    {
                        if (JobId == null)
                        {
                            if (replacement == null)
                            {
                                JobId = new PropertyState<JobIdDataType>(this);
                            }
                            else
                            {
                                JobId = (PropertyState<JobIdDataType>)replacement;
                            }
                        }
                    }

                    instance = JobId;
                    break;
                }
            }

            if (instance != null)
            {
                return instance;
            }

            return base.FindChild(context, browseName, createOrReplace, replacement);
        }
        #endregion

        #region Private Fields
        private PropertyState<JobIdDataType> m_jobId;
        #endregion
    }
    #endif
    #endregion

    #region VisionConditionState Class
    #if (!OPCUA_EXCLUDE_VisionConditionState)
    /// <summary>
    /// Stores an instance of the VisionConditionType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class VisionConditionState : AcknowledgeableConditionState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public VisionConditionState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.VisionConditionType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);

            if (CausePath != null)
            {
                CausePath.Initialize(context, CausePath_InitializationString);
            }

            if (ErrorCode != null)
            {
                ErrorCode.Initialize(context, ErrorCode_InitializationString);
            }

            if (ErrorString != null)
            {
                ErrorString.Initialize(context, ErrorString_InitializationString);
            }

            if (ExternalConfigurationId != null)
            {
                ExternalConfigurationId.Initialize(context, ExternalConfigurationId_InitializationString);
            }

            if (ExternalRecipeId != null)
            {
                ExternalRecipeId.Initialize(context, ExternalRecipeId_InitializationString);
            }

            if (InternalConfigurationId != null)
            {
                InternalConfigurationId.Initialize(context, InternalConfigurationId_InitializationString);
            }

            if (InternalRecipeId != null)
            {
                InternalRecipeId.Initialize(context, InternalRecipeId_InitializationString);
            }

            if (JobId != null)
            {
                JobId.Initialize(context, JobId_InitializationString);
            }

            if (MeasId != null)
            {
                MeasId.Initialize(context, MeasId_InitializationString);
            }

            if (PartId != null)
            {
                PartId.Initialize(context, PartId_InitializationString);
            }

            if (ProductId != null)
            {
                ProductId.Initialize(context, ProductId_InitializationString);
            }

            if (ResultId != null)
            {
                ResultId.Initialize(context, ResultId_InitializationString);
            }
        }

        #region Initialization String
        private const string CausePath_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYIkKAgAA" +
           "AAEACQAAAENhdXNlUGF0aAEBeAAALgBEeAAAAAAM/////wMD/////wAAAAA=";

        private const string ErrorCode_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYIkKAgAA" +
           "AAEACQAAAEVycm9yQ29kZQEBeQAALgBEeQAAAAAJ/////wMD/////wAAAAA=";

        private const string ErrorString_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYIkKAgAA" +
           "AAEACwAAAEVycm9yU3RyaW5nAQF6AAAuAER6AAAAAAz/////AwP/////AAAAAA==";

        private const string ExternalConfigurationId_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYIkKAgAA" +
           "AAEAFwAAAEV4dGVybmFsQ29uZmlndXJhdGlvbklkAQF7AAAuAER7AAAAAQEKAP////8DA/////8AAAAA";

        private const string ExternalRecipeId_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYIkKAgAA" +
           "AAEAEAAAAEV4dGVybmFsUmVjaXBlSWQBAXwAAC4ARHwAAAABAQsA/////wMD/////wAAAAA=";

        private const string InternalConfigurationId_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYIkKAgAA" +
           "AAEAFwAAAEludGVybmFsQ29uZmlndXJhdGlvbklkAQF9AAAuAER9AAAAAQEKAP////8DA/////8AAAAA";

        private const string InternalRecipeId_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYIkKAgAA" +
           "AAEAEAAAAEludGVybmFsUmVjaXBlSWQBAX4AAC4ARH4AAAABAQwA/////wMD/////wAAAAA=";

        private const string JobId_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYKkKAgAA" +
           "AAEABQAAAEpvYklkAQF/AAAuAER/AAAAFgEBohMCZAAAADxKb2JJZERhdGFUeXBlIHhtbG5zPSJodHRw" +
           "Oi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbi9UeXBlcy54c2QiPjxJZD48L0lkPjwv" +
           "Sm9iSWREYXRhVHlwZT4BAQ8A/////wMD/////wAAAAA=";

        private const string MeasId_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYKkKAgAA" +
           "AAEABgAAAE1lYXNJZAEBgAAALgBEgAAAABYBAY8TAoQAAAA8TWVhc0lkRGF0YVR5cGUgeG1sbnM9Imh0" +
           "dHA6Ly9vcGNmb3VuZGF0aW9uLm9yZy9VQS9NYWNoaW5lVmlzaW9uL1R5cGVzLnhzZCI+PEVuY29kaW5n" +
           "TWFzaz4wPC9FbmNvZGluZ01hc2s+PElkPjwvSWQ+PC9NZWFzSWREYXRhVHlwZT4BARAA/////wMD////" +
           "/wAAAAA=";

        private const string PartId_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYKkKAgAA" +
           "AAEABgAAAFBhcnRJZAEBgQAALgBEgQAAABYBAZYTAoQAAAA8UGFydElkRGF0YVR5cGUgeG1sbnM9Imh0" +
           "dHA6Ly9vcGNmb3VuZGF0aW9uLm9yZy9VQS9NYWNoaW5lVmlzaW9uL1R5cGVzLnhzZCI+PEVuY29kaW5n" +
           "TWFzaz4wPC9FbmNvZGluZ01hc2s+PElkPjwvSWQ+PC9QYXJ0SWREYXRhVHlwZT4BAREA/////wMD////" +
           "/wAAAAA=";

        private const string ProductId_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYKkKAgAA" +
           "AAEACQAAAFByb2R1Y3RJZAEBggAALgBEggAAABYBAWkUAooAAAA8UHJvZHVjdElkRGF0YVR5cGUgeG1s" +
           "bnM9Imh0dHA6Ly9vcGNmb3VuZGF0aW9uLm9yZy9VQS9NYWNoaW5lVmlzaW9uL1R5cGVzLnhzZCI+PEVu" +
           "Y29kaW5nTWFzaz4wPC9FbmNvZGluZ01hc2s+PElkPjwvSWQ+PC9Qcm9kdWN0SWREYXRhVHlwZT4BARQA" +
           "/////wMD/////wAAAAA=";

        private const string ResultId_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYKkKAgAA" +
           "AAEACAAAAFJlc3VsdElkAQGDAAAuAESDAAAAFgEBmxQCagAAADxSZXN1bHRJZERhdGFUeXBlIHhtbG5z" +
           "PSJodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbi9UeXBlcy54c2QiPjxJZD48" +
           "L0lkPjwvUmVzdWx0SWREYXRhVHlwZT4BARcA/////wMD/////wAAAAA=";

        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAGwAAAFZpc2lvbkNvbmRpdGlvblR5cGVJbnN0YW5jZQEBOAABATgA/////yYAAAA1YIkKAgAAAAAA" +
           "BwAAAEV2ZW50SWQBATkAAwAAAAArAAAAQSBnbG9iYWxseSB1bmlxdWUgaWRlbnRpZmllciBmb3IgdGhl" +
           "IGV2ZW50LgAuAEQ5AAAAAA//////AQH/////AAAAADVgiQoCAAAAAAAJAAAARXZlbnRUeXBlAQE6AAMA" +
           "AAAAIgAAAFRoZSBpZGVudGlmaWVyIGZvciB0aGUgZXZlbnQgdHlwZS4ALgBEOgAAAAAR/////wEB////" +
           "/wAAAAA1YIkKAgAAAAAACgAAAFNvdXJjZU5vZGUBATsAAwAAAAAYAAAAVGhlIHNvdXJjZSBvZiB0aGUg" +
           "ZXZlbnQuAC4ARDsAAAAAEf////8BAf////8AAAAANWCJCgIAAAAAAAoAAABTb3VyY2VOYW1lAQE8AAMA" +
           "AAAAKQAAAEEgZGVzY3JpcHRpb24gb2YgdGhlIHNvdXJjZSBvZiB0aGUgZXZlbnQuAC4ARDwAAAAADP//" +
           "//8BAf////8AAAAANWCJCgIAAAAAAAQAAABUaW1lAQE9AAMAAAAAGAAAAFdoZW4gdGhlIGV2ZW50IG9j" +
           "Y3VycmVkLgAuAEQ9AAAAAQAmAf////8BAf////8AAAAANWCJCgIAAAAAAAsAAABSZWNlaXZlVGltZQEB" +
           "PgADAAAAAD4AAABXaGVuIHRoZSBzZXJ2ZXIgcmVjZWl2ZWQgdGhlIGV2ZW50IGZyb20gdGhlIHVuZGVy" +
           "bHlpbmcgc3lzdGVtLgAuAEQ+AAAAAQAmAf////8BAf////8AAAAANWCJCgIAAAAAAAkAAABMb2NhbFRp" +
           "bWUBAT8AAwAAAAA8AAAASW5mb3JtYXRpb24gYWJvdXQgdGhlIGxvY2FsIHRpbWUgd2hlcmUgdGhlIGV2" +
           "ZW50IG9yaWdpbmF0ZWQuAC4ARD8AAAABANAi/////wEB/////wAAAAA1YIkKAgAAAAAABwAAAE1lc3Nh" +
           "Z2UBAUAAAwAAAAAlAAAAQSBsb2NhbGl6ZWQgZGVzY3JpcHRpb24gb2YgdGhlIGV2ZW50LgAuAERAAAAA" +
           "ABX/////AQH/////AAAAADVgiQoCAAAAAAAIAAAAU2V2ZXJpdHkBAUEAAwAAAAAhAAAASW5kaWNhdGVz" +
           "IGhvdyB1cmdlbnQgYW4gZXZlbnQgaXMuAC4AREEAAAAABf////8BAf////8AAAAAFWCJCgIAAAAAABAA" +
           "AABDb25kaXRpb25DbGFzc0lkAQFCAAAuAERCAAAAABH/////AQH/////AAAAABVgiQoCAAAAAAASAAAA" +
           "Q29uZGl0aW9uQ2xhc3NOYW1lAQFDAAAuAERDAAAAABX/////AQH/////AAAAABVgiQoCAAAAAAANAAAA" +
           "Q29uZGl0aW9uTmFtZQEBRgAALgBERgAAAAAM/////wEB/////wAAAAAVYIkKAgAAAAAACAAAAEJyYW5j" +
           "aElkAQFHAAAuAERHAAAAABH/////AQH/////AAAAABVgiQoCAAAAAAAGAAAAUmV0YWluAQFIAAAuAERI" +
           "AAAAAAH/////AQH/////AAAAABVgiQoCAAAAAAAMAAAARW5hYmxlZFN0YXRlAQFJAAAvAQAjI0kAAAAA" +
           "Ff////8BAQIAAAABACwjAAEBYQABACwjAAEBagABAAAAFWCJCgIAAAAAAAIAAABJZAEBSgAALgBESgAA" +
           "AAAB/////wEB/////wAAAAAVYIkKAgAAAAAABwAAAFF1YWxpdHkBAVIAAC8BACojUgAAAAAT/////wEB" +
           "/////wEAAAAVYIkKAgAAAAAADwAAAFNvdXJjZVRpbWVzdGFtcAEBUwAALgBEUwAAAAEAJgH/////AQH/" +
           "////AAAAABVgiQoCAAAAAAAMAAAATGFzdFNldmVyaXR5AQFUAAAvAQAqI1QAAAAABf////8BAf////8B" +
           "AAAAFWCJCgIAAAAAAA8AAABTb3VyY2VUaW1lc3RhbXABAVUAAC4ARFUAAAABACYB/////wEB/////wAA" +
           "AAAVYIkKAgAAAAAABwAAAENvbW1lbnQBAVYAAC8BACojVgAAAAAV/////wEB/////wEAAAAVYIkKAgAA" +
           "AAAADwAAAFNvdXJjZVRpbWVzdGFtcAEBVwAALgBEVwAAAAEAJgH/////AQH/////AAAAABVgiQoCAAAA" +
           "AAAMAAAAQ2xpZW50VXNlcklkAQFYAAAuAERYAAAAAAz/////AQH/////AAAAAARhggoEAAAAAAAHAAAA" +
           "RGlzYWJsZQEBWQAALwEARCNZAAAAAQEBAAAAAQD5CwABAPMKAAAAAARhggoEAAAAAAAGAAAARW5hYmxl" +
           "AQFaAAAvAQBDI1oAAAABAQEAAAABAPkLAAEA8woAAAAABGGCCgQAAAAAAAoAAABBZGRDb21tZW50AQFb" +
           "AAAvAQBFI1sAAAABAQEAAAABAPkLAAEADQsBAAAAFWCpCgIAAAAAAA4AAABJbnB1dEFyZ3VtZW50cwEB" +
           "XAAALgBEXAAAAJYCAAAAAQAqAQFGAAAABwAAAEV2ZW50SWQAD/////8AAAAAAwAAAAAoAAAAVGhlIGlk" +
           "ZW50aWZpZXIgZm9yIHRoZSBldmVudCB0byBjb21tZW50LgEAKgEBQgAAAAcAAABDb21tZW50ABX/////" +
           "AAAAAAMAAAAAJAAAAFRoZSBjb21tZW50IHRvIGFkZCB0byB0aGUgY29uZGl0aW9uLgEAKAEBAAAAAQH/" +
           "////AAAAABVgiQoCAAAAAAAKAAAAQWNrZWRTdGF0ZQEBYQAALwEAIyNhAAAAABX/////AQEBAAAAAQAs" +
           "IwEBAUkAAQAAABVgiQoCAAAAAAACAAAASWQBAWIAAC4ARGIAAAAAAf////8BAf////8AAAAABGGCCgQA" +
           "AAAAAAsAAABBY2tub3dsZWRnZQEBcwAALwEAlyNzAAAAAQEBAAAAAQD5CwABAPAiAQAAABVgqQoCAAAA" +
           "AAAOAAAASW5wdXRBcmd1bWVudHMBAXQAAC4ARHQAAACWAgAAAAEAKgEBRgAAAAcAAABFdmVudElkAA//" +
           "////AAAAAAMAAAAAKAAAAFRoZSBpZGVudGlmaWVyIGZvciB0aGUgZXZlbnQgdG8gY29tbWVudC4BACoB" +
           "AUIAAAAHAAAAQ29tbWVudAAV/////wAAAAADAAAAACQAAABUaGUgY29tbWVudCB0byBhZGQgdG8gdGhl" +
           "IGNvbmRpdGlvbi4BACgBAQAAAAEB/////wAAAAAVYIkKAgAAAAEADQAAAEJsb2NrUmVhY3Rpb24BAXcA" +
           "AC4ARHcAAAAAAf////8DA/////8AAAAAFWCJCgIAAAABAAkAAABDYXVzZVBhdGgBAXgAAC4ARHgAAAAA" +
           "DP////8DA/////8AAAAAFWCJCgIAAAABAAkAAABFcnJvckNvZGUBAXkAAC4ARHkAAAAACf////8DA///" +
           "//8AAAAAFWCJCgIAAAABAAsAAABFcnJvclN0cmluZwEBegAALgBEegAAAAAM/////wMD/////wAAAAAV" +
           "YIkKAgAAAAEAFwAAAEV4dGVybmFsQ29uZmlndXJhdGlvbklkAQF7AAAuAER7AAAAAQEKAP////8DA///" +
           "//8AAAAAFWCJCgIAAAABABAAAABFeHRlcm5hbFJlY2lwZUlkAQF8AAAuAER8AAAAAQELAP////8DA///" +
           "//8AAAAAFWCJCgIAAAABABcAAABJbnRlcm5hbENvbmZpZ3VyYXRpb25JZAEBfQAALgBEfQAAAAEBCgD/" +
           "////AwP/////AAAAABVgiQoCAAAAAQAQAAAASW50ZXJuYWxSZWNpcGVJZAEBfgAALgBEfgAAAAEBDAD/" +
           "////AwP/////AAAAABVgqQoCAAAAAQAFAAAASm9iSWQBAX8AAC4ARH8AAAAWAQGiEwJkAAAAPEpvYklk" +
           "RGF0YVR5cGUgeG1sbnM9Imh0dHA6Ly9vcGNmb3VuZGF0aW9uLm9yZy9VQS9NYWNoaW5lVmlzaW9uL1R5" +
           "cGVzLnhzZCI+PElkPjwvSWQ+PC9Kb2JJZERhdGFUeXBlPgEBDwD/////AwP/////AAAAABVgqQoCAAAA" +
           "AQAGAAAATWVhc0lkAQGAAAAuAESAAAAAFgEBjxMChAAAADxNZWFzSWREYXRhVHlwZSB4bWxucz0iaHR0" +
           "cDovL29wY2ZvdW5kYXRpb24ub3JnL1VBL01hY2hpbmVWaXNpb24vVHlwZXMueHNkIj48RW5jb2RpbmdN" +
           "YXNrPjA8L0VuY29kaW5nTWFzaz48SWQ+PC9JZD48L01lYXNJZERhdGFUeXBlPgEBEAD/////AwP/////" +
           "AAAAABVgqQoCAAAAAQAGAAAAUGFydElkAQGBAAAuAESBAAAAFgEBlhMChAAAADxQYXJ0SWREYXRhVHlw" +
           "ZSB4bWxucz0iaHR0cDovL29wY2ZvdW5kYXRpb24ub3JnL1VBL01hY2hpbmVWaXNpb24vVHlwZXMueHNk" +
           "Ij48RW5jb2RpbmdNYXNrPjA8L0VuY29kaW5nTWFzaz48SWQ+PC9JZD48L1BhcnRJZERhdGFUeXBlPgEB" +
           "EQD/////AwP/////AAAAABVgqQoCAAAAAQAJAAAAUHJvZHVjdElkAQGCAAAuAESCAAAAFgEBaRQCigAA" +
           "ADxQcm9kdWN0SWREYXRhVHlwZSB4bWxucz0iaHR0cDovL29wY2ZvdW5kYXRpb24ub3JnL1VBL01hY2hp" +
           "bmVWaXNpb24vVHlwZXMueHNkIj48RW5jb2RpbmdNYXNrPjA8L0VuY29kaW5nTWFzaz48SWQ+PC9JZD48" +
           "L1Byb2R1Y3RJZERhdGFUeXBlPgEBFAD/////AwP/////AAAAABVgqQoCAAAAAQAIAAAAUmVzdWx0SWQB" +
           "AYMAAC4ARIMAAAAWAQGbFAJqAAAAPFJlc3VsdElkRGF0YVR5cGUgeG1sbnM9Imh0dHA6Ly9vcGNmb3Vu" +
           "ZGF0aW9uLm9yZy9VQS9NYWNoaW5lVmlzaW9uL1R5cGVzLnhzZCI+PElkPjwvSWQ+PC9SZXN1bHRJZERh" +
           "dGFUeXBlPgEBFwD/////AwP/////AAAAABVgiQoCAAAAAQAMAAAAU3RvcFJlYWN0aW9uAQGEAAAuAESE" +
           "AAAAAAH/////AwP/////AAAAAA==";
        #endregion
        #endif
        #endregion

        #region Public Properties
        /// <summary>
        /// A description for the BlockReaction Property.
        /// </summary>
        public PropertyState<bool> BlockReaction
        {
            get
            {
                return m_blockReaction;
            }

            set
            {
                if (!Object.ReferenceEquals(m_blockReaction, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_blockReaction = value;
            }
        }

        /// <summary>
        /// A description for the CausePath Property.
        /// </summary>
        public PropertyState<string> CausePath
        {
            get
            {
                return m_causePath;
            }

            set
            {
                if (!Object.ReferenceEquals(m_causePath, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_causePath = value;
            }
        }

        /// <summary>
        /// A description for the ErrorCode Property.
        /// </summary>
        public PropertyState<ulong> ErrorCode
        {
            get
            {
                return m_errorCode;
            }

            set
            {
                if (!Object.ReferenceEquals(m_errorCode, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_errorCode = value;
            }
        }

        /// <summary>
        /// A description for the ErrorString Property.
        /// </summary>
        public PropertyState<string> ErrorString
        {
            get
            {
                return m_errorString;
            }

            set
            {
                if (!Object.ReferenceEquals(m_errorString, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_errorString = value;
            }
        }

        /// <summary>
        /// A description for the ExternalConfigurationId Property.
        /// </summary>
        public PropertyState<ConfigurationIdDataType> ExternalConfigurationId
        {
            get
            {
                return m_externalConfigurationId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_externalConfigurationId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_externalConfigurationId = value;
            }
        }

        /// <summary>
        /// A description for the ExternalRecipeId Property.
        /// </summary>
        public PropertyState<RecipeIdExternalDataType> ExternalRecipeId
        {
            get
            {
                return m_externalRecipeId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_externalRecipeId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_externalRecipeId = value;
            }
        }

        /// <summary>
        /// A description for the InternalConfigurationId Property.
        /// </summary>
        public PropertyState<ConfigurationIdDataType> InternalConfigurationId
        {
            get
            {
                return m_ınternalConfigurationId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_ınternalConfigurationId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_ınternalConfigurationId = value;
            }
        }

        /// <summary>
        /// A description for the InternalRecipeId Property.
        /// </summary>
        public PropertyState<RecipeIdInternalDataType> InternalRecipeId
        {
            get
            {
                return m_ınternalRecipeId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_ınternalRecipeId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_ınternalRecipeId = value;
            }
        }

        /// <summary>
        /// A description for the JobId Property.
        /// </summary>
        public PropertyState<JobIdDataType> JobId
        {
            get
            {
                return m_jobId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_jobId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_jobId = value;
            }
        }

        /// <summary>
        /// A description for the MeasId Property.
        /// </summary>
        public PropertyState<MeasIdDataType> MeasId
        {
            get
            {
                return m_measId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_measId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_measId = value;
            }
        }

        /// <summary>
        /// A description for the PartId Property.
        /// </summary>
        public PropertyState<PartIdDataType> PartId
        {
            get
            {
                return m_partId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_partId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_partId = value;
            }
        }

        /// <summary>
        /// A description for the ProductId Property.
        /// </summary>
        public PropertyState<ProductIdDataType> ProductId
        {
            get
            {
                return m_productId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_productId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_productId = value;
            }
        }

        /// <summary>
        /// A description for the ResultId Property.
        /// </summary>
        public PropertyState<ResultIdDataType> ResultId
        {
            get
            {
                return m_resultId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_resultId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_resultId = value;
            }
        }

        /// <summary>
        /// A description for the StopReaction Property.
        /// </summary>
        public PropertyState<bool> StopReaction
        {
            get
            {
                return m_stopReaction;
            }

            set
            {
                if (!Object.ReferenceEquals(m_stopReaction, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_stopReaction = value;
            }
        }
        #endregion

        #region Overridden Methods
        /// <summary>
        /// Populates a list with the children that belong to the node.
        /// </summary>
        /// <param name="context">The context for the system being accessed.</param>
        /// <param name="children">The list of children to populate.</param>
        public override void GetChildren(
            ISystemContext context,
            IList<BaseInstanceState> children)
        {
            if (m_blockReaction != null)
            {
                children.Add(m_blockReaction);
            }

            if (m_causePath != null)
            {
                children.Add(m_causePath);
            }

            if (m_errorCode != null)
            {
                children.Add(m_errorCode);
            }

            if (m_errorString != null)
            {
                children.Add(m_errorString);
            }

            if (m_externalConfigurationId != null)
            {
                children.Add(m_externalConfigurationId);
            }

            if (m_externalRecipeId != null)
            {
                children.Add(m_externalRecipeId);
            }

            if (m_ınternalConfigurationId != null)
            {
                children.Add(m_ınternalConfigurationId);
            }

            if (m_ınternalRecipeId != null)
            {
                children.Add(m_ınternalRecipeId);
            }

            if (m_jobId != null)
            {
                children.Add(m_jobId);
            }

            if (m_measId != null)
            {
                children.Add(m_measId);
            }

            if (m_partId != null)
            {
                children.Add(m_partId);
            }

            if (m_productId != null)
            {
                children.Add(m_productId);
            }

            if (m_resultId != null)
            {
                children.Add(m_resultId);
            }

            if (m_stopReaction != null)
            {
                children.Add(m_stopReaction);
            }

            base.GetChildren(context, children);
        }

        /// <summary>
        /// Finds the child with the specified browse name.
        /// </summary>
        protected override BaseInstanceState FindChild(
            ISystemContext context,
            QualifiedName browseName,
            bool createOrReplace,
            BaseInstanceState replacement)
        {
            if (QualifiedName.IsNull(browseName))
            {
                return null;
            }

            BaseInstanceState instance = null;

            switch (browseName.Name)
            {
                case Prefix2.BrowseNames.BlockReaction:
                {
                    if (createOrReplace)
                    {
                        if (BlockReaction == null)
                        {
                            if (replacement == null)
                            {
                                BlockReaction = new PropertyState<bool>(this);
                            }
                            else
                            {
                                BlockReaction = (PropertyState<bool>)replacement;
                            }
                        }
                    }

                    instance = BlockReaction;
                    break;
                }

                case Prefix2.BrowseNames.CausePath:
                {
                    if (createOrReplace)
                    {
                        if (CausePath == null)
                        {
                            if (replacement == null)
                            {
                                CausePath = new PropertyState<string>(this);
                            }
                            else
                            {
                                CausePath = (PropertyState<string>)replacement;
                            }
                        }
                    }

                    instance = CausePath;
                    break;
                }

                case Prefix2.BrowseNames.ErrorCode:
                {
                    if (createOrReplace)
                    {
                        if (ErrorCode == null)
                        {
                            if (replacement == null)
                            {
                                ErrorCode = new PropertyState<ulong>(this);
                            }
                            else
                            {
                                ErrorCode = (PropertyState<ulong>)replacement;
                            }
                        }
                    }

                    instance = ErrorCode;
                    break;
                }

                case Prefix2.BrowseNames.ErrorString:
                {
                    if (createOrReplace)
                    {
                        if (ErrorString == null)
                        {
                            if (replacement == null)
                            {
                                ErrorString = new PropertyState<string>(this);
                            }
                            else
                            {
                                ErrorString = (PropertyState<string>)replacement;
                            }
                        }
                    }

                    instance = ErrorString;
                    break;
                }

                case Prefix2.BrowseNames.ExternalConfigurationId:
                {
                    if (createOrReplace)
                    {
                        if (ExternalConfigurationId == null)
                        {
                            if (replacement == null)
                            {
                                ExternalConfigurationId = new PropertyState<ConfigurationIdDataType>(this);
                            }
                            else
                            {
                                ExternalConfigurationId = (PropertyState<ConfigurationIdDataType>)replacement;
                            }
                        }
                    }

                    instance = ExternalConfigurationId;
                    break;
                }

                case Prefix2.BrowseNames.ExternalRecipeId:
                {
                    if (createOrReplace)
                    {
                        if (ExternalRecipeId == null)
                        {
                            if (replacement == null)
                            {
                                ExternalRecipeId = new PropertyState<RecipeIdExternalDataType>(this);
                            }
                            else
                            {
                                ExternalRecipeId = (PropertyState<RecipeIdExternalDataType>)replacement;
                            }
                        }
                    }

                    instance = ExternalRecipeId;
                    break;
                }

                case Prefix2.BrowseNames.InternalConfigurationId:
                {
                    if (createOrReplace)
                    {
                        if (InternalConfigurationId == null)
                        {
                            if (replacement == null)
                            {
                                InternalConfigurationId = new PropertyState<ConfigurationIdDataType>(this);
                            }
                            else
                            {
                                InternalConfigurationId = (PropertyState<ConfigurationIdDataType>)replacement;
                            }
                        }
                    }

                    instance = InternalConfigurationId;
                    break;
                }

                case Prefix2.BrowseNames.InternalRecipeId:
                {
                    if (createOrReplace)
                    {
                        if (InternalRecipeId == null)
                        {
                            if (replacement == null)
                            {
                                InternalRecipeId = new PropertyState<RecipeIdInternalDataType>(this);
                            }
                            else
                            {
                                InternalRecipeId = (PropertyState<RecipeIdInternalDataType>)replacement;
                            }
                        }
                    }

                    instance = InternalRecipeId;
                    break;
                }

                case Prefix2.BrowseNames.JobId:
                {
                    if (createOrReplace)
                    {
                        if (JobId == null)
                        {
                            if (replacement == null)
                            {
                                JobId = new PropertyState<JobIdDataType>(this);
                            }
                            else
                            {
                                JobId = (PropertyState<JobIdDataType>)replacement;
                            }
                        }
                    }

                    instance = JobId;
                    break;
                }

                case Prefix2.BrowseNames.MeasId:
                {
                    if (createOrReplace)
                    {
                        if (MeasId == null)
                        {
                            if (replacement == null)
                            {
                                MeasId = new PropertyState<MeasIdDataType>(this);
                            }
                            else
                            {
                                MeasId = (PropertyState<MeasIdDataType>)replacement;
                            }
                        }
                    }

                    instance = MeasId;
                    break;
                }

                case Prefix2.BrowseNames.PartId:
                {
                    if (createOrReplace)
                    {
                        if (PartId == null)
                        {
                            if (replacement == null)
                            {
                                PartId = new PropertyState<PartIdDataType>(this);
                            }
                            else
                            {
                                PartId = (PropertyState<PartIdDataType>)replacement;
                            }
                        }
                    }

                    instance = PartId;
                    break;
                }

                case Prefix2.BrowseNames.ProductId:
                {
                    if (createOrReplace)
                    {
                        if (ProductId == null)
                        {
                            if (replacement == null)
                            {
                                ProductId = new PropertyState<ProductIdDataType>(this);
                            }
                            else
                            {
                                ProductId = (PropertyState<ProductIdDataType>)replacement;
                            }
                        }
                    }

                    instance = ProductId;
                    break;
                }

                case Prefix2.BrowseNames.ResultId:
                {
                    if (createOrReplace)
                    {
                        if (ResultId == null)
                        {
                            if (replacement == null)
                            {
                                ResultId = new PropertyState<ResultIdDataType>(this);
                            }
                            else
                            {
                                ResultId = (PropertyState<ResultIdDataType>)replacement;
                            }
                        }
                    }

                    instance = ResultId;
                    break;
                }

                case Prefix2.BrowseNames.StopReaction:
                {
                    if (createOrReplace)
                    {
                        if (StopReaction == null)
                        {
                            if (replacement == null)
                            {
                                StopReaction = new PropertyState<bool>(this);
                            }
                            else
                            {
                                StopReaction = (PropertyState<bool>)replacement;
                            }
                        }
                    }

                    instance = StopReaction;
                    break;
                }
            }

            if (instance != null)
            {
                return instance;
            }

            return base.FindChild(context, browseName, createOrReplace, replacement);
        }
        #endregion

        #region Private Fields
        private PropertyState<bool> m_blockReaction;
        private PropertyState<string> m_causePath;
        private PropertyState<ulong> m_errorCode;
        private PropertyState<string> m_errorString;
        private PropertyState<ConfigurationIdDataType> m_externalConfigurationId;
        private PropertyState<RecipeIdExternalDataType> m_externalRecipeId;
        private PropertyState<ConfigurationIdDataType> m_ınternalConfigurationId;
        private PropertyState<RecipeIdInternalDataType> m_ınternalRecipeId;
        private PropertyState<JobIdDataType> m_jobId;
        private PropertyState<MeasIdDataType> m_measId;
        private PropertyState<PartIdDataType> m_partId;
        private PropertyState<ProductIdDataType> m_productId;
        private PropertyState<ResultIdDataType> m_resultId;
        private PropertyState<bool> m_stopReaction;
        #endregion
    }
    #endif
    #endregion

    #region VisionErrorConditionState Class
    #if (!OPCUA_EXCLUDE_VisionErrorConditionState)
    /// <summary>
    /// Stores an instance of the VisionErrorConditionType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class VisionErrorConditionState : VisionConditionState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public VisionErrorConditionState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.VisionErrorConditionType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);
        }

        #region Initialization String
        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAIAAAAFZpc2lvbkVycm9yQ29uZGl0aW9uVHlwZUluc3RhbmNlAQGFAAEBhQD/////GgAAADVgiQoC" +
           "AAAAAAAHAAAARXZlbnRJZAEBhgADAAAAACsAAABBIGdsb2JhbGx5IHVuaXF1ZSBpZGVudGlmaWVyIGZv" +
           "ciB0aGUgZXZlbnQuAC4ARIYAAAAAD/////8BAf////8AAAAANWCJCgIAAAAAAAkAAABFdmVudFR5cGUB" +
           "AYcAAwAAAAAiAAAAVGhlIGlkZW50aWZpZXIgZm9yIHRoZSBldmVudCB0eXBlLgAuAESHAAAAABH/////" +
           "AQH/////AAAAADVgiQoCAAAAAAAKAAAAU291cmNlTm9kZQEBiAADAAAAABgAAABUaGUgc291cmNlIG9m" +
           "IHRoZSBldmVudC4ALgBEiAAAAAAR/////wEB/////wAAAAA1YIkKAgAAAAAACgAAAFNvdXJjZU5hbWUB" +
           "AYkAAwAAAAApAAAAQSBkZXNjcmlwdGlvbiBvZiB0aGUgc291cmNlIG9mIHRoZSBldmVudC4ALgBEiQAA" +
           "AAAM/////wEB/////wAAAAA1YIkKAgAAAAAABAAAAFRpbWUBAYoAAwAAAAAYAAAAV2hlbiB0aGUgZXZl" +
           "bnQgb2NjdXJyZWQuAC4ARIoAAAABACYB/////wEB/////wAAAAA1YIkKAgAAAAAACwAAAFJlY2VpdmVU" +
           "aW1lAQGLAAMAAAAAPgAAAFdoZW4gdGhlIHNlcnZlciByZWNlaXZlZCB0aGUgZXZlbnQgZnJvbSB0aGUg" +
           "dW5kZXJseWluZyBzeXN0ZW0uAC4ARIsAAAABACYB/////wEB/////wAAAAA1YIkKAgAAAAAACQAAAExv" +
           "Y2FsVGltZQEBjAADAAAAADwAAABJbmZvcm1hdGlvbiBhYm91dCB0aGUgbG9jYWwgdGltZSB3aGVyZSB0" +
           "aGUgZXZlbnQgb3JpZ2luYXRlZC4ALgBEjAAAAAEA0CL/////AQH/////AAAAADVgiQoCAAAAAAAHAAAA" +
           "TWVzc2FnZQEBjQADAAAAACUAAABBIGxvY2FsaXplZCBkZXNjcmlwdGlvbiBvZiB0aGUgZXZlbnQuAC4A" +
           "RI0AAAAAFf////8BAf////8AAAAANWCJCgIAAAAAAAgAAABTZXZlcml0eQEBjgADAAAAACEAAABJbmRp" +
           "Y2F0ZXMgaG93IHVyZ2VudCBhbiBldmVudCBpcy4ALgBEjgAAAAAF/////wEB/////wAAAAAVYIkKAgAA" +
           "AAAAEAAAAENvbmRpdGlvbkNsYXNzSWQBAY8AAC4ARI8AAAAAEf////8BAf////8AAAAAFWCJCgIAAAAA" +
           "ABIAAABDb25kaXRpb25DbGFzc05hbWUBAZAAAC4ARJAAAAAAFf////8BAf////8AAAAAFWCJCgIAAAAA" +
           "AA0AAABDb25kaXRpb25OYW1lAQGTAAAuAESTAAAAAAz/////AQH/////AAAAABVgiQoCAAAAAAAIAAAA" +
           "QnJhbmNoSWQBAZQAAC4ARJQAAAAAEf////8BAf////8AAAAAFWCJCgIAAAAAAAYAAABSZXRhaW4BAZUA" +
           "AC4ARJUAAAAAAf////8BAf////8AAAAAFWCJCgIAAAAAAAwAAABFbmFibGVkU3RhdGUBAZYAAC8BACMj" +
           "lgAAAAAV/////wEBAgAAAAEALCMAAQGuAAEALCMAAQG3AAEAAAAVYIkKAgAAAAAAAgAAAElkAQGXAAAu" +
           "AESXAAAAAAH/////AQH/////AAAAABVgiQoCAAAAAAAHAAAAUXVhbGl0eQEBnwAALwEAKiOfAAAAABP/" +
           "////AQH/////AQAAABVgiQoCAAAAAAAPAAAAU291cmNlVGltZXN0YW1wAQGgAAAuAESgAAAAAQAmAf//" +
           "//8BAf////8AAAAAFWCJCgIAAAAAAAwAAABMYXN0U2V2ZXJpdHkBAaEAAC8BACojoQAAAAAF/////wEB" +
           "/////wEAAAAVYIkKAgAAAAAADwAAAFNvdXJjZVRpbWVzdGFtcAEBogAALgBEogAAAAEAJgH/////AQH/" +
           "////AAAAABVgiQoCAAAAAAAHAAAAQ29tbWVudAEBowAALwEAKiOjAAAAABX/////AQH/////AQAAABVg" +
           "iQoCAAAAAAAPAAAAU291cmNlVGltZXN0YW1wAQGkAAAuAESkAAAAAQAmAf////8BAf////8AAAAAFWCJ" +
           "CgIAAAAAAAwAAABDbGllbnRVc2VySWQBAaUAAC4ARKUAAAAADP////8BAf////8AAAAABGGCCgQAAAAA" +
           "AAcAAABEaXNhYmxlAQGmAAAvAQBEI6YAAAABAQEAAAABAPkLAAEA8woAAAAABGGCCgQAAAAAAAYAAABF" +
           "bmFibGUBAacAAC8BAEMjpwAAAAEBAQAAAAEA+QsAAQDzCgAAAAAEYYIKBAAAAAAACgAAAEFkZENvbW1l" +
           "bnQBAagAAC8BAEUjqAAAAAEBAQAAAAEA+QsAAQANCwEAAAAVYKkKAgAAAAAADgAAAElucHV0QXJndW1l" +
           "bnRzAQGpAAAuAESpAAAAlgIAAAABACoBAUYAAAAHAAAARXZlbnRJZAAP/////wAAAAADAAAAACgAAABU" +
           "aGUgaWRlbnRpZmllciBmb3IgdGhlIGV2ZW50IHRvIGNvbW1lbnQuAQAqAQFCAAAABwAAAENvbW1lbnQA" +
           "Ff////8AAAAAAwAAAAAkAAAAVGhlIGNvbW1lbnQgdG8gYWRkIHRvIHRoZSBjb25kaXRpb24uAQAoAQEA" +
           "AAABAf////8AAAAAFWCJCgIAAAAAAAoAAABBY2tlZFN0YXRlAQGuAAAvAQAjI64AAAAAFf////8BAQEA" +
           "AAABACwjAQEBlgABAAAAFWCJCgIAAAAAAAIAAABJZAEBrwAALgBErwAAAAAB/////wEB/////wAAAAAE" +
           "YYIKBAAAAAAACwAAAEFja25vd2xlZGdlAQHAAAAvAQCXI8AAAAABAQEAAAABAPkLAAEA8CIBAAAAFWCp" +
           "CgIAAAAAAA4AAABJbnB1dEFyZ3VtZW50cwEBwQAALgBEwQAAAJYCAAAAAQAqAQFGAAAABwAAAEV2ZW50" +
           "SWQAD/////8AAAAAAwAAAAAoAAAAVGhlIGlkZW50aWZpZXIgZm9yIHRoZSBldmVudCB0byBjb21tZW50" +
           "LgEAKgEBQgAAAAcAAABDb21tZW50ABX/////AAAAAAMAAAAAJAAAAFRoZSBjb21tZW50IHRvIGFkZCB0" +
           "byB0aGUgY29uZGl0aW9uLgEAKAEBAAAAAQH/////AAAAABVgiQoCAAAAAQANAAAAQmxvY2tSZWFjdGlv" +
           "bgEBxAAALgBExAAAAAAB/////wMD/////wAAAAAVYIkKAgAAAAEADAAAAFN0b3BSZWFjdGlvbgEB0QAA" +
           "LgBE0QAAAAAB/////wMD/////wAAAAA=";
        #endregion
        #endif
        #endregion

        #region Public Properties
        #endregion

        #region Overridden Methods
        #endregion

        #region Private Fields
        #endregion
    }
    #endif
    #endregion

    #region VisionPersistentErrorConditionState Class
    #if (!OPCUA_EXCLUDE_VisionPersistentErrorConditionState)
    /// <summary>
    /// Stores an instance of the VisionPersistentErrorConditionType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class VisionPersistentErrorConditionState : VisionConditionState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public VisionPersistentErrorConditionState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.VisionPersistentErrorConditionType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);
        }

        #region Initialization String
        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAKgAAAFZpc2lvblBlcnNpc3RlbnRFcnJvckNvbmRpdGlvblR5cGVJbnN0YW5jZQEB0gABAdIA////" +
           "/xoAAAA1YIkKAgAAAAAABwAAAEV2ZW50SWQBAdMAAwAAAAArAAAAQSBnbG9iYWxseSB1bmlxdWUgaWRl" +
           "bnRpZmllciBmb3IgdGhlIGV2ZW50LgAuAETTAAAAAA//////AQH/////AAAAADVgiQoCAAAAAAAJAAAA" +
           "RXZlbnRUeXBlAQHUAAMAAAAAIgAAAFRoZSBpZGVudGlmaWVyIGZvciB0aGUgZXZlbnQgdHlwZS4ALgBE" +
           "1AAAAAAR/////wEB/////wAAAAA1YIkKAgAAAAAACgAAAFNvdXJjZU5vZGUBAdUAAwAAAAAYAAAAVGhl" +
           "IHNvdXJjZSBvZiB0aGUgZXZlbnQuAC4ARNUAAAAAEf////8BAf////8AAAAANWCJCgIAAAAAAAoAAABT" +
           "b3VyY2VOYW1lAQHWAAMAAAAAKQAAAEEgZGVzY3JpcHRpb24gb2YgdGhlIHNvdXJjZSBvZiB0aGUgZXZl" +
           "bnQuAC4ARNYAAAAADP////8BAf////8AAAAANWCJCgIAAAAAAAQAAABUaW1lAQHXAAMAAAAAGAAAAFdo" +
           "ZW4gdGhlIGV2ZW50IG9jY3VycmVkLgAuAETXAAAAAQAmAf////8BAf////8AAAAANWCJCgIAAAAAAAsA" +
           "AABSZWNlaXZlVGltZQEB2AADAAAAAD4AAABXaGVuIHRoZSBzZXJ2ZXIgcmVjZWl2ZWQgdGhlIGV2ZW50" +
           "IGZyb20gdGhlIHVuZGVybHlpbmcgc3lzdGVtLgAuAETYAAAAAQAmAf////8BAf////8AAAAANWCJCgIA" +
           "AAAAAAkAAABMb2NhbFRpbWUBAdkAAwAAAAA8AAAASW5mb3JtYXRpb24gYWJvdXQgdGhlIGxvY2FsIHRp" +
           "bWUgd2hlcmUgdGhlIGV2ZW50IG9yaWdpbmF0ZWQuAC4ARNkAAAABANAi/////wEB/////wAAAAA1YIkK" +
           "AgAAAAAABwAAAE1lc3NhZ2UBAdoAAwAAAAAlAAAAQSBsb2NhbGl6ZWQgZGVzY3JpcHRpb24gb2YgdGhl" +
           "IGV2ZW50LgAuAETaAAAAABX/////AQH/////AAAAADVgiQoCAAAAAAAIAAAAU2V2ZXJpdHkBAdsAAwAA" +
           "AAAhAAAASW5kaWNhdGVzIGhvdyB1cmdlbnQgYW4gZXZlbnQgaXMuAC4ARNsAAAAABf////8BAf////8A" +
           "AAAAFWCJCgIAAAAAABAAAABDb25kaXRpb25DbGFzc0lkAQHcAAAuAETcAAAAABH/////AQH/////AAAA" +
           "ABVgiQoCAAAAAAASAAAAQ29uZGl0aW9uQ2xhc3NOYW1lAQHdAAAuAETdAAAAABX/////AQH/////AAAA" +
           "ABVgiQoCAAAAAAANAAAAQ29uZGl0aW9uTmFtZQEB4AAALgBE4AAAAAAM/////wEB/////wAAAAAVYIkK" +
           "AgAAAAAACAAAAEJyYW5jaElkAQHhAAAuAEThAAAAABH/////AQH/////AAAAABVgiQoCAAAAAAAGAAAA" +
           "UmV0YWluAQHiAAAuAETiAAAAAAH/////AQH/////AAAAABVgiQoCAAAAAAAMAAAARW5hYmxlZFN0YXRl" +
           "AQHjAAAvAQAjI+MAAAAAFf////8BAQIAAAABACwjAAEB+wABACwjAAEBBAEBAAAAFWCJCgIAAAAAAAIA" +
           "AABJZAEB5AAALgBE5AAAAAAB/////wEB/////wAAAAAVYIkKAgAAAAAABwAAAFF1YWxpdHkBAewAAC8B" +
           "ACoj7AAAAAAT/////wEB/////wEAAAAVYIkKAgAAAAAADwAAAFNvdXJjZVRpbWVzdGFtcAEB7QAALgBE" +
           "7QAAAAEAJgH/////AQH/////AAAAABVgiQoCAAAAAAAMAAAATGFzdFNldmVyaXR5AQHuAAAvAQAqI+4A" +
           "AAAABf////8BAf////8BAAAAFWCJCgIAAAAAAA8AAABTb3VyY2VUaW1lc3RhbXABAe8AAC4ARO8AAAAB" +
           "ACYB/////wEB/////wAAAAAVYIkKAgAAAAAABwAAAENvbW1lbnQBAfAAAC8BACoj8AAAAAAV/////wEB" +
           "/////wEAAAAVYIkKAgAAAAAADwAAAFNvdXJjZVRpbWVzdGFtcAEB8QAALgBE8QAAAAEAJgH/////AQH/" +
           "////AAAAABVgiQoCAAAAAAAMAAAAQ2xpZW50VXNlcklkAQHyAAAuAETyAAAAAAz/////AQH/////AAAA" +
           "AARhggoEAAAAAAAHAAAARGlzYWJsZQEB8wAALwEARCPzAAAAAQEBAAAAAQD5CwABAPMKAAAAAARhggoE" +
           "AAAAAAAGAAAARW5hYmxlAQH0AAAvAQBDI/QAAAABAQEAAAABAPkLAAEA8woAAAAABGGCCgQAAAAAAAoA" +
           "AABBZGRDb21tZW50AQH1AAAvAQBFI/UAAAABAQEAAAABAPkLAAEADQsBAAAAFWCpCgIAAAAAAA4AAABJ" +
           "bnB1dEFyZ3VtZW50cwEB9gAALgBE9gAAAJYCAAAAAQAqAQFGAAAABwAAAEV2ZW50SWQAD/////8AAAAA" +
           "AwAAAAAoAAAAVGhlIGlkZW50aWZpZXIgZm9yIHRoZSBldmVudCB0byBjb21tZW50LgEAKgEBQgAAAAcA" +
           "AABDb21tZW50ABX/////AAAAAAMAAAAAJAAAAFRoZSBjb21tZW50IHRvIGFkZCB0byB0aGUgY29uZGl0" +
           "aW9uLgEAKAEBAAAAAQH/////AAAAABVgiQoCAAAAAAAKAAAAQWNrZWRTdGF0ZQEB+wAALwEAIyP7AAAA" +
           "ABX/////AQEBAAAAAQAsIwEBAeMAAQAAABVgiQoCAAAAAAACAAAASWQBAfwAAC4ARPwAAAAAAf////8B" +
           "Af////8AAAAABGGCCgQAAAAAAAsAAABBY2tub3dsZWRnZQEBDQEALwEAlyMNAQAAAQEBAAAAAQD5CwAB" +
           "APAiAQAAABVgqQoCAAAAAAAOAAAASW5wdXRBcmd1bWVudHMBAQ4BAC4ARA4BAACWAgAAAAEAKgEBRgAA" +
           "AAcAAABFdmVudElkAA//////AAAAAAMAAAAAKAAAAFRoZSBpZGVudGlmaWVyIGZvciB0aGUgZXZlbnQg" +
           "dG8gY29tbWVudC4BACoBAUIAAAAHAAAAQ29tbWVudAAV/////wAAAAADAAAAACQAAABUaGUgY29tbWVu" +
           "dCB0byBhZGQgdG8gdGhlIGNvbmRpdGlvbi4BACgBAQAAAAEB/////wAAAAAVYIkKAgAAAAEADQAAAEJs" +
           "b2NrUmVhY3Rpb24BAREBAC4ARBEBAAAAAf////8DA/////8AAAAAFWCJCgIAAAABAAwAAABTdG9wUmVh" +
           "Y3Rpb24BAR4BAC4ARB4BAAAAAf////8DA/////8AAAAA";
        #endregion
        #endif
        #endregion

        #region Public Properties
        #endregion

        #region Overridden Methods
        #endregion

        #region Private Fields
        #endregion
    }
    #endif
    #endregion

    #region VisionWarningConditionState Class
    #if (!OPCUA_EXCLUDE_VisionWarningConditionState)
    /// <summary>
    /// Stores an instance of the VisionWarningConditionType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class VisionWarningConditionState : VisionConditionState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public VisionWarningConditionState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.VisionWarningConditionType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);
        }

        #region Initialization String
        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAIgAAAFZpc2lvbldhcm5pbmdDb25kaXRpb25UeXBlSW5zdGFuY2UBAR8BAQEfAf////8aAAAANWCJ" +
           "CgIAAAAAAAcAAABFdmVudElkAQEgAQMAAAAAKwAAAEEgZ2xvYmFsbHkgdW5pcXVlIGlkZW50aWZpZXIg" +
           "Zm9yIHRoZSBldmVudC4ALgBEIAEAAAAP/////wEB/////wAAAAA1YIkKAgAAAAAACQAAAEV2ZW50VHlw" +
           "ZQEBIQEDAAAAACIAAABUaGUgaWRlbnRpZmllciBmb3IgdGhlIGV2ZW50IHR5cGUuAC4ARCEBAAAAEf//" +
           "//8BAf////8AAAAANWCJCgIAAAAAAAoAAABTb3VyY2VOb2RlAQEiAQMAAAAAGAAAAFRoZSBzb3VyY2Ug" +
           "b2YgdGhlIGV2ZW50LgAuAEQiAQAAABH/////AQH/////AAAAADVgiQoCAAAAAAAKAAAAU291cmNlTmFt" +
           "ZQEBIwEDAAAAACkAAABBIGRlc2NyaXB0aW9uIG9mIHRoZSBzb3VyY2Ugb2YgdGhlIGV2ZW50LgAuAEQj" +
           "AQAAAAz/////AQH/////AAAAADVgiQoCAAAAAAAEAAAAVGltZQEBJAEDAAAAABgAAABXaGVuIHRoZSBl" +
           "dmVudCBvY2N1cnJlZC4ALgBEJAEAAAEAJgH/////AQH/////AAAAADVgiQoCAAAAAAALAAAAUmVjZWl2" +
           "ZVRpbWUBASUBAwAAAAA+AAAAV2hlbiB0aGUgc2VydmVyIHJlY2VpdmVkIHRoZSBldmVudCBmcm9tIHRo" +
           "ZSB1bmRlcmx5aW5nIHN5c3RlbS4ALgBEJQEAAAEAJgH/////AQH/////AAAAADVgiQoCAAAAAAAJAAAA" +
           "TG9jYWxUaW1lAQEmAQMAAAAAPAAAAEluZm9ybWF0aW9uIGFib3V0IHRoZSBsb2NhbCB0aW1lIHdoZXJl" +
           "IHRoZSBldmVudCBvcmlnaW5hdGVkLgAuAEQmAQAAAQDQIv////8BAf////8AAAAANWCJCgIAAAAAAAcA" +
           "AABNZXNzYWdlAQEnAQMAAAAAJQAAAEEgbG9jYWxpemVkIGRlc2NyaXB0aW9uIG9mIHRoZSBldmVudC4A" +
           "LgBEJwEAAAAV/////wEB/////wAAAAA1YIkKAgAAAAAACAAAAFNldmVyaXR5AQEoAQMAAAAAIQAAAElu" +
           "ZGljYXRlcyBob3cgdXJnZW50IGFuIGV2ZW50IGlzLgAuAEQoAQAAAAX/////AQH/////AAAAABVgiQoC" +
           "AAAAAAAQAAAAQ29uZGl0aW9uQ2xhc3NJZAEBKQEALgBEKQEAAAAR/////wEB/////wAAAAAVYIkKAgAA" +
           "AAAAEgAAAENvbmRpdGlvbkNsYXNzTmFtZQEBKgEALgBEKgEAAAAV/////wEB/////wAAAAAVYIkKAgAA" +
           "AAAADQAAAENvbmRpdGlvbk5hbWUBAS0BAC4ARC0BAAAADP////8BAf////8AAAAAFWCJCgIAAAAAAAgA" +
           "AABCcmFuY2hJZAEBLgEALgBELgEAAAAR/////wEB/////wAAAAAVYIkKAgAAAAAABgAAAFJldGFpbgEB" +
           "LwEALgBELwEAAAAB/////wEB/////wAAAAAVYIkKAgAAAAAADAAAAEVuYWJsZWRTdGF0ZQEBMAEALwEA" +
           "IyMwAQAAABX/////AQECAAAAAQAsIwABAUgBAQAsIwABAVEBAQAAABVgiQoCAAAAAAACAAAASWQBATEB" +
           "AC4ARDEBAAAAAf////8BAf////8AAAAAFWCJCgIAAAAAAAcAAABRdWFsaXR5AQE5AQAvAQAqIzkBAAAA" +
           "E/////8BAf////8BAAAAFWCJCgIAAAAAAA8AAABTb3VyY2VUaW1lc3RhbXABAToBAC4ARDoBAAABACYB" +
           "/////wEB/////wAAAAAVYIkKAgAAAAAADAAAAExhc3RTZXZlcml0eQEBOwEALwEAKiM7AQAAAAX/////" +
           "AQH/////AQAAABVgiQoCAAAAAAAPAAAAU291cmNlVGltZXN0YW1wAQE8AQAuAEQ8AQAAAQAmAf////8B" +
           "Af////8AAAAAFWCJCgIAAAAAAAcAAABDb21tZW50AQE9AQAvAQAqIz0BAAAAFf////8BAf////8BAAAA" +
           "FWCJCgIAAAAAAA8AAABTb3VyY2VUaW1lc3RhbXABAT4BAC4ARD4BAAABACYB/////wEB/////wAAAAAV" +
           "YIkKAgAAAAAADAAAAENsaWVudFVzZXJJZAEBPwEALgBEPwEAAAAM/////wEB/////wAAAAAEYYIKBAAA" +
           "AAAABwAAAERpc2FibGUBAUABAC8BAEQjQAEAAAEBAQAAAAEA+QsAAQDzCgAAAAAEYYIKBAAAAAAABgAA" +
           "AEVuYWJsZQEBQQEALwEAQyNBAQAAAQEBAAAAAQD5CwABAPMKAAAAAARhggoEAAAAAAAKAAAAQWRkQ29t" +
           "bWVudAEBQgEALwEARSNCAQAAAQEBAAAAAQD5CwABAA0LAQAAABVgqQoCAAAAAAAOAAAASW5wdXRBcmd1" +
           "bWVudHMBAUMBAC4AREMBAACWAgAAAAEAKgEBRgAAAAcAAABFdmVudElkAA//////AAAAAAMAAAAAKAAA" +
           "AFRoZSBpZGVudGlmaWVyIGZvciB0aGUgZXZlbnQgdG8gY29tbWVudC4BACoBAUIAAAAHAAAAQ29tbWVu" +
           "dAAV/////wAAAAADAAAAACQAAABUaGUgY29tbWVudCB0byBhZGQgdG8gdGhlIGNvbmRpdGlvbi4BACgB" +
           "AQAAAAEB/////wAAAAAVYIkKAgAAAAAACgAAAEFja2VkU3RhdGUBAUgBAC8BACMjSAEAAAAV/////wEB" +
           "AQAAAAEALCMBAQEwAQEAAAAVYIkKAgAAAAAAAgAAAElkAQFJAQAuAERJAQAAAAH/////AQH/////AAAA" +
           "AARhggoEAAAAAAALAAAAQWNrbm93bGVkZ2UBAVoBAC8BAJcjWgEAAAEBAQAAAAEA+QsAAQDwIgEAAAAV" +
           "YKkKAgAAAAAADgAAAElucHV0QXJndW1lbnRzAQFbAQAuAERbAQAAlgIAAAABACoBAUYAAAAHAAAARXZl" +
           "bnRJZAAP/////wAAAAADAAAAACgAAABUaGUgaWRlbnRpZmllciBmb3IgdGhlIGV2ZW50IHRvIGNvbW1l" +
           "bnQuAQAqAQFCAAAABwAAAENvbW1lbnQAFf////8AAAAAAwAAAAAkAAAAVGhlIGNvbW1lbnQgdG8gYWRk" +
           "IHRvIHRoZSBjb25kaXRpb24uAQAoAQEAAAABAf////8AAAAAFWCJCgIAAAABAA0AAABCbG9ja1JlYWN0" +
           "aW9uAQFeAQAuAEReAQAAAAH/////AwP/////AAAAABVgiQoCAAAAAQAMAAAAU3RvcFJlYWN0aW9uAQFr" +
           "AQAuAERrAQAAAAH/////AwP/////AAAAAA==";
        #endregion
        #endif
        #endregion

        #region Public Properties
        #endregion

        #region Overridden Methods
        #endregion

        #region Private Fields
        #endregion
    }
    #endif
    #endregion

    #region EnterStepSequenceEventState Class
    #if (!OPCUA_EXCLUDE_EnterStepSequenceEventState)
    /// <summary>
    /// Stores an instance of the EnterStepSequenceEventType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class EnterStepSequenceEventState : BaseEventState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public EnterStepSequenceEventState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.EnterStepSequenceEventType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);
        }

        #region Initialization String
        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAIgAAAEVudGVyU3RlcFNlcXVlbmNlRXZlbnRUeXBlSW5zdGFuY2UBAWwBAQFsAf////8KAAAANWCJ" +
           "CgIAAAAAAAcAAABFdmVudElkAQFtAQMAAAAAKwAAAEEgZ2xvYmFsbHkgdW5pcXVlIGlkZW50aWZpZXIg" +
           "Zm9yIHRoZSBldmVudC4ALgBEbQEAAAAP/////wEB/////wAAAAA1YIkKAgAAAAAACQAAAEV2ZW50VHlw" +
           "ZQEBbgEDAAAAACIAAABUaGUgaWRlbnRpZmllciBmb3IgdGhlIGV2ZW50IHR5cGUuAC4ARG4BAAAAEf//" +
           "//8BAf////8AAAAANWCJCgIAAAAAAAoAAABTb3VyY2VOb2RlAQFvAQMAAAAAGAAAAFRoZSBzb3VyY2Ug" +
           "b2YgdGhlIGV2ZW50LgAuAERvAQAAABH/////AQH/////AAAAADVgiQoCAAAAAAAKAAAAU291cmNlTmFt" +
           "ZQEBcAEDAAAAACkAAABBIGRlc2NyaXB0aW9uIG9mIHRoZSBzb3VyY2Ugb2YgdGhlIGV2ZW50LgAuAERw" +
           "AQAAAAz/////AQH/////AAAAADVgiQoCAAAAAAAEAAAAVGltZQEBcQEDAAAAABgAAABXaGVuIHRoZSBl" +
           "dmVudCBvY2N1cnJlZC4ALgBEcQEAAAEAJgH/////AQH/////AAAAADVgiQoCAAAAAAALAAAAUmVjZWl2" +
           "ZVRpbWUBAXIBAwAAAAA+AAAAV2hlbiB0aGUgc2VydmVyIHJlY2VpdmVkIHRoZSBldmVudCBmcm9tIHRo" +
           "ZSB1bmRlcmx5aW5nIHN5c3RlbS4ALgBEcgEAAAEAJgH/////AQH/////AAAAADVgiQoCAAAAAAAJAAAA" +
           "TG9jYWxUaW1lAQFzAQMAAAAAPAAAAEluZm9ybWF0aW9uIGFib3V0IHRoZSBsb2NhbCB0aW1lIHdoZXJl" +
           "IHRoZSBldmVudCBvcmlnaW5hdGVkLgAuAERzAQAAAQDQIv////8BAf////8AAAAANWCJCgIAAAAAAAcA" +
           "AABNZXNzYWdlAQF0AQMAAAAAJQAAAEEgbG9jYWxpemVkIGRlc2NyaXB0aW9uIG9mIHRoZSBldmVudC4A" +
           "LgBEdAEAAAAV/////wEB/////wAAAAA1YIkKAgAAAAAACAAAAFNldmVyaXR5AQF1AQMAAAAAIQAAAElu" +
           "ZGljYXRlcyBob3cgdXJnZW50IGFuIGV2ZW50IGlzLgAuAER1AQAAAAX/////AQH/////AAAAABVgiQoC" +
           "AAAAAQAFAAAAU3RlcHMBAXYBAC4ARHYBAAAABv////8DA/////8AAAAA";
        #endregion
        #endif
        #endregion

        #region Public Properties
        /// <summary>
        /// A description for the Steps Property.
        /// </summary>
        public PropertyState<int> Steps
        {
            get
            {
                return m_steps;
            }

            set
            {
                if (!Object.ReferenceEquals(m_steps, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_steps = value;
            }
        }
        #endregion

        #region Overridden Methods
        /// <summary>
        /// Populates a list with the children that belong to the node.
        /// </summary>
        /// <param name="context">The context for the system being accessed.</param>
        /// <param name="children">The list of children to populate.</param>
        public override void GetChildren(
            ISystemContext context,
            IList<BaseInstanceState> children)
        {
            if (m_steps != null)
            {
                children.Add(m_steps);
            }

            base.GetChildren(context, children);
        }

        /// <summary>
        /// Finds the child with the specified browse name.
        /// </summary>
        protected override BaseInstanceState FindChild(
            ISystemContext context,
            QualifiedName browseName,
            bool createOrReplace,
            BaseInstanceState replacement)
        {
            if (QualifiedName.IsNull(browseName))
            {
                return null;
            }

            BaseInstanceState instance = null;

            switch (browseName.Name)
            {
                case Prefix2.BrowseNames.Steps:
                {
                    if (createOrReplace)
                    {
                        if (Steps == null)
                        {
                            if (replacement == null)
                            {
                                Steps = new PropertyState<int>(this);
                            }
                            else
                            {
                                Steps = (PropertyState<int>)replacement;
                            }
                        }
                    }

                    instance = Steps;
                    break;
                }
            }

            if (instance != null)
            {
                return instance;
            }

            return base.FindChild(context, browseName, createOrReplace, replacement);
        }
        #endregion

        #region Private Fields
        private PropertyState<int> m_steps;
        #endregion
    }
    #endif
    #endregion

    #region JobStartedEventState Class
    #if (!OPCUA_EXCLUDE_JobStartedEventState)
    /// <summary>
    /// Stores an instance of the JobStartedEventType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class JobStartedEventState : BaseEventState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public JobStartedEventState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.JobStartedEventType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);
        }

        #region Initialization String
        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAGwAAAEpvYlN0YXJ0ZWRFdmVudFR5cGVJbnN0YW5jZQEBdwEBAXcB/////woAAAA1YIkKAgAAAAAA" +
           "BwAAAEV2ZW50SWQBAXgBAwAAAAArAAAAQSBnbG9iYWxseSB1bmlxdWUgaWRlbnRpZmllciBmb3IgdGhl" +
           "IGV2ZW50LgAuAER4AQAAAA//////AQH/////AAAAADVgiQoCAAAAAAAJAAAARXZlbnRUeXBlAQF5AQMA" +
           "AAAAIgAAAFRoZSBpZGVudGlmaWVyIGZvciB0aGUgZXZlbnQgdHlwZS4ALgBEeQEAAAAR/////wEB////" +
           "/wAAAAA1YIkKAgAAAAAACgAAAFNvdXJjZU5vZGUBAXoBAwAAAAAYAAAAVGhlIHNvdXJjZSBvZiB0aGUg" +
           "ZXZlbnQuAC4ARHoBAAAAEf////8BAf////8AAAAANWCJCgIAAAAAAAoAAABTb3VyY2VOYW1lAQF7AQMA" +
           "AAAAKQAAAEEgZGVzY3JpcHRpb24gb2YgdGhlIHNvdXJjZSBvZiB0aGUgZXZlbnQuAC4ARHsBAAAADP//" +
           "//8BAf////8AAAAANWCJCgIAAAAAAAQAAABUaW1lAQF8AQMAAAAAGAAAAFdoZW4gdGhlIGV2ZW50IG9j" +
           "Y3VycmVkLgAuAER8AQAAAQAmAf////8BAf////8AAAAANWCJCgIAAAAAAAsAAABSZWNlaXZlVGltZQEB" +
           "fQEDAAAAAD4AAABXaGVuIHRoZSBzZXJ2ZXIgcmVjZWl2ZWQgdGhlIGV2ZW50IGZyb20gdGhlIHVuZGVy" +
           "bHlpbmcgc3lzdGVtLgAuAER9AQAAAQAmAf////8BAf////8AAAAANWCJCgIAAAAAAAkAAABMb2NhbFRp" +
           "bWUBAX4BAwAAAAA8AAAASW5mb3JtYXRpb24gYWJvdXQgdGhlIGxvY2FsIHRpbWUgd2hlcmUgdGhlIGV2" +
           "ZW50IG9yaWdpbmF0ZWQuAC4ARH4BAAABANAi/////wEB/////wAAAAA1YIkKAgAAAAAABwAAAE1lc3Nh" +
           "Z2UBAX8BAwAAAAAlAAAAQSBsb2NhbGl6ZWQgZGVzY3JpcHRpb24gb2YgdGhlIGV2ZW50LgAuAER/AQAA" +
           "ABX/////AQH/////AAAAADVgiQoCAAAAAAAIAAAAU2V2ZXJpdHkBAYABAwAAAAAhAAAASW5kaWNhdGVz" +
           "IGhvdyB1cmdlbnQgYW4gZXZlbnQgaXMuAC4ARIABAAAABf////8BAf////8AAAAAFWCpCgIAAAABAAUA" +
           "AABKb2JJZAEBgQEALgBEgQEAABYBAaITAmQAAAA8Sm9iSWREYXRhVHlwZSB4bWxucz0iaHR0cDovL29w" +
           "Y2ZvdW5kYXRpb24ub3JnL1VBL01hY2hpbmVWaXNpb24vVHlwZXMueHNkIj48SWQ+PC9JZD48L0pvYklk" +
           "RGF0YVR5cGU+AQEPAP////8DA/////8AAAAA";
        #endregion
        #endif
        #endregion

        #region Public Properties
        /// <summary>
        /// A description for the JobId Property.
        /// </summary>
        public PropertyState<JobIdDataType> JobId
        {
            get
            {
                return m_jobId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_jobId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_jobId = value;
            }
        }
        #endregion

        #region Overridden Methods
        /// <summary>
        /// Populates a list with the children that belong to the node.
        /// </summary>
        /// <param name="context">The context for the system being accessed.</param>
        /// <param name="children">The list of children to populate.</param>
        public override void GetChildren(
            ISystemContext context,
            IList<BaseInstanceState> children)
        {
            if (m_jobId != null)
            {
                children.Add(m_jobId);
            }

            base.GetChildren(context, children);
        }

        /// <summary>
        /// Finds the child with the specified browse name.
        /// </summary>
        protected override BaseInstanceState FindChild(
            ISystemContext context,
            QualifiedName browseName,
            bool createOrReplace,
            BaseInstanceState replacement)
        {
            if (QualifiedName.IsNull(browseName))
            {
                return null;
            }

            BaseInstanceState instance = null;

            switch (browseName.Name)
            {
                case Prefix2.BrowseNames.JobId:
                {
                    if (createOrReplace)
                    {
                        if (JobId == null)
                        {
                            if (replacement == null)
                            {
                                JobId = new PropertyState<JobIdDataType>(this);
                            }
                            else
                            {
                                JobId = (PropertyState<JobIdDataType>)replacement;
                            }
                        }
                    }

                    instance = JobId;
                    break;
                }
            }

            if (instance != null)
            {
                return instance;
            }

            return base.FindChild(context, browseName, createOrReplace, replacement);
        }
        #endregion

        #region Private Fields
        private PropertyState<JobIdDataType> m_jobId;
        #endregion
    }
    #endif
    #endregion

    #region LeaveStepSequenceEventState Class
    #if (!OPCUA_EXCLUDE_LeaveStepSequenceEventState)
    /// <summary>
    /// Stores an instance of the LeaveStepSequenceEventType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class LeaveStepSequenceEventState : BaseEventState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public LeaveStepSequenceEventState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.LeaveStepSequenceEventType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);
        }

        #region Initialization String
        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAIgAAAExlYXZlU3RlcFNlcXVlbmNlRXZlbnRUeXBlSW5zdGFuY2UBAYIBAQGCAf////8JAAAANWCJ" +
           "CgIAAAAAAAcAAABFdmVudElkAQGDAQMAAAAAKwAAAEEgZ2xvYmFsbHkgdW5pcXVlIGlkZW50aWZpZXIg" +
           "Zm9yIHRoZSBldmVudC4ALgBEgwEAAAAP/////wEB/////wAAAAA1YIkKAgAAAAAACQAAAEV2ZW50VHlw" +
           "ZQEBhAEDAAAAACIAAABUaGUgaWRlbnRpZmllciBmb3IgdGhlIGV2ZW50IHR5cGUuAC4ARIQBAAAAEf//" +
           "//8BAf////8AAAAANWCJCgIAAAAAAAoAAABTb3VyY2VOb2RlAQGFAQMAAAAAGAAAAFRoZSBzb3VyY2Ug" +
           "b2YgdGhlIGV2ZW50LgAuAESFAQAAABH/////AQH/////AAAAADVgiQoCAAAAAAAKAAAAU291cmNlTmFt" +
           "ZQEBhgEDAAAAACkAAABBIGRlc2NyaXB0aW9uIG9mIHRoZSBzb3VyY2Ugb2YgdGhlIGV2ZW50LgAuAESG" +
           "AQAAAAz/////AQH/////AAAAADVgiQoCAAAAAAAEAAAAVGltZQEBhwEDAAAAABgAAABXaGVuIHRoZSBl" +
           "dmVudCBvY2N1cnJlZC4ALgBEhwEAAAEAJgH/////AQH/////AAAAADVgiQoCAAAAAAALAAAAUmVjZWl2" +
           "ZVRpbWUBAYgBAwAAAAA+AAAAV2hlbiB0aGUgc2VydmVyIHJlY2VpdmVkIHRoZSBldmVudCBmcm9tIHRo" +
           "ZSB1bmRlcmx5aW5nIHN5c3RlbS4ALgBEiAEAAAEAJgH/////AQH/////AAAAADVgiQoCAAAAAAAJAAAA" +
           "TG9jYWxUaW1lAQGJAQMAAAAAPAAAAEluZm9ybWF0aW9uIGFib3V0IHRoZSBsb2NhbCB0aW1lIHdoZXJl" +
           "IHRoZSBldmVudCBvcmlnaW5hdGVkLgAuAESJAQAAAQDQIv////8BAf////8AAAAANWCJCgIAAAAAAAcA" +
           "AABNZXNzYWdlAQGKAQMAAAAAJQAAAEEgbG9jYWxpemVkIGRlc2NyaXB0aW9uIG9mIHRoZSBldmVudC4A" +
           "LgBEigEAAAAV/////wEB/////wAAAAA1YIkKAgAAAAAACAAAAFNldmVyaXR5AQGLAQMAAAAAIQAAAElu" +
           "ZGljYXRlcyBob3cgdXJnZW50IGFuIGV2ZW50IGlzLgAuAESLAQAAAAX/////AQH/////AAAAAA==";
        #endregion
        #endif
        #endregion

        #region Public Properties
        #endregion

        #region Overridden Methods
        #endregion

        #region Private Fields
        #endregion
    }
    #endif
    #endregion

    #region NextStepEventState Class
    #if (!OPCUA_EXCLUDE_NextStepEventState)
    /// <summary>
    /// Stores an instance of the NextStepEventType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class NextStepEventState : BaseEventState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public NextStepEventState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.NextStepEventType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);
        }

        #region Initialization String
        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAGQAAAE5leHRTdGVwRXZlbnRUeXBlSW5zdGFuY2UBAYwBAQGMAf////8KAAAANWCJCgIAAAAAAAcA" +
           "AABFdmVudElkAQGNAQMAAAAAKwAAAEEgZ2xvYmFsbHkgdW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoZSBl" +
           "dmVudC4ALgBEjQEAAAAP/////wEB/////wAAAAA1YIkKAgAAAAAACQAAAEV2ZW50VHlwZQEBjgEDAAAA" +
           "ACIAAABUaGUgaWRlbnRpZmllciBmb3IgdGhlIGV2ZW50IHR5cGUuAC4ARI4BAAAAEf////8BAf////8A" +
           "AAAANWCJCgIAAAAAAAoAAABTb3VyY2VOb2RlAQGPAQMAAAAAGAAAAFRoZSBzb3VyY2Ugb2YgdGhlIGV2" +
           "ZW50LgAuAESPAQAAABH/////AQH/////AAAAADVgiQoCAAAAAAAKAAAAU291cmNlTmFtZQEBkAEDAAAA" +
           "ACkAAABBIGRlc2NyaXB0aW9uIG9mIHRoZSBzb3VyY2Ugb2YgdGhlIGV2ZW50LgAuAESQAQAAAAz/////" +
           "AQH/////AAAAADVgiQoCAAAAAAAEAAAAVGltZQEBkQEDAAAAABgAAABXaGVuIHRoZSBldmVudCBvY2N1" +
           "cnJlZC4ALgBEkQEAAAEAJgH/////AQH/////AAAAADVgiQoCAAAAAAALAAAAUmVjZWl2ZVRpbWUBAZIB" +
           "AwAAAAA+AAAAV2hlbiB0aGUgc2VydmVyIHJlY2VpdmVkIHRoZSBldmVudCBmcm9tIHRoZSB1bmRlcmx5" +
           "aW5nIHN5c3RlbS4ALgBEkgEAAAEAJgH/////AQH/////AAAAADVgiQoCAAAAAAAJAAAATG9jYWxUaW1l" +
           "AQGTAQMAAAAAPAAAAEluZm9ybWF0aW9uIGFib3V0IHRoZSBsb2NhbCB0aW1lIHdoZXJlIHRoZSBldmVu" +
           "dCBvcmlnaW5hdGVkLgAuAESTAQAAAQDQIv////8BAf////8AAAAANWCJCgIAAAAAAAcAAABNZXNzYWdl" +
           "AQGUAQMAAAAAJQAAAEEgbG9jYWxpemVkIGRlc2NyaXB0aW9uIG9mIHRoZSBldmVudC4ALgBElAEAAAAV" +
           "/////wEB/////wAAAAA1YIkKAgAAAAAACAAAAFNldmVyaXR5AQGVAQMAAAAAIQAAAEluZGljYXRlcyBo" +
           "b3cgdXJnZW50IGFuIGV2ZW50IGlzLgAuAESVAQAAAAX/////AQH/////AAAAABVgiQoCAAAAAQAEAAAA" +
           "U3RlcAEBlgEALgBElgEAAAAG/////wMD/////wAAAAA=";
        #endregion
        #endif
        #endregion

        #region Public Properties
        /// <summary>
        /// A description for the Step Property.
        /// </summary>
        public PropertyState<int> Step
        {
            get
            {
                return m_step;
            }

            set
            {
                if (!Object.ReferenceEquals(m_step, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_step = value;
            }
        }
        #endregion

        #region Overridden Methods
        /// <summary>
        /// Populates a list with the children that belong to the node.
        /// </summary>
        /// <param name="context">The context for the system being accessed.</param>
        /// <param name="children">The list of children to populate.</param>
        public override void GetChildren(
            ISystemContext context,
            IList<BaseInstanceState> children)
        {
            if (m_step != null)
            {
                children.Add(m_step);
            }

            base.GetChildren(context, children);
        }

        /// <summary>
        /// Finds the child with the specified browse name.
        /// </summary>
        protected override BaseInstanceState FindChild(
            ISystemContext context,
            QualifiedName browseName,
            bool createOrReplace,
            BaseInstanceState replacement)
        {
            if (QualifiedName.IsNull(browseName))
            {
                return null;
            }

            BaseInstanceState instance = null;

            switch (browseName.Name)
            {
                case Prefix2.BrowseNames.Step:
                {
                    if (createOrReplace)
                    {
                        if (Step == null)
                        {
                            if (replacement == null)
                            {
                                Step = new PropertyState<int>(this);
                            }
                            else
                            {
                                Step = (PropertyState<int>)replacement;
                            }
                        }
                    }

                    instance = Step;
                    break;
                }
            }

            if (instance != null)
            {
                return instance;
            }

            return base.FindChild(context, browseName, createOrReplace, replacement);
        }
        #endregion

        #region Private Fields
        private PropertyState<int> m_step;
        #endregion
    }
    #endif
    #endregion

    #region ReadyEventState Class
    #if (!OPCUA_EXCLUDE_ReadyEventState)
    /// <summary>
    /// Stores an instance of the ReadyEventType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class ReadyEventState : BaseEventState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public ReadyEventState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.ReadyEventType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);
        }

        #region Initialization String
        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAFgAAAFJlYWR5RXZlbnRUeXBlSW5zdGFuY2UBAZcBAQGXAf////8KAAAANWCJCgIAAAAAAAcAAABF" +
           "dmVudElkAQGYAQMAAAAAKwAAAEEgZ2xvYmFsbHkgdW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoZSBldmVu" +
           "dC4ALgBEmAEAAAAP/////wEB/////wAAAAA1YIkKAgAAAAAACQAAAEV2ZW50VHlwZQEBmQEDAAAAACIA" +
           "AABUaGUgaWRlbnRpZmllciBmb3IgdGhlIGV2ZW50IHR5cGUuAC4ARJkBAAAAEf////8BAf////8AAAAA" +
           "NWCJCgIAAAAAAAoAAABTb3VyY2VOb2RlAQGaAQMAAAAAGAAAAFRoZSBzb3VyY2Ugb2YgdGhlIGV2ZW50" +
           "LgAuAESaAQAAABH/////AQH/////AAAAADVgiQoCAAAAAAAKAAAAU291cmNlTmFtZQEBmwEDAAAAACkA" +
           "AABBIGRlc2NyaXB0aW9uIG9mIHRoZSBzb3VyY2Ugb2YgdGhlIGV2ZW50LgAuAESbAQAAAAz/////AQH/" +
           "////AAAAADVgiQoCAAAAAAAEAAAAVGltZQEBnAEDAAAAABgAAABXaGVuIHRoZSBldmVudCBvY2N1cnJl" +
           "ZC4ALgBEnAEAAAEAJgH/////AQH/////AAAAADVgiQoCAAAAAAALAAAAUmVjZWl2ZVRpbWUBAZ0BAwAA" +
           "AAA+AAAAV2hlbiB0aGUgc2VydmVyIHJlY2VpdmVkIHRoZSBldmVudCBmcm9tIHRoZSB1bmRlcmx5aW5n" +
           "IHN5c3RlbS4ALgBEnQEAAAEAJgH/////AQH/////AAAAADVgiQoCAAAAAAAJAAAATG9jYWxUaW1lAQGe" +
           "AQMAAAAAPAAAAEluZm9ybWF0aW9uIGFib3V0IHRoZSBsb2NhbCB0aW1lIHdoZXJlIHRoZSBldmVudCBv" +
           "cmlnaW5hdGVkLgAuAESeAQAAAQDQIv////8BAf////8AAAAANWCJCgIAAAAAAAcAAABNZXNzYWdlAQGf" +
           "AQMAAAAAJQAAAEEgbG9jYWxpemVkIGRlc2NyaXB0aW9uIG9mIHRoZSBldmVudC4ALgBEnwEAAAAV////" +
           "/wEB/////wAAAAA1YIkKAgAAAAAACAAAAFNldmVyaXR5AQGgAQMAAAAAIQAAAEluZGljYXRlcyBob3cg" +
           "dXJnZW50IGFuIGV2ZW50IGlzLgAuAESgAQAAAAX/////AQH/////AAAAABVgqQoCAAAAAQAFAAAASm9i" +
           "SWQBAaEBAC4ARKEBAAAWAQGiEwJkAAAAPEpvYklkRGF0YVR5cGUgeG1sbnM9Imh0dHA6Ly9vcGNmb3Vu" +
           "ZGF0aW9uLm9yZy9VQS9NYWNoaW5lVmlzaW9uL1R5cGVzLnhzZCI+PElkPjwvSWQ+PC9Kb2JJZERhdGFU" +
           "eXBlPgEBDwD/////AwP/////AAAAAA==";
        #endregion
        #endif
        #endregion

        #region Public Properties
        /// <summary>
        /// A description for the JobId Property.
        /// </summary>
        public PropertyState<JobIdDataType> JobId
        {
            get
            {
                return m_jobId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_jobId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_jobId = value;
            }
        }
        #endregion

        #region Overridden Methods
        /// <summary>
        /// Populates a list with the children that belong to the node.
        /// </summary>
        /// <param name="context">The context for the system being accessed.</param>
        /// <param name="children">The list of children to populate.</param>
        public override void GetChildren(
            ISystemContext context,
            IList<BaseInstanceState> children)
        {
            if (m_jobId != null)
            {
                children.Add(m_jobId);
            }

            base.GetChildren(context, children);
        }

        /// <summary>
        /// Finds the child with the specified browse name.
        /// </summary>
        protected override BaseInstanceState FindChild(
            ISystemContext context,
            QualifiedName browseName,
            bool createOrReplace,
            BaseInstanceState replacement)
        {
            if (QualifiedName.IsNull(browseName))
            {
                return null;
            }

            BaseInstanceState instance = null;

            switch (browseName.Name)
            {
                case Prefix2.BrowseNames.JobId:
                {
                    if (createOrReplace)
                    {
                        if (JobId == null)
                        {
                            if (replacement == null)
                            {
                                JobId = new PropertyState<JobIdDataType>(this);
                            }
                            else
                            {
                                JobId = (PropertyState<JobIdDataType>)replacement;
                            }
                        }
                    }

                    instance = JobId;
                    break;
                }
            }

            if (instance != null)
            {
                return instance;
            }

            return base.FindChild(context, browseName, createOrReplace, replacement);
        }
        #endregion

        #region Private Fields
        private PropertyState<JobIdDataType> m_jobId;
        #endregion
    }
    #endif
    #endregion

    #region RecipePreparedEventState Class
    #if (!OPCUA_EXCLUDE_RecipePreparedEventState)
    /// <summary>
    /// Stores an instance of the RecipePreparedEventType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class RecipePreparedEventState : BaseEventState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public RecipePreparedEventState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.RecipePreparedEventType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);

            if (ExternalId != null)
            {
                ExternalId.Initialize(context, ExternalId_InitializationString);
            }

            if (ProductId != null)
            {
                ProductId.Initialize(context, ProductId_InitializationString);
            }
        }

        #region Initialization String
        private const string ExternalId_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYIkKAgAA" +
           "AAEACgAAAEV4dGVybmFsSWQBAawBAC4ARKwBAAABAQsA/////wMD/////wAAAAA=";

        private const string ProductId_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYKkKAgAA" +
           "AAEACQAAAFByb2R1Y3RJZAEBrgEALgBErgEAABYBAWkUAooAAAA8UHJvZHVjdElkRGF0YVR5cGUgeG1s" +
           "bnM9Imh0dHA6Ly9vcGNmb3VuZGF0aW9uLm9yZy9VQS9NYWNoaW5lVmlzaW9uL1R5cGVzLnhzZCI+PEVu" +
           "Y29kaW5nTWFzaz4wPC9FbmNvZGluZ01hc2s+PElkPjwvSWQ+PC9Qcm9kdWN0SWREYXRhVHlwZT4BARQA" +
           "/////wMD/////wAAAAA=";

        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAHwAAAFJlY2lwZVByZXBhcmVkRXZlbnRUeXBlSW5zdGFuY2UBAaIBAQGiAf////8MAAAANWCJCgIA" +
           "AAAAAAcAAABFdmVudElkAQGjAQMAAAAAKwAAAEEgZ2xvYmFsbHkgdW5pcXVlIGlkZW50aWZpZXIgZm9y" +
           "IHRoZSBldmVudC4ALgBEowEAAAAP/////wEB/////wAAAAA1YIkKAgAAAAAACQAAAEV2ZW50VHlwZQEB" +
           "pAEDAAAAACIAAABUaGUgaWRlbnRpZmllciBmb3IgdGhlIGV2ZW50IHR5cGUuAC4ARKQBAAAAEf////8B" +
           "Af////8AAAAANWCJCgIAAAAAAAoAAABTb3VyY2VOb2RlAQGlAQMAAAAAGAAAAFRoZSBzb3VyY2Ugb2Yg" +
           "dGhlIGV2ZW50LgAuAESlAQAAABH/////AQH/////AAAAADVgiQoCAAAAAAAKAAAAU291cmNlTmFtZQEB" +
           "pgEDAAAAACkAAABBIGRlc2NyaXB0aW9uIG9mIHRoZSBzb3VyY2Ugb2YgdGhlIGV2ZW50LgAuAESmAQAA" +
           "AAz/////AQH/////AAAAADVgiQoCAAAAAAAEAAAAVGltZQEBpwEDAAAAABgAAABXaGVuIHRoZSBldmVu" +
           "dCBvY2N1cnJlZC4ALgBEpwEAAAEAJgH/////AQH/////AAAAADVgiQoCAAAAAAALAAAAUmVjZWl2ZVRp" +
           "bWUBAagBAwAAAAA+AAAAV2hlbiB0aGUgc2VydmVyIHJlY2VpdmVkIHRoZSBldmVudCBmcm9tIHRoZSB1" +
           "bmRlcmx5aW5nIHN5c3RlbS4ALgBEqAEAAAEAJgH/////AQH/////AAAAADVgiQoCAAAAAAAJAAAATG9j" +
           "YWxUaW1lAQGpAQMAAAAAPAAAAEluZm9ybWF0aW9uIGFib3V0IHRoZSBsb2NhbCB0aW1lIHdoZXJlIHRo" +
           "ZSBldmVudCBvcmlnaW5hdGVkLgAuAESpAQAAAQDQIv////8BAf////8AAAAANWCJCgIAAAAAAAcAAABN" +
           "ZXNzYWdlAQGqAQMAAAAAJQAAAEEgbG9jYWxpemVkIGRlc2NyaXB0aW9uIG9mIHRoZSBldmVudC4ALgBE" +
           "qgEAAAAV/////wEB/////wAAAAA1YIkKAgAAAAAACAAAAFNldmVyaXR5AQGrAQMAAAAAIQAAAEluZGlj" +
           "YXRlcyBob3cgdXJnZW50IGFuIGV2ZW50IGlzLgAuAESrAQAAAAX/////AQH/////AAAAABVgiQoCAAAA" +
           "AQAKAAAARXh0ZXJuYWxJZAEBrAEALgBErAEAAAEBCwD/////AwP/////AAAAABVgiQoCAAAAAQAKAAAA" +
           "SW50ZXJuYWxJZAEBrQEALgBErQEAAAEBDAD/////AwP/////AAAAABVgqQoCAAAAAQAJAAAAUHJvZHVj" +
           "dElkAQGuAQAuAESuAQAAFgEBaRQCigAAADxQcm9kdWN0SWREYXRhVHlwZSB4bWxucz0iaHR0cDovL29w" +
           "Y2ZvdW5kYXRpb24ub3JnL1VBL01hY2hpbmVWaXNpb24vVHlwZXMueHNkIj48RW5jb2RpbmdNYXNrPjA8" +
           "L0VuY29kaW5nTWFzaz48SWQ+PC9JZD48L1Byb2R1Y3RJZERhdGFUeXBlPgEBFAD/////AwP/////AAAA" +
           "AA==";
        #endregion
        #endif
        #endregion

        #region Public Properties
        /// <summary>
        /// A description for the ExternalId Property.
        /// </summary>
        public PropertyState<RecipeIdExternalDataType> ExternalId
        {
            get
            {
                return m_externalId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_externalId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_externalId = value;
            }
        }

        /// <summary>
        /// A description for the InternalId Property.
        /// </summary>
        public PropertyState<RecipeIdInternalDataType> InternalId
        {
            get
            {
                return m_ınternalId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_ınternalId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_ınternalId = value;
            }
        }

        /// <summary>
        /// A description for the ProductId Property.
        /// </summary>
        public PropertyState<ProductIdDataType> ProductId
        {
            get
            {
                return m_productId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_productId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_productId = value;
            }
        }
        #endregion

        #region Overridden Methods
        /// <summary>
        /// Populates a list with the children that belong to the node.
        /// </summary>
        /// <param name="context">The context for the system being accessed.</param>
        /// <param name="children">The list of children to populate.</param>
        public override void GetChildren(
            ISystemContext context,
            IList<BaseInstanceState> children)
        {
            if (m_externalId != null)
            {
                children.Add(m_externalId);
            }

            if (m_ınternalId != null)
            {
                children.Add(m_ınternalId);
            }

            if (m_productId != null)
            {
                children.Add(m_productId);
            }

            base.GetChildren(context, children);
        }

        /// <summary>
        /// Finds the child with the specified browse name.
        /// </summary>
        protected override BaseInstanceState FindChild(
            ISystemContext context,
            QualifiedName browseName,
            bool createOrReplace,
            BaseInstanceState replacement)
        {
            if (QualifiedName.IsNull(browseName))
            {
                return null;
            }

            BaseInstanceState instance = null;

            switch (browseName.Name)
            {
                case Prefix2.BrowseNames.ExternalId:
                {
                    if (createOrReplace)
                    {
                        if (ExternalId == null)
                        {
                            if (replacement == null)
                            {
                                ExternalId = new PropertyState<RecipeIdExternalDataType>(this);
                            }
                            else
                            {
                                ExternalId = (PropertyState<RecipeIdExternalDataType>)replacement;
                            }
                        }
                    }

                    instance = ExternalId;
                    break;
                }

                case Prefix2.BrowseNames.InternalId:
                {
                    if (createOrReplace)
                    {
                        if (InternalId == null)
                        {
                            if (replacement == null)
                            {
                                InternalId = new PropertyState<RecipeIdInternalDataType>(this);
                            }
                            else
                            {
                                InternalId = (PropertyState<RecipeIdInternalDataType>)replacement;
                            }
                        }
                    }

                    instance = InternalId;
                    break;
                }

                case Prefix2.BrowseNames.ProductId:
                {
                    if (createOrReplace)
                    {
                        if (ProductId == null)
                        {
                            if (replacement == null)
                            {
                                ProductId = new PropertyState<ProductIdDataType>(this);
                            }
                            else
                            {
                                ProductId = (PropertyState<ProductIdDataType>)replacement;
                            }
                        }
                    }

                    instance = ProductId;
                    break;
                }
            }

            if (instance != null)
            {
                return instance;
            }

            return base.FindChild(context, browseName, createOrReplace, replacement);
        }
        #endregion

        #region Private Fields
        private PropertyState<RecipeIdExternalDataType> m_externalId;
        private PropertyState<RecipeIdInternalDataType> m_ınternalId;
        private PropertyState<ProductIdDataType> m_productId;
        #endregion
    }
    #endif
    #endregion

    #region ResultReadyEventState Class
    #if (!OPCUA_EXCLUDE_ResultReadyEventState)
    /// <summary>
    /// Stores an instance of the ResultReadyEventType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class ResultReadyEventState : BaseEventState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public ResultReadyEventState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.ResultReadyEventType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);

            if (ExternalConfigurationId != null)
            {
                ExternalConfigurationId.Initialize(context, ExternalConfigurationId_InitializationString);
            }

            if (ExternalRecipeId != null)
            {
                ExternalRecipeId.Initialize(context, ExternalRecipeId_InitializationString);
            }

            if (IsSimulated != null)
            {
                IsSimulated.Initialize(context, IsSimulated_InitializationString);
            }

            if (MeasId != null)
            {
                MeasId.Initialize(context, MeasId_InitializationString);
            }

            if (PartId != null)
            {
                PartId.Initialize(context, PartId_InitializationString);
            }

            if (ProcessingTimes != null)
            {
                ProcessingTimes.Initialize(context, ProcessingTimes_InitializationString);
            }

            if (ProductId != null)
            {
                ProductId.Initialize(context, ProductId_InitializationString);
            }

            if (ResultContent != null)
            {
                ResultContent.Initialize(context, ResultContent_InitializationString);
            }
        }

        #region Initialization String
        private const string ExternalConfigurationId_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYIkKAgAA" +
           "AAEAFwAAAEV4dGVybmFsQ29uZmlndXJhdGlvbklkAQG6AQAuAES6AQAAAQEKAP////8DA/////8AAAAA";

        private const string ExternalRecipeId_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYIkKAgAA" +
           "AAEAEAAAAEV4dGVybmFsUmVjaXBlSWQBAbsBAC4ARLsBAAABAQsA/////wMD/////wAAAAA=";

        private const string IsSimulated_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYIkKAgAA" +
           "AAEACwAAAElzU2ltdWxhdGVkAQG/AQAuAES/AQAAAAH/////AwP/////AAAAAA==";

        private const string MeasId_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYKkKAgAA" +
           "AAEABgAAAE1lYXNJZAEBwQEALgBEwQEAABYBAY8TAoQAAAA8TWVhc0lkRGF0YVR5cGUgeG1sbnM9Imh0" +
           "dHA6Ly9vcGNmb3VuZGF0aW9uLm9yZy9VQS9NYWNoaW5lVmlzaW9uL1R5cGVzLnhzZCI+PEVuY29kaW5n" +
           "TWFzaz4wPC9FbmNvZGluZ01hc2s+PElkPjwvSWQ+PC9NZWFzSWREYXRhVHlwZT4BARAA/////wMD////" +
           "/wAAAAA=";

        private const string PartId_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYKkKAgAA" +
           "AAEABgAAAFBhcnRJZAEBwgEALgBEwgEAABYBAZYTAoQAAAA8UGFydElkRGF0YVR5cGUgeG1sbnM9Imh0" +
           "dHA6Ly9vcGNmb3VuZGF0aW9uLm9yZy9VQS9NYWNoaW5lVmlzaW9uL1R5cGVzLnhzZCI+PEVuY29kaW5n" +
           "TWFzaz4wPC9FbmNvZGluZ01hc2s+PElkPjwvSWQ+PC9QYXJ0SWREYXRhVHlwZT4BAREA/////wMD////" +
           "/wAAAAA=";

        private const string ProcessingTimes_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYKkKAgAA" +
           "AAEADwAAAFByb2Nlc3NpbmdUaW1lcwEBwwEALgBEwwEAABYBAZkTAt8AAAA8UHJvY2Vzc2luZ1RpbWVz" +
           "RGF0YVR5cGUgeG1sbnM9Imh0dHA6Ly9vcGNmb3VuZGF0aW9uLm9yZy9VQS9NYWNoaW5lVmlzaW9uL1R5" +
           "cGVzLnhzZCI+PEVuY29kaW5nTWFzaz4wPC9FbmNvZGluZ01hc2s+PFN0YXJ0VGltZT4xOTAwLTAxLTAx" +
           "VDAwOjAwOjAwWjwvU3RhcnRUaW1lPjxFbmRUaW1lPjE5MDAtMDEtMDFUMDA6MDA6MDBaPC9FbmRUaW1l" +
           "PjwvUHJvY2Vzc2luZ1RpbWVzRGF0YVR5cGU+AQESAP////8DA/////8AAAAA";

        private const string ProductId_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYKkKAgAA" +
           "AAEACQAAAFByb2R1Y3RJZAEBxAEALgBExAEAABYBAWkUAooAAAA8UHJvZHVjdElkRGF0YVR5cGUgeG1s" +
           "bnM9Imh0dHA6Ly9vcGNmb3VuZGF0aW9uLm9yZy9VQS9NYWNoaW5lVmlzaW9uL1R5cGVzLnhzZCI+PEVu" +
           "Y29kaW5nTWFzaz4wPC9FbmNvZGluZ01hc2s+PElkPjwvSWQ+PC9Qcm9kdWN0SWREYXRhVHlwZT4BARQA" +
           "/////wMD/////wAAAAA=";

        private const string ResultContent_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8XYIkKAgAA" +
           "AAEADQAAAFJlc3VsdENvbnRlbnQBAcUBAC4ARMUBAAAAGAEAAAABAAAAAAAAAAMD/////wAAAAA=";

        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAHAAAAFJlc3VsdFJlYWR5RXZlbnRUeXBlSW5zdGFuY2UBAa8BAQGvAf////8YAAAANWCJCgIAAAAA" +
           "AAcAAABFdmVudElkAQGwAQMAAAAAKwAAAEEgZ2xvYmFsbHkgdW5pcXVlIGlkZW50aWZpZXIgZm9yIHRo" +
           "ZSBldmVudC4ALgBEsAEAAAAP/////wEB/////wAAAAA1YIkKAgAAAAAACQAAAEV2ZW50VHlwZQEBsQED" +
           "AAAAACIAAABUaGUgaWRlbnRpZmllciBmb3IgdGhlIGV2ZW50IHR5cGUuAC4ARLEBAAAAEf////8BAf//" +
           "//8AAAAANWCJCgIAAAAAAAoAAABTb3VyY2VOb2RlAQGyAQMAAAAAGAAAAFRoZSBzb3VyY2Ugb2YgdGhl" +
           "IGV2ZW50LgAuAESyAQAAABH/////AQH/////AAAAADVgiQoCAAAAAAAKAAAAU291cmNlTmFtZQEBswED" +
           "AAAAACkAAABBIGRlc2NyaXB0aW9uIG9mIHRoZSBzb3VyY2Ugb2YgdGhlIGV2ZW50LgAuAESzAQAAAAz/" +
           "////AQH/////AAAAADVgiQoCAAAAAAAEAAAAVGltZQEBtAEDAAAAABgAAABXaGVuIHRoZSBldmVudCBv" +
           "Y2N1cnJlZC4ALgBEtAEAAAEAJgH/////AQH/////AAAAADVgiQoCAAAAAAALAAAAUmVjZWl2ZVRpbWUB" +
           "AbUBAwAAAAA+AAAAV2hlbiB0aGUgc2VydmVyIHJlY2VpdmVkIHRoZSBldmVudCBmcm9tIHRoZSB1bmRl" +
           "cmx5aW5nIHN5c3RlbS4ALgBEtQEAAAEAJgH/////AQH/////AAAAADVgiQoCAAAAAAAJAAAATG9jYWxU" +
           "aW1lAQG2AQMAAAAAPAAAAEluZm9ybWF0aW9uIGFib3V0IHRoZSBsb2NhbCB0aW1lIHdoZXJlIHRoZSBl" +
           "dmVudCBvcmlnaW5hdGVkLgAuAES2AQAAAQDQIv////8BAf////8AAAAANWCJCgIAAAAAAAcAAABNZXNz" +
           "YWdlAQG3AQMAAAAAJQAAAEEgbG9jYWxpemVkIGRlc2NyaXB0aW9uIG9mIHRoZSBldmVudC4ALgBEtwEA" +
           "AAAV/////wEB/////wAAAAA1YIkKAgAAAAAACAAAAFNldmVyaXR5AQG4AQMAAAAAIQAAAEluZGljYXRl" +
           "cyBob3cgdXJnZW50IGFuIGV2ZW50IGlzLgAuAES4AQAAAAX/////AQH/////AAAAABVgiQoCAAAAAQAM" +
           "AAAAQ3JlYXRpb25UaW1lAQG5AQAuAES5AQAAAQAmAf////8DA/////8AAAAAFWCJCgIAAAABABcAAABF" +
           "eHRlcm5hbENvbmZpZ3VyYXRpb25JZAEBugEALgBEugEAAAEBCgD/////AwP/////AAAAABVgiQoCAAAA" +
           "AQAQAAAARXh0ZXJuYWxSZWNpcGVJZAEBuwEALgBEuwEAAAEBCwD/////AwP/////AAAAABVgiQoCAAAA" +
           "AQAXAAAASW50ZXJuYWxDb25maWd1cmF0aW9uSWQBAbwBAC4ARLwBAAABAQoA/////wMD/////wAAAAAV" +
           "YIkKAgAAAAEAEAAAAEludGVybmFsUmVjaXBlSWQBAb0BAC4ARL0BAAABAQwA/////wMD/////wAAAAAV" +
           "YIkKAgAAAAEACQAAAElzUGFydGlhbAEBvgEALgBEvgEAAAAB/////wMD/////wAAAAAVYIkKAgAAAAEA" +
           "CwAAAElzU2ltdWxhdGVkAQG/AQAuAES/AQAAAAH/////AwP/////AAAAABVgqQoCAAAAAQAFAAAASm9i" +
           "SWQBAcABAC4ARMABAAAWAQGiEwJkAAAAPEpvYklkRGF0YVR5cGUgeG1sbnM9Imh0dHA6Ly9vcGNmb3Vu" +
           "ZGF0aW9uLm9yZy9VQS9NYWNoaW5lVmlzaW9uL1R5cGVzLnhzZCI+PElkPjwvSWQ+PC9Kb2JJZERhdGFU" +
           "eXBlPgEBDwD/////AwP/////AAAAABVgqQoCAAAAAQAGAAAATWVhc0lkAQHBAQAuAETBAQAAFgEBjxMC" +
           "hAAAADxNZWFzSWREYXRhVHlwZSB4bWxucz0iaHR0cDovL29wY2ZvdW5kYXRpb24ub3JnL1VBL01hY2hp" +
           "bmVWaXNpb24vVHlwZXMueHNkIj48RW5jb2RpbmdNYXNrPjA8L0VuY29kaW5nTWFzaz48SWQ+PC9JZD48" +
           "L01lYXNJZERhdGFUeXBlPgEBEAD/////AwP/////AAAAABVgqQoCAAAAAQAGAAAAUGFydElkAQHCAQAu" +
           "AETCAQAAFgEBlhMChAAAADxQYXJ0SWREYXRhVHlwZSB4bWxucz0iaHR0cDovL29wY2ZvdW5kYXRpb24u" +
           "b3JnL1VBL01hY2hpbmVWaXNpb24vVHlwZXMueHNkIj48RW5jb2RpbmdNYXNrPjA8L0VuY29kaW5nTWFz" +
           "az48SWQ+PC9JZD48L1BhcnRJZERhdGFUeXBlPgEBEQD/////AwP/////AAAAABVgqQoCAAAAAQAPAAAA" +
           "UHJvY2Vzc2luZ1RpbWVzAQHDAQAuAETDAQAAFgEBmRMC3wAAADxQcm9jZXNzaW5nVGltZXNEYXRhVHlw" +
           "ZSB4bWxucz0iaHR0cDovL29wY2ZvdW5kYXRpb24ub3JnL1VBL01hY2hpbmVWaXNpb24vVHlwZXMueHNk" +
           "Ij48RW5jb2RpbmdNYXNrPjA8L0VuY29kaW5nTWFzaz48U3RhcnRUaW1lPjE5MDAtMDEtMDFUMDA6MDA6" +
           "MDBaPC9TdGFydFRpbWU+PEVuZFRpbWU+MTkwMC0wMS0wMVQwMDowMDowMFo8L0VuZFRpbWU+PC9Qcm9j" +
           "ZXNzaW5nVGltZXNEYXRhVHlwZT4BARIA/////wMD/////wAAAAAVYKkKAgAAAAEACQAAAFByb2R1Y3RJ" +
           "ZAEBxAEALgBExAEAABYBAWkUAooAAAA8UHJvZHVjdElkRGF0YVR5cGUgeG1sbnM9Imh0dHA6Ly9vcGNm" +
           "b3VuZGF0aW9uLm9yZy9VQS9NYWNoaW5lVmlzaW9uL1R5cGVzLnhzZCI+PEVuY29kaW5nTWFzaz4wPC9F" +
           "bmNvZGluZ01hc2s+PElkPjwvSWQ+PC9Qcm9kdWN0SWREYXRhVHlwZT4BARQA/////wMD/////wAAAAAX" +
           "YIkKAgAAAAEADQAAAFJlc3VsdENvbnRlbnQBAcUBAC4ARMUBAAAAGAEAAAABAAAAAAAAAAMD/////wAA" +
           "AAAVYKkKAgAAAAEACAAAAFJlc3VsdElkAQHGAQAuAETGAQAAFgEBmxQCagAAADxSZXN1bHRJZERhdGFU" +
           "eXBlIHhtbG5zPSJodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbi9UeXBlcy54" +
           "c2QiPjxJZD48L0lkPjwvUmVzdWx0SWREYXRhVHlwZT4BARcA/////wMD/////wAAAAAVYIkKAgAAAAEA" +
           "CwAAAFJlc3VsdFN0YXRlAQHHAQAuAETHAQAAAQEGAP////8DA/////8AAAAA";
        #endregion
        #endif
        #endregion

        #region Public Properties
        /// <summary>
        /// A description for the CreationTime Property.
        /// </summary>
        public PropertyState<DateTime> CreationTime
        {
            get
            {
                return m_creationTime;
            }

            set
            {
                if (!Object.ReferenceEquals(m_creationTime, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_creationTime = value;
            }
        }

        /// <summary>
        /// A description for the ExternalConfigurationId Property.
        /// </summary>
        public PropertyState<ConfigurationIdDataType> ExternalConfigurationId
        {
            get
            {
                return m_externalConfigurationId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_externalConfigurationId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_externalConfigurationId = value;
            }
        }

        /// <summary>
        /// A description for the ExternalRecipeId Property.
        /// </summary>
        public PropertyState<RecipeIdExternalDataType> ExternalRecipeId
        {
            get
            {
                return m_externalRecipeId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_externalRecipeId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_externalRecipeId = value;
            }
        }

        /// <summary>
        /// A description for the InternalConfigurationId Property.
        /// </summary>
        public PropertyState<ConfigurationIdDataType> InternalConfigurationId
        {
            get
            {
                return m_ınternalConfigurationId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_ınternalConfigurationId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_ınternalConfigurationId = value;
            }
        }

        /// <summary>
        /// A description for the InternalRecipeId Property.
        /// </summary>
        public PropertyState<RecipeIdInternalDataType> InternalRecipeId
        {
            get
            {
                return m_ınternalRecipeId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_ınternalRecipeId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_ınternalRecipeId = value;
            }
        }

        /// <summary>
        /// A description for the IsPartial Property.
        /// </summary>
        public PropertyState<bool> IsPartial
        {
            get
            {
                return m_ısPartial;
            }

            set
            {
                if (!Object.ReferenceEquals(m_ısPartial, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_ısPartial = value;
            }
        }

        /// <summary>
        /// A description for the IsSimulated Property.
        /// </summary>
        public PropertyState<bool> IsSimulated
        {
            get
            {
                return m_ısSimulated;
            }

            set
            {
                if (!Object.ReferenceEquals(m_ısSimulated, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_ısSimulated = value;
            }
        }

        /// <summary>
        /// A description for the JobId Property.
        /// </summary>
        public PropertyState<JobIdDataType> JobId
        {
            get
            {
                return m_jobId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_jobId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_jobId = value;
            }
        }

        /// <summary>
        /// A description for the MeasId Property.
        /// </summary>
        public PropertyState<MeasIdDataType> MeasId
        {
            get
            {
                return m_measId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_measId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_measId = value;
            }
        }

        /// <summary>
        /// A description for the PartId Property.
        /// </summary>
        public PropertyState<PartIdDataType> PartId
        {
            get
            {
                return m_partId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_partId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_partId = value;
            }
        }

        /// <summary>
        /// A description for the ProcessingTimes Property.
        /// </summary>
        public PropertyState<ProcessingTimesDataType> ProcessingTimes
        {
            get
            {
                return m_processingTimes;
            }

            set
            {
                if (!Object.ReferenceEquals(m_processingTimes, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_processingTimes = value;
            }
        }

        /// <summary>
        /// A description for the ProductId Property.
        /// </summary>
        public PropertyState<ProductIdDataType> ProductId
        {
            get
            {
                return m_productId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_productId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_productId = value;
            }
        }

        /// <summary>
        /// A description for the ResultContent Property.
        /// </summary>
        public PropertyState<object[]> ResultContent
        {
            get
            {
                return m_resultContent;
            }

            set
            {
                if (!Object.ReferenceEquals(m_resultContent, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_resultContent = value;
            }
        }

        /// <summary>
        /// A description for the ResultId Property.
        /// </summary>
        public PropertyState<ResultIdDataType> ResultId
        {
            get
            {
                return m_resultId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_resultId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_resultId = value;
            }
        }

        /// <summary>
        /// A description for the ResultState Property.
        /// </summary>
        public PropertyState<int> ResultState
        {
            get
            {
                return m_resultState;
            }

            set
            {
                if (!Object.ReferenceEquals(m_resultState, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_resultState = value;
            }
        }
        #endregion

        #region Overridden Methods
        /// <summary>
        /// Populates a list with the children that belong to the node.
        /// </summary>
        /// <param name="context">The context for the system being accessed.</param>
        /// <param name="children">The list of children to populate.</param>
        public override void GetChildren(
            ISystemContext context,
            IList<BaseInstanceState> children)
        {
            if (m_creationTime != null)
            {
                children.Add(m_creationTime);
            }

            if (m_externalConfigurationId != null)
            {
                children.Add(m_externalConfigurationId);
            }

            if (m_externalRecipeId != null)
            {
                children.Add(m_externalRecipeId);
            }

            if (m_ınternalConfigurationId != null)
            {
                children.Add(m_ınternalConfigurationId);
            }

            if (m_ınternalRecipeId != null)
            {
                children.Add(m_ınternalRecipeId);
            }

            if (m_ısPartial != null)
            {
                children.Add(m_ısPartial);
            }

            if (m_ısSimulated != null)
            {
                children.Add(m_ısSimulated);
            }

            if (m_jobId != null)
            {
                children.Add(m_jobId);
            }

            if (m_measId != null)
            {
                children.Add(m_measId);
            }

            if (m_partId != null)
            {
                children.Add(m_partId);
            }

            if (m_processingTimes != null)
            {
                children.Add(m_processingTimes);
            }

            if (m_productId != null)
            {
                children.Add(m_productId);
            }

            if (m_resultContent != null)
            {
                children.Add(m_resultContent);
            }

            if (m_resultId != null)
            {
                children.Add(m_resultId);
            }

            if (m_resultState != null)
            {
                children.Add(m_resultState);
            }

            base.GetChildren(context, children);
        }

        /// <summary>
        /// Finds the child with the specified browse name.
        /// </summary>
        protected override BaseInstanceState FindChild(
            ISystemContext context,
            QualifiedName browseName,
            bool createOrReplace,
            BaseInstanceState replacement)
        {
            if (QualifiedName.IsNull(browseName))
            {
                return null;
            }

            BaseInstanceState instance = null;

            switch (browseName.Name)
            {
                case Prefix2.BrowseNames.CreationTime:
                {
                    if (createOrReplace)
                    {
                        if (CreationTime == null)
                        {
                            if (replacement == null)
                            {
                                CreationTime = new PropertyState<DateTime>(this);
                            }
                            else
                            {
                                CreationTime = (PropertyState<DateTime>)replacement;
                            }
                        }
                    }

                    instance = CreationTime;
                    break;
                }

                case Prefix2.BrowseNames.ExternalConfigurationId:
                {
                    if (createOrReplace)
                    {
                        if (ExternalConfigurationId == null)
                        {
                            if (replacement == null)
                            {
                                ExternalConfigurationId = new PropertyState<ConfigurationIdDataType>(this);
                            }
                            else
                            {
                                ExternalConfigurationId = (PropertyState<ConfigurationIdDataType>)replacement;
                            }
                        }
                    }

                    instance = ExternalConfigurationId;
                    break;
                }

                case Prefix2.BrowseNames.ExternalRecipeId:
                {
                    if (createOrReplace)
                    {
                        if (ExternalRecipeId == null)
                        {
                            if (replacement == null)
                            {
                                ExternalRecipeId = new PropertyState<RecipeIdExternalDataType>(this);
                            }
                            else
                            {
                                ExternalRecipeId = (PropertyState<RecipeIdExternalDataType>)replacement;
                            }
                        }
                    }

                    instance = ExternalRecipeId;
                    break;
                }

                case Prefix2.BrowseNames.InternalConfigurationId:
                {
                    if (createOrReplace)
                    {
                        if (InternalConfigurationId == null)
                        {
                            if (replacement == null)
                            {
                                InternalConfigurationId = new PropertyState<ConfigurationIdDataType>(this);
                            }
                            else
                            {
                                InternalConfigurationId = (PropertyState<ConfigurationIdDataType>)replacement;
                            }
                        }
                    }

                    instance = InternalConfigurationId;
                    break;
                }

                case Prefix2.BrowseNames.InternalRecipeId:
                {
                    if (createOrReplace)
                    {
                        if (InternalRecipeId == null)
                        {
                            if (replacement == null)
                            {
                                InternalRecipeId = new PropertyState<RecipeIdInternalDataType>(this);
                            }
                            else
                            {
                                InternalRecipeId = (PropertyState<RecipeIdInternalDataType>)replacement;
                            }
                        }
                    }

                    instance = InternalRecipeId;
                    break;
                }

                case Prefix2.BrowseNames.IsPartial:
                {
                    if (createOrReplace)
                    {
                        if (IsPartial == null)
                        {
                            if (replacement == null)
                            {
                                IsPartial = new PropertyState<bool>(this);
                            }
                            else
                            {
                                IsPartial = (PropertyState<bool>)replacement;
                            }
                        }
                    }

                    instance = IsPartial;
                    break;
                }

                case Prefix2.BrowseNames.IsSimulated:
                {
                    if (createOrReplace)
                    {
                        if (IsSimulated == null)
                        {
                            if (replacement == null)
                            {
                                IsSimulated = new PropertyState<bool>(this);
                            }
                            else
                            {
                                IsSimulated = (PropertyState<bool>)replacement;
                            }
                        }
                    }

                    instance = IsSimulated;
                    break;
                }

                case Prefix2.BrowseNames.JobId:
                {
                    if (createOrReplace)
                    {
                        if (JobId == null)
                        {
                            if (replacement == null)
                            {
                                JobId = new PropertyState<JobIdDataType>(this);
                            }
                            else
                            {
                                JobId = (PropertyState<JobIdDataType>)replacement;
                            }
                        }
                    }

                    instance = JobId;
                    break;
                }

                case Prefix2.BrowseNames.MeasId:
                {
                    if (createOrReplace)
                    {
                        if (MeasId == null)
                        {
                            if (replacement == null)
                            {
                                MeasId = new PropertyState<MeasIdDataType>(this);
                            }
                            else
                            {
                                MeasId = (PropertyState<MeasIdDataType>)replacement;
                            }
                        }
                    }

                    instance = MeasId;
                    break;
                }

                case Prefix2.BrowseNames.PartId:
                {
                    if (createOrReplace)
                    {
                        if (PartId == null)
                        {
                            if (replacement == null)
                            {
                                PartId = new PropertyState<PartIdDataType>(this);
                            }
                            else
                            {
                                PartId = (PropertyState<PartIdDataType>)replacement;
                            }
                        }
                    }

                    instance = PartId;
                    break;
                }

                case Prefix2.BrowseNames.ProcessingTimes:
                {
                    if (createOrReplace)
                    {
                        if (ProcessingTimes == null)
                        {
                            if (replacement == null)
                            {
                                ProcessingTimes = new PropertyState<ProcessingTimesDataType>(this);
                            }
                            else
                            {
                                ProcessingTimes = (PropertyState<ProcessingTimesDataType>)replacement;
                            }
                        }
                    }

                    instance = ProcessingTimes;
                    break;
                }

                case Prefix2.BrowseNames.ProductId:
                {
                    if (createOrReplace)
                    {
                        if (ProductId == null)
                        {
                            if (replacement == null)
                            {
                                ProductId = new PropertyState<ProductIdDataType>(this);
                            }
                            else
                            {
                                ProductId = (PropertyState<ProductIdDataType>)replacement;
                            }
                        }
                    }

                    instance = ProductId;
                    break;
                }

                case Prefix2.BrowseNames.ResultContent:
                {
                    if (createOrReplace)
                    {
                        if (ResultContent == null)
                        {
                            if (replacement == null)
                            {
                                ResultContent = new PropertyState<object[]>(this);
                            }
                            else
                            {
                                ResultContent = (PropertyState<object[]>)replacement;
                            }
                        }
                    }

                    instance = ResultContent;
                    break;
                }

                case Prefix2.BrowseNames.ResultId:
                {
                    if (createOrReplace)
                    {
                        if (ResultId == null)
                        {
                            if (replacement == null)
                            {
                                ResultId = new PropertyState<ResultIdDataType>(this);
                            }
                            else
                            {
                                ResultId = (PropertyState<ResultIdDataType>)replacement;
                            }
                        }
                    }

                    instance = ResultId;
                    break;
                }

                case Prefix2.BrowseNames.ResultState:
                {
                    if (createOrReplace)
                    {
                        if (ResultState == null)
                        {
                            if (replacement == null)
                            {
                                ResultState = new PropertyState<int>(this);
                            }
                            else
                            {
                                ResultState = (PropertyState<int>)replacement;
                            }
                        }
                    }

                    instance = ResultState;
                    break;
                }
            }

            if (instance != null)
            {
                return instance;
            }

            return base.FindChild(context, browseName, createOrReplace, replacement);
        }
        #endregion

        #region Private Fields
        private PropertyState<DateTime> m_creationTime;
        private PropertyState<ConfigurationIdDataType> m_externalConfigurationId;
        private PropertyState<RecipeIdExternalDataType> m_externalRecipeId;
        private PropertyState<ConfigurationIdDataType> m_ınternalConfigurationId;
        private PropertyState<RecipeIdInternalDataType> m_ınternalRecipeId;
        private PropertyState<bool> m_ısPartial;
        private PropertyState<bool> m_ısSimulated;
        private PropertyState<JobIdDataType> m_jobId;
        private PropertyState<MeasIdDataType> m_measId;
        private PropertyState<PartIdDataType> m_partId;
        private PropertyState<ProcessingTimesDataType> m_processingTimes;
        private PropertyState<ProductIdDataType> m_productId;
        private PropertyState<object[]> m_resultContent;
        private PropertyState<ResultIdDataType> m_resultId;
        private PropertyState<int> m_resultState;
        #endregion
    }
    #endif
    #endregion

    #region ErrorEventState Class
    #if (!OPCUA_EXCLUDE_ErrorEventState)
    /// <summary>
    /// Stores an instance of the ErrorEventType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class ErrorEventState : TransitionEventState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public ErrorEventState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.ErrorEventType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);
        }

        #region Initialization String
        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAFgAAAEVycm9yRXZlbnRUeXBlSW5zdGFuY2UBAcgBAQHIAf////8MAAAANWCJCgIAAAAAAAcAAABF" +
           "dmVudElkAQHJAQMAAAAAKwAAAEEgZ2xvYmFsbHkgdW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoZSBldmVu" +
           "dC4ALgBEyQEAAAAP/////wEB/////wAAAAA1YIkKAgAAAAAACQAAAEV2ZW50VHlwZQEBygEDAAAAACIA" +
           "AABUaGUgaWRlbnRpZmllciBmb3IgdGhlIGV2ZW50IHR5cGUuAC4ARMoBAAAAEf////8BAf////8AAAAA" +
           "NWCJCgIAAAAAAAoAAABTb3VyY2VOb2RlAQHLAQMAAAAAGAAAAFRoZSBzb3VyY2Ugb2YgdGhlIGV2ZW50" +
           "LgAuAETLAQAAABH/////AQH/////AAAAADVgiQoCAAAAAAAKAAAAU291cmNlTmFtZQEBzAEDAAAAACkA" +
           "AABBIGRlc2NyaXB0aW9uIG9mIHRoZSBzb3VyY2Ugb2YgdGhlIGV2ZW50LgAuAETMAQAAAAz/////AQH/" +
           "////AAAAADVgiQoCAAAAAAAEAAAAVGltZQEBzQEDAAAAABgAAABXaGVuIHRoZSBldmVudCBvY2N1cnJl" +
           "ZC4ALgBEzQEAAAEAJgH/////AQH/////AAAAADVgiQoCAAAAAAALAAAAUmVjZWl2ZVRpbWUBAc4BAwAA" +
           "AAA+AAAAV2hlbiB0aGUgc2VydmVyIHJlY2VpdmVkIHRoZSBldmVudCBmcm9tIHRoZSB1bmRlcmx5aW5n" +
           "IHN5c3RlbS4ALgBEzgEAAAEAJgH/////AQH/////AAAAADVgiQoCAAAAAAAJAAAATG9jYWxUaW1lAQHP" +
           "AQMAAAAAPAAAAEluZm9ybWF0aW9uIGFib3V0IHRoZSBsb2NhbCB0aW1lIHdoZXJlIHRoZSBldmVudCBv" +
           "cmlnaW5hdGVkLgAuAETPAQAAAQDQIv////8BAf////8AAAAANWCJCgIAAAAAAAcAAABNZXNzYWdlAQHQ" +
           "AQMAAAAAJQAAAEEgbG9jYWxpemVkIGRlc2NyaXB0aW9uIG9mIHRoZSBldmVudC4ALgBE0AEAAAAV////" +
           "/wEB/////wAAAAA1YIkKAgAAAAAACAAAAFNldmVyaXR5AQHRAQMAAAAAIQAAAEluZGljYXRlcyBob3cg" +
           "dXJnZW50IGFuIGV2ZW50IGlzLgAuAETRAQAAAAX/////AQH/////AAAAABVgiQoCAAAAAAAKAAAAVHJh" +
           "bnNpdGlvbgEB0gEALwEAygrSAQAAABX/////AQH/////AQAAABVgiQoCAAAAAAACAAAASWQBAdMBAC4A" +
           "RNMBAAAAGP////8BAf////8AAAAAFWCJCgIAAAAAAAkAAABGcm9tU3RhdGUBAdgBAC8BAMMK2AEAAAAV" +
           "/////wEB/////wEAAAAVYIkKAgAAAAAAAgAAAElkAQHZAQAuAETZAQAAABj/////AQH/////AAAAABVg" +
           "iQoCAAAAAAAHAAAAVG9TdGF0ZQEB3QEALwEAwwrdAQAAABX/////AQH/////AQAAABVgiQoCAAAAAAAC" +
           "AAAASWQBAd4BAC4ARN4BAAAAGP////8BAf////8AAAAA";
        #endregion
        #endif
        #endregion

        #region Public Properties
        #endregion

        #region Overridden Methods
        #endregion

        #region Private Fields
        #endregion
    }
    #endif
    #endregion

    #region ErrorResolvedEventState Class
    #if (!OPCUA_EXCLUDE_ErrorResolvedEventState)
    /// <summary>
    /// Stores an instance of the ErrorResolvedEventType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class ErrorResolvedEventState : TransitionEventState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public ErrorResolvedEventState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.ErrorResolvedEventType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);
        }

        #region Initialization String
        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAHgAAAEVycm9yUmVzb2x2ZWRFdmVudFR5cGVJbnN0YW5jZQEB4gEBAeIB/////wwAAAA1YIkKAgAA" +
           "AAAABwAAAEV2ZW50SWQBAeMBAwAAAAArAAAAQSBnbG9iYWxseSB1bmlxdWUgaWRlbnRpZmllciBmb3Ig" +
           "dGhlIGV2ZW50LgAuAETjAQAAAA//////AQH/////AAAAADVgiQoCAAAAAAAJAAAARXZlbnRUeXBlAQHk" +
           "AQMAAAAAIgAAAFRoZSBpZGVudGlmaWVyIGZvciB0aGUgZXZlbnQgdHlwZS4ALgBE5AEAAAAR/////wEB" +
           "/////wAAAAA1YIkKAgAAAAAACgAAAFNvdXJjZU5vZGUBAeUBAwAAAAAYAAAAVGhlIHNvdXJjZSBvZiB0" +
           "aGUgZXZlbnQuAC4AROUBAAAAEf////8BAf////8AAAAANWCJCgIAAAAAAAoAAABTb3VyY2VOYW1lAQHm" +
           "AQMAAAAAKQAAAEEgZGVzY3JpcHRpb24gb2YgdGhlIHNvdXJjZSBvZiB0aGUgZXZlbnQuAC4AROYBAAAA" +
           "DP////8BAf////8AAAAANWCJCgIAAAAAAAQAAABUaW1lAQHnAQMAAAAAGAAAAFdoZW4gdGhlIGV2ZW50" +
           "IG9jY3VycmVkLgAuAETnAQAAAQAmAf////8BAf////8AAAAANWCJCgIAAAAAAAsAAABSZWNlaXZlVGlt" +
           "ZQEB6AEDAAAAAD4AAABXaGVuIHRoZSBzZXJ2ZXIgcmVjZWl2ZWQgdGhlIGV2ZW50IGZyb20gdGhlIHVu" +
           "ZGVybHlpbmcgc3lzdGVtLgAuAEToAQAAAQAmAf////8BAf////8AAAAANWCJCgIAAAAAAAkAAABMb2Nh" +
           "bFRpbWUBAekBAwAAAAA8AAAASW5mb3JtYXRpb24gYWJvdXQgdGhlIGxvY2FsIHRpbWUgd2hlcmUgdGhl" +
           "IGV2ZW50IG9yaWdpbmF0ZWQuAC4AROkBAAABANAi/////wEB/////wAAAAA1YIkKAgAAAAAABwAAAE1l" +
           "c3NhZ2UBAeoBAwAAAAAlAAAAQSBsb2NhbGl6ZWQgZGVzY3JpcHRpb24gb2YgdGhlIGV2ZW50LgAuAETq" +
           "AQAAABX/////AQH/////AAAAADVgiQoCAAAAAAAIAAAAU2V2ZXJpdHkBAesBAwAAAAAhAAAASW5kaWNh" +
           "dGVzIGhvdyB1cmdlbnQgYW4gZXZlbnQgaXMuAC4AROsBAAAABf////8BAf////8AAAAAFWCJCgIAAAAA" +
           "AAoAAABUcmFuc2l0aW9uAQHsAQAvAQDKCuwBAAAAFf////8BAf////8BAAAAFWCJCgIAAAAAAAIAAABJ" +
           "ZAEB7QEALgBE7QEAAAAY/////wEB/////wAAAAAVYIkKAgAAAAAACQAAAEZyb21TdGF0ZQEB8gEALwEA" +
           "wwryAQAAABX/////AQH/////AQAAABVgiQoCAAAAAAACAAAASWQBAfMBAC4ARPMBAAAAGP////8BAf//" +
           "//8AAAAAFWCJCgIAAAAAAAcAAABUb1N0YXRlAQH3AQAvAQDDCvcBAAAAFf////8BAf////8BAAAAFWCJ" +
           "CgIAAAAAAAIAAABJZAEB+AEALgBE+AEAAAAY/////wEB/////wAAAAA=";
        #endregion
        #endif
        #endregion

        #region Public Properties
        #endregion

        #region Overridden Methods
        #endregion

        #region Private Fields
        #endregion
    }
    #endif
    #endregion

    #region StateChangedEventState Class
    #if (!OPCUA_EXCLUDE_StateChangedEventState)
    /// <summary>
    /// Stores an instance of the StateChangedEventType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class StateChangedEventState : TransitionEventState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public StateChangedEventState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.StateChangedEventType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);
        }

        #region Initialization String
        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAHQAAAFN0YXRlQ2hhbmdlZEV2ZW50VHlwZUluc3RhbmNlAQH8AQEB/AH/////DAAAADVgiQoCAAAA" +
           "AAAHAAAARXZlbnRJZAEB/QEDAAAAACsAAABBIGdsb2JhbGx5IHVuaXF1ZSBpZGVudGlmaWVyIGZvciB0" +
           "aGUgZXZlbnQuAC4ARP0BAAAAD/////8BAf////8AAAAANWCJCgIAAAAAAAkAAABFdmVudFR5cGUBAf4B" +
           "AwAAAAAiAAAAVGhlIGlkZW50aWZpZXIgZm9yIHRoZSBldmVudCB0eXBlLgAuAET+AQAAABH/////AQH/" +
           "////AAAAADVgiQoCAAAAAAAKAAAAU291cmNlTm9kZQEB/wEDAAAAABgAAABUaGUgc291cmNlIG9mIHRo" +
           "ZSBldmVudC4ALgBE/wEAAAAR/////wEB/////wAAAAA1YIkKAgAAAAAACgAAAFNvdXJjZU5hbWUBAQAC" +
           "AwAAAAApAAAAQSBkZXNjcmlwdGlvbiBvZiB0aGUgc291cmNlIG9mIHRoZSBldmVudC4ALgBEAAIAAAAM" +
           "/////wEB/////wAAAAA1YIkKAgAAAAAABAAAAFRpbWUBAQECAwAAAAAYAAAAV2hlbiB0aGUgZXZlbnQg" +
           "b2NjdXJyZWQuAC4ARAECAAABACYB/////wEB/////wAAAAA1YIkKAgAAAAAACwAAAFJlY2VpdmVUaW1l" +
           "AQECAgMAAAAAPgAAAFdoZW4gdGhlIHNlcnZlciByZWNlaXZlZCB0aGUgZXZlbnQgZnJvbSB0aGUgdW5k" +
           "ZXJseWluZyBzeXN0ZW0uAC4ARAICAAABACYB/////wEB/////wAAAAA1YIkKAgAAAAAACQAAAExvY2Fs" +
           "VGltZQEBAwIDAAAAADwAAABJbmZvcm1hdGlvbiBhYm91dCB0aGUgbG9jYWwgdGltZSB3aGVyZSB0aGUg" +
           "ZXZlbnQgb3JpZ2luYXRlZC4ALgBEAwIAAAEA0CL/////AQH/////AAAAADVgiQoCAAAAAAAHAAAATWVz" +
           "c2FnZQEBBAIDAAAAACUAAABBIGxvY2FsaXplZCBkZXNjcmlwdGlvbiBvZiB0aGUgZXZlbnQuAC4ARAQC" +
           "AAAAFf////8BAf////8AAAAANWCJCgIAAAAAAAgAAABTZXZlcml0eQEBBQIDAAAAACEAAABJbmRpY2F0" +
           "ZXMgaG93IHVyZ2VudCBhbiBldmVudCBpcy4ALgBEBQIAAAAF/////wEB/////wAAAAAVYIkKAgAAAAAA" +
           "CgAAAFRyYW5zaXRpb24BAQYCAC8BAMoKBgIAAAAV/////wEB/////wEAAAAVYIkKAgAAAAAAAgAAAElk" +
           "AQEHAgAuAEQHAgAAABj/////AQH/////AAAAABVgiQoCAAAAAAAJAAAARnJvbVN0YXRlAQEMAgAvAQDD" +
           "CgwCAAAAFf////8BAf////8BAAAAFWCJCgIAAAAAAAIAAABJZAEBDQIALgBEDQIAAAAY/////wEB////" +
           "/wAAAAAVYIkKAgAAAAAABwAAAFRvU3RhdGUBARECAC8BAMMKEQIAAAAV/////wEB/////wEAAAAVYIkK" +
           "AgAAAAAAAgAAAElkAQESAgAuAEQSAgAAABj/////AQH/////AAAAAA==";
        #endregion
        #endif
        #endregion

        #region Public Properties
        #endregion

        #region Overridden Methods
        #endregion

        #region Private Fields
        #endregion
    }
    #endif
    #endregion

    #region VisionEventState Class
    #if (!OPCUA_EXCLUDE_VisionEventState)
    /// <summary>
    /// Stores an instance of the VisionEventType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class VisionEventState : BaseEventState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public VisionEventState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.VisionEventType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);

            if (CausePath != null)
            {
                CausePath.Initialize(context, CausePath_InitializationString);
            }

            if (ExternalConfigurationId != null)
            {
                ExternalConfigurationId.Initialize(context, ExternalConfigurationId_InitializationString);
            }

            if (ExternalRecipeId != null)
            {
                ExternalRecipeId.Initialize(context, ExternalRecipeId_InitializationString);
            }

            if (InternalConfigurationId != null)
            {
                InternalConfigurationId.Initialize(context, InternalConfigurationId_InitializationString);
            }

            if (InternalRecipeId != null)
            {
                InternalRecipeId.Initialize(context, InternalRecipeId_InitializationString);
            }

            if (JobId != null)
            {
                JobId.Initialize(context, JobId_InitializationString);
            }

            if (MeasId != null)
            {
                MeasId.Initialize(context, MeasId_InitializationString);
            }

            if (PartId != null)
            {
                PartId.Initialize(context, PartId_InitializationString);
            }

            if (ProductId != null)
            {
                ProductId.Initialize(context, ProductId_InitializationString);
            }

            if (ResultId != null)
            {
                ResultId.Initialize(context, ResultId_InitializationString);
            }
        }

        #region Initialization String
        private const string CausePath_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYIkKAgAA" +
           "AAEACQAAAENhdXNlUGF0aAEBIAIALgBEIAIAAAAM/////wMD/////wAAAAA=";

        private const string ExternalConfigurationId_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYIkKAgAA" +
           "AAEAFwAAAEV4dGVybmFsQ29uZmlndXJhdGlvbklkAQEhAgAuAEQhAgAAAQEKAP////8DA/////8AAAAA";

        private const string ExternalRecipeId_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYIkKAgAA" +
           "AAEAEAAAAEV4dGVybmFsUmVjaXBlSWQBASICAC4ARCICAAABAQsA/////wMD/////wAAAAA=";

        private const string InternalConfigurationId_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYIkKAgAA" +
           "AAEAFwAAAEludGVybmFsQ29uZmlndXJhdGlvbklkAQEjAgAuAEQjAgAAAQEKAP////8DA/////8AAAAA";

        private const string InternalRecipeId_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYIkKAgAA" +
           "AAEAEAAAAEludGVybmFsUmVjaXBlSWQBASQCAC4ARCQCAAABAQwA/////wMD/////wAAAAA=";

        private const string JobId_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYKkKAgAA" +
           "AAEABQAAAEpvYklkAQElAgAuAEQlAgAAFgEBohMCZAAAADxKb2JJZERhdGFUeXBlIHhtbG5zPSJodHRw" +
           "Oi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbi9UeXBlcy54c2QiPjxJZD48L0lkPjwv" +
           "Sm9iSWREYXRhVHlwZT4BAQ8A/////wMD/////wAAAAA=";

        private const string MeasId_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYKkKAgAA" +
           "AAEABgAAAE1lYXNJZAEBJgIALgBEJgIAABYBAY8TAoQAAAA8TWVhc0lkRGF0YVR5cGUgeG1sbnM9Imh0" +
           "dHA6Ly9vcGNmb3VuZGF0aW9uLm9yZy9VQS9NYWNoaW5lVmlzaW9uL1R5cGVzLnhzZCI+PEVuY29kaW5n" +
           "TWFzaz4wPC9FbmNvZGluZ01hc2s+PElkPjwvSWQ+PC9NZWFzSWREYXRhVHlwZT4BARAA/////wMD////" +
           "/wAAAAA=";

        private const string PartId_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYKkKAgAA" +
           "AAEABgAAAFBhcnRJZAEBJwIALgBEJwIAABYBAZYTAoQAAAA8UGFydElkRGF0YVR5cGUgeG1sbnM9Imh0" +
           "dHA6Ly9vcGNmb3VuZGF0aW9uLm9yZy9VQS9NYWNoaW5lVmlzaW9uL1R5cGVzLnhzZCI+PEVuY29kaW5n" +
           "TWFzaz4wPC9FbmNvZGluZ01hc2s+PElkPjwvSWQ+PC9QYXJ0SWREYXRhVHlwZT4BAREA/////wMD////" +
           "/wAAAAA=";

        private const string ProductId_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYKkKAgAA" +
           "AAEACQAAAFByb2R1Y3RJZAEBKAIALgBEKAIAABYBAWkUAooAAAA8UHJvZHVjdElkRGF0YVR5cGUgeG1s" +
           "bnM9Imh0dHA6Ly9vcGNmb3VuZGF0aW9uLm9yZy9VQS9NYWNoaW5lVmlzaW9uL1R5cGVzLnhzZCI+PEVu" +
           "Y29kaW5nTWFzaz4wPC9FbmNvZGluZ01hc2s+PElkPjwvSWQ+PC9Qcm9kdWN0SWREYXRhVHlwZT4BARQA" +
           "/////wMD/////wAAAAA=";

        private const string ResultId_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYKkKAgAA" +
           "AAEACAAAAFJlc3VsdElkAQEpAgAuAEQpAgAAFgEBmxQCagAAADxSZXN1bHRJZERhdGFUeXBlIHhtbG5z" +
           "PSJodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbi9UeXBlcy54c2QiPjxJZD48" +
           "L0lkPjwvUmVzdWx0SWREYXRhVHlwZT4BARcA/////wMD/////wAAAAA=";

        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAFwAAAFZpc2lvbkV2ZW50VHlwZUluc3RhbmNlAQEWAgEBFgL/////EwAAADVgiQoCAAAAAAAHAAAA" +
           "RXZlbnRJZAEBFwIDAAAAACsAAABBIGdsb2JhbGx5IHVuaXF1ZSBpZGVudGlmaWVyIGZvciB0aGUgZXZl" +
           "bnQuAC4ARBcCAAAAD/////8BAf////8AAAAANWCJCgIAAAAAAAkAAABFdmVudFR5cGUBARgCAwAAAAAi" +
           "AAAAVGhlIGlkZW50aWZpZXIgZm9yIHRoZSBldmVudCB0eXBlLgAuAEQYAgAAABH/////AQH/////AAAA" +
           "ADVgiQoCAAAAAAAKAAAAU291cmNlTm9kZQEBGQIDAAAAABgAAABUaGUgc291cmNlIG9mIHRoZSBldmVu" +
           "dC4ALgBEGQIAAAAR/////wEB/////wAAAAA1YIkKAgAAAAAACgAAAFNvdXJjZU5hbWUBARoCAwAAAAAp" +
           "AAAAQSBkZXNjcmlwdGlvbiBvZiB0aGUgc291cmNlIG9mIHRoZSBldmVudC4ALgBEGgIAAAAM/////wEB" +
           "/////wAAAAA1YIkKAgAAAAAABAAAAFRpbWUBARsCAwAAAAAYAAAAV2hlbiB0aGUgZXZlbnQgb2NjdXJy" +
           "ZWQuAC4ARBsCAAABACYB/////wEB/////wAAAAA1YIkKAgAAAAAACwAAAFJlY2VpdmVUaW1lAQEcAgMA" +
           "AAAAPgAAAFdoZW4gdGhlIHNlcnZlciByZWNlaXZlZCB0aGUgZXZlbnQgZnJvbSB0aGUgdW5kZXJseWlu" +
           "ZyBzeXN0ZW0uAC4ARBwCAAABACYB/////wEB/////wAAAAA1YIkKAgAAAAAACQAAAExvY2FsVGltZQEB" +
           "HQIDAAAAADwAAABJbmZvcm1hdGlvbiBhYm91dCB0aGUgbG9jYWwgdGltZSB3aGVyZSB0aGUgZXZlbnQg" +
           "b3JpZ2luYXRlZC4ALgBEHQIAAAEA0CL/////AQH/////AAAAADVgiQoCAAAAAAAHAAAATWVzc2FnZQEB" +
           "HgIDAAAAACUAAABBIGxvY2FsaXplZCBkZXNjcmlwdGlvbiBvZiB0aGUgZXZlbnQuAC4ARB4CAAAAFf//" +
           "//8BAf////8AAAAANWCJCgIAAAAAAAgAAABTZXZlcml0eQEBHwIDAAAAACEAAABJbmRpY2F0ZXMgaG93" +
           "IHVyZ2VudCBhbiBldmVudCBpcy4ALgBEHwIAAAAF/////wEB/////wAAAAAVYIkKAgAAAAEACQAAAENh" +
           "dXNlUGF0aAEBIAIALgBEIAIAAAAM/////wMD/////wAAAAAVYIkKAgAAAAEAFwAAAEV4dGVybmFsQ29u" +
           "ZmlndXJhdGlvbklkAQEhAgAuAEQhAgAAAQEKAP////8DA/////8AAAAAFWCJCgIAAAABABAAAABFeHRl" +
           "cm5hbFJlY2lwZUlkAQEiAgAuAEQiAgAAAQELAP////8DA/////8AAAAAFWCJCgIAAAABABcAAABJbnRl" +
           "cm5hbENvbmZpZ3VyYXRpb25JZAEBIwIALgBEIwIAAAEBCgD/////AwP/////AAAAABVgiQoCAAAAAQAQ" +
           "AAAASW50ZXJuYWxSZWNpcGVJZAEBJAIALgBEJAIAAAEBDAD/////AwP/////AAAAABVgqQoCAAAAAQAF" +
           "AAAASm9iSWQBASUCAC4ARCUCAAAWAQGiEwJkAAAAPEpvYklkRGF0YVR5cGUgeG1sbnM9Imh0dHA6Ly9v" +
           "cGNmb3VuZGF0aW9uLm9yZy9VQS9NYWNoaW5lVmlzaW9uL1R5cGVzLnhzZCI+PElkPjwvSWQ+PC9Kb2JJ" +
           "ZERhdGFUeXBlPgEBDwD/////AwP/////AAAAABVgqQoCAAAAAQAGAAAATWVhc0lkAQEmAgAuAEQmAgAA" +
           "FgEBjxMChAAAADxNZWFzSWREYXRhVHlwZSB4bWxucz0iaHR0cDovL29wY2ZvdW5kYXRpb24ub3JnL1VB" +
           "L01hY2hpbmVWaXNpb24vVHlwZXMueHNkIj48RW5jb2RpbmdNYXNrPjA8L0VuY29kaW5nTWFzaz48SWQ+" +
           "PC9JZD48L01lYXNJZERhdGFUeXBlPgEBEAD/////AwP/////AAAAABVgqQoCAAAAAQAGAAAAUGFydElk" +
           "AQEnAgAuAEQnAgAAFgEBlhMChAAAADxQYXJ0SWREYXRhVHlwZSB4bWxucz0iaHR0cDovL29wY2ZvdW5k" +
           "YXRpb24ub3JnL1VBL01hY2hpbmVWaXNpb24vVHlwZXMueHNkIj48RW5jb2RpbmdNYXNrPjA8L0VuY29k" +
           "aW5nTWFzaz48SWQ+PC9JZD48L1BhcnRJZERhdGFUeXBlPgEBEQD/////AwP/////AAAAABVgqQoCAAAA" +
           "AQAJAAAAUHJvZHVjdElkAQEoAgAuAEQoAgAAFgEBaRQCigAAADxQcm9kdWN0SWREYXRhVHlwZSB4bWxu" +
           "cz0iaHR0cDovL29wY2ZvdW5kYXRpb24ub3JnL1VBL01hY2hpbmVWaXNpb24vVHlwZXMueHNkIj48RW5j" +
           "b2RpbmdNYXNrPjA8L0VuY29kaW5nTWFzaz48SWQ+PC9JZD48L1Byb2R1Y3RJZERhdGFUeXBlPgEBFAD/" +
           "////AwP/////AAAAABVgqQoCAAAAAQAIAAAAUmVzdWx0SWQBASkCAC4ARCkCAAAWAQGbFAJqAAAAPFJl" +
           "c3VsdElkRGF0YVR5cGUgeG1sbnM9Imh0dHA6Ly9vcGNmb3VuZGF0aW9uLm9yZy9VQS9NYWNoaW5lVmlz" +
           "aW9uL1R5cGVzLnhzZCI+PElkPjwvSWQ+PC9SZXN1bHRJZERhdGFUeXBlPgEBFwD/////AwP/////AAAA" +
           "AA==";
        #endregion
        #endif
        #endregion

        #region Public Properties
        /// <summary>
        /// A description for the CausePath Property.
        /// </summary>
        public PropertyState<string> CausePath
        {
            get
            {
                return m_causePath;
            }

            set
            {
                if (!Object.ReferenceEquals(m_causePath, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_causePath = value;
            }
        }

        /// <summary>
        /// A description for the ExternalConfigurationId Property.
        /// </summary>
        public PropertyState<ConfigurationIdDataType> ExternalConfigurationId
        {
            get
            {
                return m_externalConfigurationId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_externalConfigurationId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_externalConfigurationId = value;
            }
        }

        /// <summary>
        /// A description for the ExternalRecipeId Property.
        /// </summary>
        public PropertyState<RecipeIdExternalDataType> ExternalRecipeId
        {
            get
            {
                return m_externalRecipeId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_externalRecipeId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_externalRecipeId = value;
            }
        }

        /// <summary>
        /// A description for the InternalConfigurationId Property.
        /// </summary>
        public PropertyState<ConfigurationIdDataType> InternalConfigurationId
        {
            get
            {
                return m_ınternalConfigurationId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_ınternalConfigurationId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_ınternalConfigurationId = value;
            }
        }

        /// <summary>
        /// A description for the InternalRecipeId Property.
        /// </summary>
        public PropertyState<RecipeIdInternalDataType> InternalRecipeId
        {
            get
            {
                return m_ınternalRecipeId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_ınternalRecipeId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_ınternalRecipeId = value;
            }
        }

        /// <summary>
        /// A description for the JobId Property.
        /// </summary>
        public PropertyState<JobIdDataType> JobId
        {
            get
            {
                return m_jobId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_jobId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_jobId = value;
            }
        }

        /// <summary>
        /// A description for the MeasId Property.
        /// </summary>
        public PropertyState<MeasIdDataType> MeasId
        {
            get
            {
                return m_measId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_measId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_measId = value;
            }
        }

        /// <summary>
        /// A description for the PartId Property.
        /// </summary>
        public PropertyState<PartIdDataType> PartId
        {
            get
            {
                return m_partId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_partId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_partId = value;
            }
        }

        /// <summary>
        /// A description for the ProductId Property.
        /// </summary>
        public PropertyState<ProductIdDataType> ProductId
        {
            get
            {
                return m_productId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_productId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_productId = value;
            }
        }

        /// <summary>
        /// A description for the ResultId Property.
        /// </summary>
        public PropertyState<ResultIdDataType> ResultId
        {
            get
            {
                return m_resultId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_resultId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_resultId = value;
            }
        }
        #endregion

        #region Overridden Methods
        /// <summary>
        /// Populates a list with the children that belong to the node.
        /// </summary>
        /// <param name="context">The context for the system being accessed.</param>
        /// <param name="children">The list of children to populate.</param>
        public override void GetChildren(
            ISystemContext context,
            IList<BaseInstanceState> children)
        {
            if (m_causePath != null)
            {
                children.Add(m_causePath);
            }

            if (m_externalConfigurationId != null)
            {
                children.Add(m_externalConfigurationId);
            }

            if (m_externalRecipeId != null)
            {
                children.Add(m_externalRecipeId);
            }

            if (m_ınternalConfigurationId != null)
            {
                children.Add(m_ınternalConfigurationId);
            }

            if (m_ınternalRecipeId != null)
            {
                children.Add(m_ınternalRecipeId);
            }

            if (m_jobId != null)
            {
                children.Add(m_jobId);
            }

            if (m_measId != null)
            {
                children.Add(m_measId);
            }

            if (m_partId != null)
            {
                children.Add(m_partId);
            }

            if (m_productId != null)
            {
                children.Add(m_productId);
            }

            if (m_resultId != null)
            {
                children.Add(m_resultId);
            }

            base.GetChildren(context, children);
        }

        /// <summary>
        /// Finds the child with the specified browse name.
        /// </summary>
        protected override BaseInstanceState FindChild(
            ISystemContext context,
            QualifiedName browseName,
            bool createOrReplace,
            BaseInstanceState replacement)
        {
            if (QualifiedName.IsNull(browseName))
            {
                return null;
            }

            BaseInstanceState instance = null;

            switch (browseName.Name)
            {
                case Prefix2.BrowseNames.CausePath:
                {
                    if (createOrReplace)
                    {
                        if (CausePath == null)
                        {
                            if (replacement == null)
                            {
                                CausePath = new PropertyState<string>(this);
                            }
                            else
                            {
                                CausePath = (PropertyState<string>)replacement;
                            }
                        }
                    }

                    instance = CausePath;
                    break;
                }

                case Prefix2.BrowseNames.ExternalConfigurationId:
                {
                    if (createOrReplace)
                    {
                        if (ExternalConfigurationId == null)
                        {
                            if (replacement == null)
                            {
                                ExternalConfigurationId = new PropertyState<ConfigurationIdDataType>(this);
                            }
                            else
                            {
                                ExternalConfigurationId = (PropertyState<ConfigurationIdDataType>)replacement;
                            }
                        }
                    }

                    instance = ExternalConfigurationId;
                    break;
                }

                case Prefix2.BrowseNames.ExternalRecipeId:
                {
                    if (createOrReplace)
                    {
                        if (ExternalRecipeId == null)
                        {
                            if (replacement == null)
                            {
                                ExternalRecipeId = new PropertyState<RecipeIdExternalDataType>(this);
                            }
                            else
                            {
                                ExternalRecipeId = (PropertyState<RecipeIdExternalDataType>)replacement;
                            }
                        }
                    }

                    instance = ExternalRecipeId;
                    break;
                }

                case Prefix2.BrowseNames.InternalConfigurationId:
                {
                    if (createOrReplace)
                    {
                        if (InternalConfigurationId == null)
                        {
                            if (replacement == null)
                            {
                                InternalConfigurationId = new PropertyState<ConfigurationIdDataType>(this);
                            }
                            else
                            {
                                InternalConfigurationId = (PropertyState<ConfigurationIdDataType>)replacement;
                            }
                        }
                    }

                    instance = InternalConfigurationId;
                    break;
                }

                case Prefix2.BrowseNames.InternalRecipeId:
                {
                    if (createOrReplace)
                    {
                        if (InternalRecipeId == null)
                        {
                            if (replacement == null)
                            {
                                InternalRecipeId = new PropertyState<RecipeIdInternalDataType>(this);
                            }
                            else
                            {
                                InternalRecipeId = (PropertyState<RecipeIdInternalDataType>)replacement;
                            }
                        }
                    }

                    instance = InternalRecipeId;
                    break;
                }

                case Prefix2.BrowseNames.JobId:
                {
                    if (createOrReplace)
                    {
                        if (JobId == null)
                        {
                            if (replacement == null)
                            {
                                JobId = new PropertyState<JobIdDataType>(this);
                            }
                            else
                            {
                                JobId = (PropertyState<JobIdDataType>)replacement;
                            }
                        }
                    }

                    instance = JobId;
                    break;
                }

                case Prefix2.BrowseNames.MeasId:
                {
                    if (createOrReplace)
                    {
                        if (MeasId == null)
                        {
                            if (replacement == null)
                            {
                                MeasId = new PropertyState<MeasIdDataType>(this);
                            }
                            else
                            {
                                MeasId = (PropertyState<MeasIdDataType>)replacement;
                            }
                        }
                    }

                    instance = MeasId;
                    break;
                }

                case Prefix2.BrowseNames.PartId:
                {
                    if (createOrReplace)
                    {
                        if (PartId == null)
                        {
                            if (replacement == null)
                            {
                                PartId = new PropertyState<PartIdDataType>(this);
                            }
                            else
                            {
                                PartId = (PropertyState<PartIdDataType>)replacement;
                            }
                        }
                    }

                    instance = PartId;
                    break;
                }

                case Prefix2.BrowseNames.ProductId:
                {
                    if (createOrReplace)
                    {
                        if (ProductId == null)
                        {
                            if (replacement == null)
                            {
                                ProductId = new PropertyState<ProductIdDataType>(this);
                            }
                            else
                            {
                                ProductId = (PropertyState<ProductIdDataType>)replacement;
                            }
                        }
                    }

                    instance = ProductId;
                    break;
                }

                case Prefix2.BrowseNames.ResultId:
                {
                    if (createOrReplace)
                    {
                        if (ResultId == null)
                        {
                            if (replacement == null)
                            {
                                ResultId = new PropertyState<ResultIdDataType>(this);
                            }
                            else
                            {
                                ResultId = (PropertyState<ResultIdDataType>)replacement;
                            }
                        }
                    }

                    instance = ResultId;
                    break;
                }
            }

            if (instance != null)
            {
                return instance;
            }

            return base.FindChild(context, browseName, createOrReplace, replacement);
        }
        #endregion

        #region Private Fields
        private PropertyState<string> m_causePath;
        private PropertyState<ConfigurationIdDataType> m_externalConfigurationId;
        private PropertyState<RecipeIdExternalDataType> m_externalRecipeId;
        private PropertyState<ConfigurationIdDataType> m_ınternalConfigurationId;
        private PropertyState<RecipeIdInternalDataType> m_ınternalRecipeId;
        private PropertyState<JobIdDataType> m_jobId;
        private PropertyState<MeasIdDataType> m_measId;
        private PropertyState<PartIdDataType> m_partId;
        private PropertyState<ProductIdDataType> m_productId;
        private PropertyState<ResultIdDataType> m_resultId;
        #endregion
    }
    #endif
    #endregion

    #region VisionDiagnosticInfoEventState Class
    #if (!OPCUA_EXCLUDE_VisionDiagnosticInfoEventState)
    /// <summary>
    /// Stores an instance of the VisionDiagnosticInfoEventType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class VisionDiagnosticInfoEventState : VisionEventState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public VisionDiagnosticInfoEventState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.VisionDiagnosticInfoEventType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);
        }

        #region Initialization String
        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAJQAAAFZpc2lvbkRpYWdub3N0aWNJbmZvRXZlbnRUeXBlSW5zdGFuY2UBASoCAQEqAv////8JAAAA" +
           "NWCJCgIAAAAAAAcAAABFdmVudElkAQErAgMAAAAAKwAAAEEgZ2xvYmFsbHkgdW5pcXVlIGlkZW50aWZp" +
           "ZXIgZm9yIHRoZSBldmVudC4ALgBEKwIAAAAP/////wEB/////wAAAAA1YIkKAgAAAAAACQAAAEV2ZW50" +
           "VHlwZQEBLAIDAAAAACIAAABUaGUgaWRlbnRpZmllciBmb3IgdGhlIGV2ZW50IHR5cGUuAC4ARCwCAAAA" +
           "Ef////8BAf////8AAAAANWCJCgIAAAAAAAoAAABTb3VyY2VOb2RlAQEtAgMAAAAAGAAAAFRoZSBzb3Vy" +
           "Y2Ugb2YgdGhlIGV2ZW50LgAuAEQtAgAAABH/////AQH/////AAAAADVgiQoCAAAAAAAKAAAAU291cmNl" +
           "TmFtZQEBLgIDAAAAACkAAABBIGRlc2NyaXB0aW9uIG9mIHRoZSBzb3VyY2Ugb2YgdGhlIGV2ZW50LgAu" +
           "AEQuAgAAAAz/////AQH/////AAAAADVgiQoCAAAAAAAEAAAAVGltZQEBLwIDAAAAABgAAABXaGVuIHRo" +
           "ZSBldmVudCBvY2N1cnJlZC4ALgBELwIAAAEAJgH/////AQH/////AAAAADVgiQoCAAAAAAALAAAAUmVj" +
           "ZWl2ZVRpbWUBATACAwAAAAA+AAAAV2hlbiB0aGUgc2VydmVyIHJlY2VpdmVkIHRoZSBldmVudCBmcm9t" +
           "IHRoZSB1bmRlcmx5aW5nIHN5c3RlbS4ALgBEMAIAAAEAJgH/////AQH/////AAAAADVgiQoCAAAAAAAJ" +
           "AAAATG9jYWxUaW1lAQExAgMAAAAAPAAAAEluZm9ybWF0aW9uIGFib3V0IHRoZSBsb2NhbCB0aW1lIHdo" +
           "ZXJlIHRoZSBldmVudCBvcmlnaW5hdGVkLgAuAEQxAgAAAQDQIv////8BAf////8AAAAANWCJCgIAAAAA" +
           "AAcAAABNZXNzYWdlAQEyAgMAAAAAJQAAAEEgbG9jYWxpemVkIGRlc2NyaXB0aW9uIG9mIHRoZSBldmVu" +
           "dC4ALgBEMgIAAAAV/////wEB/////wAAAAA1YIkKAgAAAAAACAAAAFNldmVyaXR5AQEzAgMAAAAAIQAA" +
           "AEluZGljYXRlcyBob3cgdXJnZW50IGFuIGV2ZW50IGlzLgAuAEQzAgAAAAX/////AQH/////AAAAAA==";
        #endregion
        #endif
        #endregion

        #region Public Properties
        #endregion

        #region Overridden Methods
        #endregion

        #region Private Fields
        #endregion
    }
    #endif
    #endregion

    #region VisionInformationEventState Class
    #if (!OPCUA_EXCLUDE_VisionInformationEventState)
    /// <summary>
    /// Stores an instance of the VisionInformationEventType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class VisionInformationEventState : VisionEventState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public VisionInformationEventState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.VisionInformationEventType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);
        }

        #region Initialization String
        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAIgAAAFZpc2lvbkluZm9ybWF0aW9uRXZlbnRUeXBlSW5zdGFuY2UBAT4CAQE+Av////8JAAAANWCJ" +
           "CgIAAAAAAAcAAABFdmVudElkAQE/AgMAAAAAKwAAAEEgZ2xvYmFsbHkgdW5pcXVlIGlkZW50aWZpZXIg" +
           "Zm9yIHRoZSBldmVudC4ALgBEPwIAAAAP/////wEB/////wAAAAA1YIkKAgAAAAAACQAAAEV2ZW50VHlw" +
           "ZQEBQAIDAAAAACIAAABUaGUgaWRlbnRpZmllciBmb3IgdGhlIGV2ZW50IHR5cGUuAC4AREACAAAAEf//" +
           "//8BAf////8AAAAANWCJCgIAAAAAAAoAAABTb3VyY2VOb2RlAQFBAgMAAAAAGAAAAFRoZSBzb3VyY2Ug" +
           "b2YgdGhlIGV2ZW50LgAuAERBAgAAABH/////AQH/////AAAAADVgiQoCAAAAAAAKAAAAU291cmNlTmFt" +
           "ZQEBQgIDAAAAACkAAABBIGRlc2NyaXB0aW9uIG9mIHRoZSBzb3VyY2Ugb2YgdGhlIGV2ZW50LgAuAERC" +
           "AgAAAAz/////AQH/////AAAAADVgiQoCAAAAAAAEAAAAVGltZQEBQwIDAAAAABgAAABXaGVuIHRoZSBl" +
           "dmVudCBvY2N1cnJlZC4ALgBEQwIAAAEAJgH/////AQH/////AAAAADVgiQoCAAAAAAALAAAAUmVjZWl2" +
           "ZVRpbWUBAUQCAwAAAAA+AAAAV2hlbiB0aGUgc2VydmVyIHJlY2VpdmVkIHRoZSBldmVudCBmcm9tIHRo" +
           "ZSB1bmRlcmx5aW5nIHN5c3RlbS4ALgBERAIAAAEAJgH/////AQH/////AAAAADVgiQoCAAAAAAAJAAAA" +
           "TG9jYWxUaW1lAQFFAgMAAAAAPAAAAEluZm9ybWF0aW9uIGFib3V0IHRoZSBsb2NhbCB0aW1lIHdoZXJl" +
           "IHRoZSBldmVudCBvcmlnaW5hdGVkLgAuAERFAgAAAQDQIv////8BAf////8AAAAANWCJCgIAAAAAAAcA" +
           "AABNZXNzYWdlAQFGAgMAAAAAJQAAAEEgbG9jYWxpemVkIGRlc2NyaXB0aW9uIG9mIHRoZSBldmVudC4A" +
           "LgBERgIAAAAV/////wEB/////wAAAAA1YIkKAgAAAAAACAAAAFNldmVyaXR5AQFHAgMAAAAAIQAAAElu" +
           "ZGljYXRlcyBob3cgdXJnZW50IGFuIGV2ZW50IGlzLgAuAERHAgAAAAX/////AQH/////AAAAAA==";
        #endregion
        #endif
        #endregion

        #region Public Properties
        #endregion

        #region Overridden Methods
        #endregion

        #region Private Fields
        #endregion
    }
    #endif
    #endregion

    #region VisionSafetyEventState Class
    #if (!OPCUA_EXCLUDE_VisionSafetyEventState)
    /// <summary>
    /// Stores an instance of the VisionSafetyEventType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class VisionSafetyEventState : BaseEventState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public VisionSafetyEventState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.VisionSafetyEventType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);
        }

        #region Initialization String
        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAHQAAAFZpc2lvblNhZmV0eUV2ZW50VHlwZUluc3RhbmNlAQFSAgEBUgL/////CwAAADVgiQoCAAAA" +
           "AAAHAAAARXZlbnRJZAEBUwIDAAAAACsAAABBIGdsb2JhbGx5IHVuaXF1ZSBpZGVudGlmaWVyIGZvciB0" +
           "aGUgZXZlbnQuAC4ARFMCAAAAD/////8BAf////8AAAAANWCJCgIAAAAAAAkAAABFdmVudFR5cGUBAVQC" +
           "AwAAAAAiAAAAVGhlIGlkZW50aWZpZXIgZm9yIHRoZSBldmVudCB0eXBlLgAuAERUAgAAABH/////AQH/" +
           "////AAAAADVgiQoCAAAAAAAKAAAAU291cmNlTm9kZQEBVQIDAAAAABgAAABUaGUgc291cmNlIG9mIHRo" +
           "ZSBldmVudC4ALgBEVQIAAAAR/////wEB/////wAAAAA1YIkKAgAAAAAACgAAAFNvdXJjZU5hbWUBAVYC" +
           "AwAAAAApAAAAQSBkZXNjcmlwdGlvbiBvZiB0aGUgc291cmNlIG9mIHRoZSBldmVudC4ALgBEVgIAAAAM" +
           "/////wEB/////wAAAAA1YIkKAgAAAAAABAAAAFRpbWUBAVcCAwAAAAAYAAAAV2hlbiB0aGUgZXZlbnQg" +
           "b2NjdXJyZWQuAC4ARFcCAAABACYB/////wEB/////wAAAAA1YIkKAgAAAAAACwAAAFJlY2VpdmVUaW1l" +
           "AQFYAgMAAAAAPgAAAFdoZW4gdGhlIHNlcnZlciByZWNlaXZlZCB0aGUgZXZlbnQgZnJvbSB0aGUgdW5k" +
           "ZXJseWluZyBzeXN0ZW0uAC4ARFgCAAABACYB/////wEB/////wAAAAA1YIkKAgAAAAAACQAAAExvY2Fs" +
           "VGltZQEBWQIDAAAAADwAAABJbmZvcm1hdGlvbiBhYm91dCB0aGUgbG9jYWwgdGltZSB3aGVyZSB0aGUg" +
           "ZXZlbnQgb3JpZ2luYXRlZC4ALgBEWQIAAAEA0CL/////AQH/////AAAAADVgiQoCAAAAAAAHAAAATWVz" +
           "c2FnZQEBWgIDAAAAACUAAABBIGxvY2FsaXplZCBkZXNjcmlwdGlvbiBvZiB0aGUgZXZlbnQuAC4ARFoC" +
           "AAAAFf////8BAf////8AAAAANWCJCgIAAAAAAAgAAABTZXZlcml0eQEBWwIDAAAAACEAAABJbmRpY2F0" +
           "ZXMgaG93IHVyZ2VudCBhbiBldmVudCBpcy4ALgBEWwIAAAAF/////wEB/////wAAAAAVYIkKAgAAAAEA" +
           "FwAAAFZpc2lvblNhZmV0eUluZm9ybWF0aW9uAQFcAgAuAERcAgAAAAz/////AwP/////AAAAABVgiQoC" +
           "AAAAAQAVAAAAVmlzaW9uU2FmZXR5VHJpZ2dlcmVkAQFdAgAuAERdAgAAAAH/////AwP/////AAAAAA==";
        #endregion
        #endif
        #endregion

        #region Public Properties
        /// <summary>
        /// A description for the VisionSafetyInformation Property.
        /// </summary>
        public PropertyState<string> VisionSafetyInformation
        {
            get
            {
                return m_visionSafetyInformation;
            }

            set
            {
                if (!Object.ReferenceEquals(m_visionSafetyInformation, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_visionSafetyInformation = value;
            }
        }

        /// <summary>
        /// A description for the VisionSafetyTriggered Property.
        /// </summary>
        public PropertyState<bool> VisionSafetyTriggered
        {
            get
            {
                return m_visionSafetyTriggered;
            }

            set
            {
                if (!Object.ReferenceEquals(m_visionSafetyTriggered, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_visionSafetyTriggered = value;
            }
        }
        #endregion

        #region Overridden Methods
        /// <summary>
        /// Populates a list with the children that belong to the node.
        /// </summary>
        /// <param name="context">The context for the system being accessed.</param>
        /// <param name="children">The list of children to populate.</param>
        public override void GetChildren(
            ISystemContext context,
            IList<BaseInstanceState> children)
        {
            if (m_visionSafetyInformation != null)
            {
                children.Add(m_visionSafetyInformation);
            }

            if (m_visionSafetyTriggered != null)
            {
                children.Add(m_visionSafetyTriggered);
            }

            base.GetChildren(context, children);
        }

        /// <summary>
        /// Finds the child with the specified browse name.
        /// </summary>
        protected override BaseInstanceState FindChild(
            ISystemContext context,
            QualifiedName browseName,
            bool createOrReplace,
            BaseInstanceState replacement)
        {
            if (QualifiedName.IsNull(browseName))
            {
                return null;
            }

            BaseInstanceState instance = null;

            switch (browseName.Name)
            {
                case Prefix2.BrowseNames.VisionSafetyInformation:
                {
                    if (createOrReplace)
                    {
                        if (VisionSafetyInformation == null)
                        {
                            if (replacement == null)
                            {
                                VisionSafetyInformation = new PropertyState<string>(this);
                            }
                            else
                            {
                                VisionSafetyInformation = (PropertyState<string>)replacement;
                            }
                        }
                    }

                    instance = VisionSafetyInformation;
                    break;
                }

                case Prefix2.BrowseNames.VisionSafetyTriggered:
                {
                    if (createOrReplace)
                    {
                        if (VisionSafetyTriggered == null)
                        {
                            if (replacement == null)
                            {
                                VisionSafetyTriggered = new PropertyState<bool>(this);
                            }
                            else
                            {
                                VisionSafetyTriggered = (PropertyState<bool>)replacement;
                            }
                        }
                    }

                    instance = VisionSafetyTriggered;
                    break;
                }
            }

            if (instance != null)
            {
                return instance;
            }

            return base.FindChild(context, browseName, createOrReplace, replacement);
        }
        #endregion

        #region Private Fields
        private PropertyState<string> m_visionSafetyInformation;
        private PropertyState<bool> m_visionSafetyTriggered;
        #endregion
    }
    #endif
    #endregion

    #region ConfigurationManagementState Class
    #if (!OPCUA_EXCLUDE_ConfigurationManagementState)
    /// <summary>
    /// Stores an instance of the ConfigurationManagementType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class ConfigurationManagementState : BaseObjectState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public ConfigurationManagementState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.ConfigurationManagementType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);

            if (AddConfiguration != null)
            {
                AddConfiguration.Initialize(context, AddConfiguration_InitializationString);
            }

            if (Configurations != null)
            {
                Configurations.Initialize(context, Configurations_InitializationString);
            }

            if (ConfigurationTransfer != null)
            {
                ConfigurationTransfer.Initialize(context, ConfigurationTransfer_InitializationString);
            }

            if (ReleaseConfigurationHandle != null)
            {
                ReleaseConfigurationHandle.Initialize(context, ReleaseConfigurationHandle_InitializationString);
            }

            if (RemoveConfiguration != null)
            {
                RemoveConfiguration.Initialize(context, RemoveConfiguration_InitializationString);
            }
        }

        #region Initialization String
        private const string AddConfiguration_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYYIKBAAA" +
           "AAEAEAAAAEFkZENvbmZpZ3VyYXRpb24BAWMCAC8BAWMCYwIAAAEB/////wIAAAAXYKkKAgAAAAAADgAA" +
           "AElucHV0QXJndW1lbnRzAQFkAgAuAERkAgAAlgAAAAABACgBAQAAAAEAAAABAAAAAQH/////AAAAABdg" +
           "qQoCAAAAAAAPAAAAT3V0cHV0QXJndW1lbnRzAQFlAgAuAERlAgAAlgAAAAABACgBAQAAAAEAAAAEAAAA" +
           "AQH/////AAAAAA==";

        private const string Configurations_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAKAQAA" +
           "AAEADgAAAENvbmZpZ3VyYXRpb25zAQFmAgAvAQF+AmYCAAD/////AAAAAA==";

        private const string ConfigurationTransfer_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAKAQAA" +
           "AAEAFQAAAENvbmZpZ3VyYXRpb25UcmFuc2ZlcgEBZwIALwEBgAJnAgAA/////wQAAAAVYIkKAgAAAAAA" +
           "FwAAAENsaWVudFByb2Nlc3NpbmdUaW1lb3V0AQFoAgAuAERoAgAAAQAiAf////8BAf////8AAAAABGGC" +
           "CgQAAAAAABMAAABHZW5lcmF0ZUZpbGVGb3JSZWFkAQFpAgAvAQCCPWkCAAABAf////8CAAAAF2CpCgIA" +
           "AAAAAA4AAABJbnB1dEFyZ3VtZW50cwEBagIALgBEagIAAJYAAAAAAQAoAQEAAAABAAAAAQAAAAEB////" +
           "/wAAAAAXYKkKAgAAAAAADwAAAE91dHB1dEFyZ3VtZW50cwEBawIALgBEawIAAJYAAAAAAQAoAQEAAAAB" +
           "AAAAAwAAAAEB/////wAAAAAEYYIKBAAAAAAAFAAAAEdlbmVyYXRlRmlsZUZvcldyaXRlAQFsAgAvAQCF" +
           "PWwCAAABAf////8CAAAAF2CpCgIAAAAAAA4AAABJbnB1dEFyZ3VtZW50cwEBbQIALgBEbQIAAJYAAAAA" +
           "AQAoAQEAAAABAAAAAQAAAAEB/////wAAAAAXYKkKAgAAAAAADwAAAE91dHB1dEFyZ3VtZW50cwEBbgIA" +
           "LgBEbgIAAJYAAAAAAQAoAQEAAAABAAAAAgAAAAEB/////wAAAAAEYYIKBAAAAAAADgAAAENsb3NlQW5k" +
           "Q29tbWl0AQFvAgAvAQCHPW8CAAABAf////8CAAAAF2CpCgIAAAAAAA4AAABJbnB1dEFyZ3VtZW50cwEB" +
           "cAIALgBEcAIAAJYAAAAAAQAoAQEAAAABAAAAAQAAAAEB/////wAAAAAXYKkKAgAAAAAADwAAAE91dHB1" +
           "dEFyZ3VtZW50cwEBcQIALgBEcQIAAJYAAAAAAQAoAQEAAAABAAAAAQAAAAEB/////wAAAAA=";

        private const string ReleaseConfigurationHandle_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYYIKBAAA" +
           "AAEAGgAAAFJlbGVhc2VDb25maWd1cmF0aW9uSGFuZGxlAQF4AgAvAQF4AngCAAABAf////8CAAAAF2Cp" +
           "CgIAAAAAAA4AAABJbnB1dEFyZ3VtZW50cwEBeQIALgBEeQIAAJYAAAAAAQAoAQEAAAABAAAAAQAAAAEB" +
           "/////wAAAAAXYKkKAgAAAAAADwAAAE91dHB1dEFyZ3VtZW50cwEBegIALgBEegIAAJYAAAAAAQAoAQEA" +
           "AAABAAAAAQAAAAEB/////wAAAAA=";

        private const string RemoveConfiguration_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYYIKBAAA" +
           "AAEAEwAAAFJlbW92ZUNvbmZpZ3VyYXRpb24BAXsCAC8BAXsCewIAAAEB/////wIAAAAXYKkKAgAAAAAA" +
           "DgAAAElucHV0QXJndW1lbnRzAQF8AgAuAER8AgAAlgAAAAABACgBAQAAAAEAAAABAAAAAQH/////AAAA" +
           "ABdgqQoCAAAAAAAPAAAAT3V0cHV0QXJndW1lbnRzAQF9AgAuAER9AgAAlgAAAAABACgBAQAAAAEAAAAB" +
           "AAAAAQH/////AAAAAA==";

        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAIwAAAENvbmZpZ3VyYXRpb25NYW5hZ2VtZW50VHlwZUluc3RhbmNlAQFeAgEBXgL/////CQAAAARh" +
           "ggoEAAAAAQAVAAAAQWN0aXZhdGVDb25maWd1cmF0aW9uAQFfAgAvAQFfAl8CAAABAf////8CAAAAF2Cp" +
           "CgIAAAAAAA4AAABJbnB1dEFyZ3VtZW50cwEBYAIALgBEYAIAAJYAAAAAAQAoAQEAAAABAAAAAQAAAAEB" +
           "/////wAAAAAXYKkKAgAAAAAADwAAAE91dHB1dEFyZ3VtZW50cwEBYQIALgBEYQIAAJYAAAAAAQAoAQEA" +
           "AAABAAAAAQAAAAEB/////wAAAAAVYKkKAgAAAAEAEwAAAEFjdGl2ZUNvbmZpZ3VyYXRpb24BAWICAC8A" +
           "P2ICAAAWAQHhEwLcAAAAPENvbmZpZ3VyYXRpb25EYXRhVHlwZSB4bWxucz0iaHR0cDovL29wY2ZvdW5k" +
           "YXRpb24ub3JnL1VBL01hY2hpbmVWaXNpb24vVHlwZXMueHNkIj48RW5jb2RpbmdNYXNrPjA8L0VuY29k" +
           "aW5nTWFzaz48SW50ZXJuYWxJZD48SWQ+PC9JZD48L0ludGVybmFsSWQ+PExhc3RNb2RpZmllZD4xOTAw" +
           "LTAxLTAxVDAwOjAwOjAwWjwvTGFzdE1vZGlmaWVkPjwvQ29uZmlndXJhdGlvbkRhdGFUeXBlPgEBDQD/" +
           "////AwP/////AAAAAARhggoEAAAAAQAQAAAAQWRkQ29uZmlndXJhdGlvbgEBYwIALwEBYwJjAgAAAQH/" +
           "////AgAAABdgqQoCAAAAAAAOAAAASW5wdXRBcmd1bWVudHMBAWQCAC4ARGQCAACWAAAAAAEAKAEBAAAA" +
           "AQAAAAEAAAABAf////8AAAAAF2CpCgIAAAAAAA8AAABPdXRwdXRBcmd1bWVudHMBAWUCAC4ARGUCAACW" +
           "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";
        #endregion
        #endif
        #endregion

        #region Public Properties
        /// <summary>
        /// A description for the ActivateConfiguration Method.
        /// </summary>
        public MethodState ActivateConfiguration
        {
            get
            {
                return m_activateConfigurationMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_activateConfigurationMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_activateConfigurationMethod = value;
            }
        }

        /// <summary>
        /// A description for the ActiveConfiguration Variable.
        /// </summary>
        public BaseDataVariableState<ConfigurationDataType> ActiveConfiguration
        {
            get
            {
                return m_activeConfiguration;
            }

            set
            {
                if (!Object.ReferenceEquals(m_activeConfiguration, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_activeConfiguration = value;
            }
        }

        /// <summary>
        /// A description for the AddConfiguration Method.
        /// </summary>
        public MethodState AddConfiguration
        {
            get
            {
                return m_addConfigurationMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_addConfigurationMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_addConfigurationMethod = value;
            }
        }

        /// <summary>
        /// A description for the Configurations Object.
        /// </summary>
        public ConfigurationFolderState Configurations
        {
            get
            {
                return m_configurations;
            }

            set
            {
                if (!Object.ReferenceEquals(m_configurations, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_configurations = value;
            }
        }

        /// <summary>
        /// A description for the ConfigurationTransfer Object.
        /// </summary>
        public ConfigurationTransferState ConfigurationTransfer
        {
            get
            {
                return m_configurationTransfer;
            }

            set
            {
                if (!Object.ReferenceEquals(m_configurationTransfer, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_configurationTransfer = value;
            }
        }

        /// <summary>
        /// A description for the GetConfigurationById Method.
        /// </summary>
        public MethodState GetConfigurationById
        {
            get
            {
                return m_getConfigurationByIdMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_getConfigurationByIdMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_getConfigurationByIdMethod = value;
            }
        }

        /// <summary>
        /// A description for the GetConfigurationList Method.
        /// </summary>
        public MethodState GetConfigurationList
        {
            get
            {
                return m_getConfigurationListMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_getConfigurationListMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_getConfigurationListMethod = value;
            }
        }

        /// <summary>
        /// A description for the ReleaseConfigurationHandle Method.
        /// </summary>
        public MethodState ReleaseConfigurationHandle
        {
            get
            {
                return m_releaseConfigurationHandleMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_releaseConfigurationHandleMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_releaseConfigurationHandleMethod = value;
            }
        }

        /// <summary>
        /// A description for the RemoveConfiguration Method.
        /// </summary>
        public MethodState RemoveConfiguration
        {
            get
            {
                return m_removeConfigurationMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_removeConfigurationMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_removeConfigurationMethod = value;
            }
        }
        #endregion

        #region Overridden Methods
        /// <summary>
        /// Populates a list with the children that belong to the node.
        /// </summary>
        /// <param name="context">The context for the system being accessed.</param>
        /// <param name="children">The list of children to populate.</param>
        public override void GetChildren(
            ISystemContext context,
            IList<BaseInstanceState> children)
        {
            if (m_activateConfigurationMethod != null)
            {
                children.Add(m_activateConfigurationMethod);
            }

            if (m_activeConfiguration != null)
            {
                children.Add(m_activeConfiguration);
            }

            if (m_addConfigurationMethod != null)
            {
                children.Add(m_addConfigurationMethod);
            }

            if (m_configurations != null)
            {
                children.Add(m_configurations);
            }

            if (m_configurationTransfer != null)
            {
                children.Add(m_configurationTransfer);
            }

            if (m_getConfigurationByIdMethod != null)
            {
                children.Add(m_getConfigurationByIdMethod);
            }

            if (m_getConfigurationListMethod != null)
            {
                children.Add(m_getConfigurationListMethod);
            }

            if (m_releaseConfigurationHandleMethod != null)
            {
                children.Add(m_releaseConfigurationHandleMethod);
            }

            if (m_removeConfigurationMethod != null)
            {
                children.Add(m_removeConfigurationMethod);
            }

            base.GetChildren(context, children);
        }

        /// <summary>
        /// Finds the child with the specified browse name.
        /// </summary>
        protected override BaseInstanceState FindChild(
            ISystemContext context,
            QualifiedName browseName,
            bool createOrReplace,
            BaseInstanceState replacement)
        {
            if (QualifiedName.IsNull(browseName))
            {
                return null;
            }

            BaseInstanceState instance = null;

            switch (browseName.Name)
            {
                case Prefix2.BrowseNames.ActivateConfiguration:
                {
                    if (createOrReplace)
                    {
                        if (ActivateConfiguration == null)
                        {
                            if (replacement == null)
                            {
                                ActivateConfiguration = new MethodState(this);
                            }
                            else
                            {
                                ActivateConfiguration = (MethodState)replacement;
                            }
                        }
                    }

                    instance = ActivateConfiguration;
                    break;
                }

                case Prefix2.BrowseNames.ActiveConfiguration:
                {
                    if (createOrReplace)
                    {
                        if (ActiveConfiguration == null)
                        {
                            if (replacement == null)
                            {
                                ActiveConfiguration = new BaseDataVariableState<ConfigurationDataType>(this);
                            }
                            else
                            {
                                ActiveConfiguration = (BaseDataVariableState<ConfigurationDataType>)replacement;
                            }
                        }
                    }

                    instance = ActiveConfiguration;
                    break;
                }

                case Prefix2.BrowseNames.AddConfiguration:
                {
                    if (createOrReplace)
                    {
                        if (AddConfiguration == null)
                        {
                            if (replacement == null)
                            {
                                AddConfiguration = new MethodState(this);
                            }
                            else
                            {
                                AddConfiguration = (MethodState)replacement;
                            }
                        }
                    }

                    instance = AddConfiguration;
                    break;
                }

                case Prefix2.BrowseNames.Configurations:
                {
                    if (createOrReplace)
                    {
                        if (Configurations == null)
                        {
                            if (replacement == null)
                            {
                                Configurations = new ConfigurationFolderState(this);
                            }
                            else
                            {
                                Configurations = (ConfigurationFolderState)replacement;
                            }
                        }
                    }

                    instance = Configurations;
                    break;
                }

                case Prefix2.BrowseNames.ConfigurationTransfer:
                {
                    if (createOrReplace)
                    {
                        if (ConfigurationTransfer == null)
                        {
                            if (replacement == null)
                            {
                                ConfigurationTransfer = new ConfigurationTransferState(this);
                            }
                            else
                            {
                                ConfigurationTransfer = (ConfigurationTransferState)replacement;
                            }
                        }
                    }

                    instance = ConfigurationTransfer;
                    break;
                }

                case Prefix2.BrowseNames.GetConfigurationById:
                {
                    if (createOrReplace)
                    {
                        if (GetConfigurationById == null)
                        {
                            if (replacement == null)
                            {
                                GetConfigurationById = new MethodState(this);
                            }
                            else
                            {
                                GetConfigurationById = (MethodState)replacement;
                            }
                        }
                    }

                    instance = GetConfigurationById;
                    break;
                }

                case Prefix2.BrowseNames.GetConfigurationList:
                {
                    if (createOrReplace)
                    {
                        if (GetConfigurationList == null)
                        {
                            if (replacement == null)
                            {
                                GetConfigurationList = new MethodState(this);
                            }
                            else
                            {
                                GetConfigurationList = (MethodState)replacement;
                            }
                        }
                    }

                    instance = GetConfigurationList;
                    break;
                }

                case Prefix2.BrowseNames.ReleaseConfigurationHandle:
                {
                    if (createOrReplace)
                    {
                        if (ReleaseConfigurationHandle == null)
                        {
                            if (replacement == null)
                            {
                                ReleaseConfigurationHandle = new MethodState(this);
                            }
                            else
                            {
                                ReleaseConfigurationHandle = (MethodState)replacement;
                            }
                        }
                    }

                    instance = ReleaseConfigurationHandle;
                    break;
                }

                case Prefix2.BrowseNames.RemoveConfiguration:
                {
                    if (createOrReplace)
                    {
                        if (RemoveConfiguration == null)
                        {
                            if (replacement == null)
                            {
                                RemoveConfiguration = new MethodState(this);
                            }
                            else
                            {
                                RemoveConfiguration = (MethodState)replacement;
                            }
                        }
                    }

                    instance = RemoveConfiguration;
                    break;
                }
            }

            if (instance != null)
            {
                return instance;
            }

            return base.FindChild(context, browseName, createOrReplace, replacement);
        }
        #endregion

        #region Private Fields
        private MethodState m_activateConfigurationMethod;
        private BaseDataVariableState<ConfigurationDataType> m_activeConfiguration;
        private MethodState m_addConfigurationMethod;
        private ConfigurationFolderState m_configurations;
        private ConfigurationTransferState m_configurationTransfer;
        private MethodState m_getConfigurationByIdMethod;
        private MethodState m_getConfigurationListMethod;
        private MethodState m_releaseConfigurationHandleMethod;
        private MethodState m_removeConfigurationMethod;
        #endregion
    }
    #endif
    #endregion

    #region ConfigurationFolderState Class
    #if (!OPCUA_EXCLUDE_ConfigurationFolderState)
    /// <summary>
    /// Stores an instance of the ConfigurationFolderType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class ConfigurationFolderState : FolderState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public ConfigurationFolderState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.ConfigurationFolderType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);
        }

        #region Initialization String
        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAHwAAAENvbmZpZ3VyYXRpb25Gb2xkZXJUeXBlSW5zdGFuY2UBAX4CAQF+Av////8AAAAA";
        #endregion
        #endif
        #endregion

        #region Public Properties
        #endregion

        #region Overridden Methods
        #endregion

        #region Private Fields
        #endregion
    }
    #endif
    #endregion

    #region ConfigurationTransferState Class
    #if (!OPCUA_EXCLUDE_ConfigurationTransferState)
    /// <summary>
    /// Stores an instance of the ConfigurationTransferType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class ConfigurationTransferState : TemporaryFileTransferState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public ConfigurationTransferState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.ConfigurationTransferType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);
        }

        #region Initialization String
        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAIQAAAENvbmZpZ3VyYXRpb25UcmFuc2ZlclR5cGVJbnN0YW5jZQEBgAIBAYAC/////wQAAAAVYIkK" +
           "AgAAAAAAFwAAAENsaWVudFByb2Nlc3NpbmdUaW1lb3V0AQGBAgAuAESBAgAAAQAiAf////8BAf////8A" +
           "AAAABGGCCgQAAAAAABMAAABHZW5lcmF0ZUZpbGVGb3JSZWFkAQGCAgAvAQCCPYICAAABAf////8CAAAA" +
           "F2CpCgIAAAAAAA4AAABJbnB1dEFyZ3VtZW50cwEBgwIALgBEgwIAAJYAAAAAAQAoAQEAAAABAAAAAQAA" +
           "AAEB/////wAAAAAXYKkKAgAAAAAADwAAAE91dHB1dEFyZ3VtZW50cwEBhAIALgBEhAIAAJYAAAAAAQAo" +
           "AQEAAAABAAAAAwAAAAEB/////wAAAAAEYYIKBAAAAAAAFAAAAEdlbmVyYXRlRmlsZUZvcldyaXRlAQGF" +
           "AgAvAQCFPYUCAAABAf////8CAAAAF2CpCgIAAAAAAA4AAABJbnB1dEFyZ3VtZW50cwEBhgIALgBEhgIA" +
           "AJYAAAAAAQAoAQEAAAABAAAAAQAAAAEB/////wAAAAAXYKkKAgAAAAAADwAAAE91dHB1dEFyZ3VtZW50" +
           "cwEBhwIALgBEhwIAAJYAAAAAAQAoAQEAAAABAAAAAgAAAAEB/////wAAAAAEYYIKBAAAAAAADgAAAENs" +
           "b3NlQW5kQ29tbWl0AQGIAgAvAQCHPYgCAAABAf////8CAAAAFWCpCgIAAAAAAA4AAABJbnB1dEFyZ3Vt" +
           "ZW50cwEBiQIALgBEiQIAAJYBAAAAAQAqAQEZAAAACgAAAEZpbGVIYW5kbGUAB/////8AAAAAAAEAKAEB" +
           "AAAAAQH/////AAAAABVgqQoCAAAAAAAPAAAAT3V0cHV0QXJndW1lbnRzAQGKAgAuAESKAgAAlgEAAAAB" +
           "ACoBASUAAAAWAAAAQ29tcGxldGlvblN0YXRlTWFjaGluZQAR/////wAAAAAAAQAoAQEAAAABAf////8A" +
           "AAAA";
        #endregion
        #endif
        #endregion

        #region Public Properties
        #endregion

        #region Overridden Methods
        #endregion

        #region Private Fields
        #endregion
    }
    #endif
    #endregion

    #region ProductFolderState Class
    #if (!OPCUA_EXCLUDE_ProductFolderState)
    /// <summary>
    /// Stores an instance of the ProductFolderType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class ProductFolderState : FolderState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public ProductFolderState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.ProductFolderType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);
        }

        #region Initialization String
        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAGQAAAFByb2R1Y3RGb2xkZXJUeXBlSW5zdGFuY2UBAZoCAQGaAv////8AAAAA";
        #endregion
        #endif
        #endregion

        #region Public Properties
        #endregion

        #region Overridden Methods
        #endregion

        #region Private Fields
        #endregion
    }
    #endif
    #endregion

    #region RecipeFolderState Class
    #if (!OPCUA_EXCLUDE_RecipeFolderState)
    /// <summary>
    /// Stores an instance of the RecipeFolderType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class RecipeFolderState : FolderState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public RecipeFolderState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.RecipeFolderType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);
        }

        #region Initialization String
        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAGAAAAFJlY2lwZUZvbGRlclR5cGVJbnN0YW5jZQEBnAIBAZwC/////wAAAAA=";
        #endregion
        #endif
        #endregion

        #region Public Properties
        #endregion

        #region Overridden Methods
        #endregion

        #region Private Fields
        #endregion
    }
    #endif
    #endregion

    #region RecipeState Class
    #if (!OPCUA_EXCLUDE_RecipeState)
    /// <summary>
    /// Stores an instance of the RecipeType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class RecipeState : BaseObjectState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public RecipeState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.RecipeType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);

            if (ExternalId != null)
            {
                ExternalId.Initialize(context, ExternalId_InitializationString);
            }

            if (Handle != null)
            {
                Handle.Initialize(context, Handle_InitializationString);
            }

            if (LinkedProducts != null)
            {
                LinkedProducts.Initialize(context, LinkedProducts_InitializationString);
            }

            if (LinkProduct != null)
            {
                LinkProduct.Initialize(context, LinkProduct_InitializationString);
            }

            if (UnlinkProduct != null)
            {
                UnlinkProduct.Initialize(context, UnlinkProduct_InitializationString);
            }
        }

        #region Initialization String
        private const string ExternalId_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////81YIkKAgAA" +
           "AAEACgAAAEV4dGVybmFsSWQBAcMCAwAAAAByAAAAUmVjaXBlIElEIGZvciBpZGVudGlmeWluZyB0aGUg" +
           "cmVjaXBlIG91dHNpZGUgdGhlIHZpc2lvbiBzeXN0ZW0uIFRoZSBFeHRlcm5hbElEIGlzIG9ubHkgbWFu" +
           "YWdlZCBieSB0aGUgaG9zdCBzeXN0ZW0uAC4ARMMCAAABAQsA/////wMD/////wAAAAA=";

        private const string Handle_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8kYIAKAQAA" +
           "AAEABgAAAEhhbmRsZQEBxAIDAAAAAKYAAABUaGUgZmlsZSBoYW5kbGUgcmVmZXJzIHRvIHRoZSByZWNp" +
           "cGUgZGF0YSwgd2hpY2ggYXJlIHRlYXRlZCBhcyBhIEJMT0IsIGkuZS4gdGhleSBhcmUgbm90IGludGVy" +
           "cHJldGVkIG91dHNpZGUgdGhlIHN5c3RlbS4gVGhleSBhcmUgYWNjZXNzZWQgdmlhIE9QQyBVQSBmaWxl" +
           "IG9wZXJhdGlvbnMuAC8BADctxAIAAP////8KAAAANWCJCgIAAAAAAAQAAABTaXplAQHFAgMAAAAAHgAA" +
           "AFRoZSBzaXplIG9mIHRoZSBmaWxlIGluIGJ5dGVzLgAuAETFAgAAAAn/////AQH/////AAAAADVgiQoC" +
           "AAAAAAAIAAAAV3JpdGFibGUBAcYCAwAAAAAdAAAAV2hldGhlciB0aGUgZmlsZSBpcyB3cml0YWJsZS4A" +
           "LgBExgIAAAAB/////wEB/////wAAAAA1YIkKAgAAAAAADAAAAFVzZXJXcml0YWJsZQEBxwIDAAAAADEA" +
           "AABXaGV0aGVyIHRoZSBmaWxlIGlzIHdyaXRhYmxlIGJ5IHRoZSBjdXJyZW50IHVzZXIuAC4ARMcCAAAA" +
           "Af////8BAf////8AAAAANWCJCgIAAAAAAAkAAABPcGVuQ291bnQBAcgCAwAAAAAoAAAAVGhlIGN1cnJl" +
           "bnQgbnVtYmVyIG9mIG9wZW4gZmlsZSBoYW5kbGVzLgAuAETIAgAAAAX/////AQH/////AAAAAARhggoE" +
           "AAAAAAAEAAAAT3BlbgEBygIALwEAPC3KAgAAAQH/////AgAAABVgqQoCAAAAAAAOAAAASW5wdXRBcmd1" +
           "bWVudHMBAcsCAC4ARMsCAACWAQAAAAEAKgEBEwAAAAQAAABNb2RlAAP/////AAAAAAABACgBAQAAAAEB" +
           "/////wAAAAAVYKkKAgAAAAAADwAAAE91dHB1dEFyZ3VtZW50cwEBzAIALgBEzAIAAJYBAAAAAQAqAQEZ" +
           "AAAACgAAAEZpbGVIYW5kbGUAB/////8AAAAAAAEAKAEBAAAAAQH/////AAAAAARhggoEAAAAAAAFAAAA" +
           "Q2xvc2UBAc0CAC8BAD8tzQIAAAEB/////wEAAAAVYKkKAgAAAAAADgAAAElucHV0QXJndW1lbnRzAQHO" +
           "AgAuAETOAgAAlgEAAAABACoBARkAAAAKAAAARmlsZUhhbmRsZQAH/////wAAAAAAAQAoAQEAAAABAf//" +
           "//8AAAAABGGCCgQAAAAAAAQAAABSZWFkAQHPAgAvAQBBLc8CAAABAf////8CAAAAFWCpCgIAAAAAAA4A" +
           "AABJbnB1dEFyZ3VtZW50cwEB0AIALgBE0AIAAJYCAAAAAQAqAQEZAAAACgAAAEZpbGVIYW5kbGUAB///" +
           "//8AAAAAAAEAKgEBFQAAAAYAAABMZW5ndGgABv////8AAAAAAAEAKAEBAAAAAQH/////AAAAABVgqQoC" +
           "AAAAAAAPAAAAT3V0cHV0QXJndW1lbnRzAQHRAgAuAETRAgAAlgEAAAABACoBARMAAAAEAAAARGF0YQAP" +
           "/////wAAAAAAAQAoAQEAAAABAf////8AAAAABGGCCgQAAAAAAAUAAABXcml0ZQEB0gIALwEARC3SAgAA" +
           "AQH/////AQAAABVgqQoCAAAAAAAOAAAASW5wdXRBcmd1bWVudHMBAdMCAC4ARNMCAACWAgAAAAEAKgEB" +
           "GQAAAAoAAABGaWxlSGFuZGxlAAf/////AAAAAAABACoBARMAAAAEAAAARGF0YQAP/////wAAAAAAAQAo" +
           "AQEAAAABAf////8AAAAABGGCCgQAAAAAAAsAAABHZXRQb3NpdGlvbgEB1AIALwEARi3UAgAAAQH/////" +
           "AgAAABVgqQoCAAAAAAAOAAAASW5wdXRBcmd1bWVudHMBAdUCAC4ARNUCAACWAQAAAAEAKgEBGQAAAAoA" +
           "AABGaWxlSGFuZGxlAAf/////AAAAAAABACgBAQAAAAEB/////wAAAAAVYKkKAgAAAAAADwAAAE91dHB1" +
           "dEFyZ3VtZW50cwEB1gIALgBE1gIAAJYBAAAAAQAqAQEXAAAACAAAAFBvc2l0aW9uAAn/////AAAAAAAB" +
           "ACgBAQAAAAEB/////wAAAAAEYYIKBAAAAAAACwAAAFNldFBvc2l0aW9uAQHXAgAvAQBJLdcCAAABAf//" +
           "//8BAAAAFWCpCgIAAAAAAA4AAABJbnB1dEFyZ3VtZW50cwEB2AIALgBE2AIAAJYCAAAAAQAqAQEZAAAA" +
           "CgAAAEZpbGVIYW5kbGUAB/////8AAAAAAAEAKgEBFwAAAAgAAABQb3NpdGlvbgAJ/////wAAAAAAAQAo" +
           "AQEAAAABAf////8AAAAA";

        private const string LinkedProducts_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8XYIkKAgAA" +
           "AAEADgAAAExpbmtlZFByb2R1Y3RzAQHcAgAuAETcAgAAAQEUAAEAAAABAAAAAAAAAAMD/////wAAAAA=";

        private const string LinkProduct_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYYIKBAAA" +
           "AAEACwAAAExpbmtQcm9kdWN0AQHdAgAvAQHdAt0CAAABAf////8CAAAAF2CpCgIAAAAAAA4AAABJbnB1" +
           "dEFyZ3VtZW50cwEB3gIALgBE3gIAAJYAAAAAAQAoAQEAAAABAAAAAQAAAAEB/////wAAAAAXYKkKAgAA" +
           "AAAADwAAAE91dHB1dEFyZ3VtZW50cwEB3wIALgBE3wIAAJYAAAAAAQAoAQEAAAABAAAAAQAAAAEB////" +
           "/wAAAAA=";

        private const string UnlinkProduct_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYYIKBAAA" +
           "AAEADQAAAFVubGlua1Byb2R1Y3QBAeICAC8BAeIC4gIAAAEB/////wIAAAAXYKkKAgAAAAAADgAAAElu" +
           "cHV0QXJndW1lbnRzAQHjAgAuAETjAgAAlgAAAAABACgBAQAAAAEAAAABAAAAAQH/////AAAAABdgqQoC" +
           "AAAAAAAPAAAAT3V0cHV0QXJndW1lbnRzAQHkAgAuAETkAgAAlgAAAAABACgBAQAAAAEAAAABAAAAAQH/" +
           "////AAAAAA==";

        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAEgAAAFJlY2lwZVR5cGVJbnN0YW5jZQEBwgIBAcIC/////woAAAA1YIkKAgAAAAEACgAAAEV4dGVy" +
           "bmFsSWQBAcMCAwAAAAByAAAAUmVjaXBlIElEIGZvciBpZGVudGlmeWluZyB0aGUgcmVjaXBlIG91dHNp" +
           "ZGUgdGhlIHZpc2lvbiBzeXN0ZW0uIFRoZSBFeHRlcm5hbElEIGlzIG9ubHkgbWFuYWdlZCBieSB0aGUg" +
           "aG9zdCBzeXN0ZW0uAC4ARMMCAAABAQsA/////wMD/////wAAAAAkYIAKAQAAAAEABgAAAEhhbmRsZQEB" +
           "xAIDAAAAAKYAAABUaGUgZmlsZSBoYW5kbGUgcmVmZXJzIHRvIHRoZSByZWNpcGUgZGF0YSwgd2hpY2gg" +
           "YXJlIHRlYXRlZCBhcyBhIEJMT0IsIGkuZS4gdGhleSBhcmUgbm90IGludGVycHJldGVkIG91dHNpZGUg" +
           "dGhlIHN5c3RlbS4gVGhleSBhcmUgYWNjZXNzZWQgdmlhIE9QQyBVQSBmaWxlIG9wZXJhdGlvbnMuAC8B" +
           "ADctxAIAAP////8KAAAANWCJCgIAAAAAAAQAAABTaXplAQHFAgMAAAAAHgAAAFRoZSBzaXplIG9mIHRo" +
           "ZSBmaWxlIGluIGJ5dGVzLgAuAETFAgAAAAn/////AQH/////AAAAADVgiQoCAAAAAAAIAAAAV3JpdGFi" +
           "bGUBAcYCAwAAAAAdAAAAV2hldGhlciB0aGUgZmlsZSBpcyB3cml0YWJsZS4ALgBExgIAAAAB/////wEB" +
           "/////wAAAAA1YIkKAgAAAAAADAAAAFVzZXJXcml0YWJsZQEBxwIDAAAAADEAAABXaGV0aGVyIHRoZSBm" +
           "aWxlIGlzIHdyaXRhYmxlIGJ5IHRoZSBjdXJyZW50IHVzZXIuAC4ARMcCAAAAAf////8BAf////8AAAAA" +
           "NWCJCgIAAAAAAAkAAABPcGVuQ291bnQBAcgCAwAAAAAoAAAAVGhlIGN1cnJlbnQgbnVtYmVyIG9mIG9w" +
           "ZW4gZmlsZSBoYW5kbGVzLgAuAETIAgAAAAX/////AQH/////AAAAAARhggoEAAAAAAAEAAAAT3BlbgEB" +
           "ygIALwEAPC3KAgAAAQH/////AgAAABVgqQoCAAAAAAAOAAAASW5wdXRBcmd1bWVudHMBAcsCAC4ARMsC" +
           "AACWAQAAAAEAKgEBEwAAAAQAAABNb2RlAAP/////AAAAAAABACgBAQAAAAEB/////wAAAAAVYKkKAgAA" +
           "AAAADwAAAE91dHB1dEFyZ3VtZW50cwEBzAIALgBEzAIAAJYBAAAAAQAqAQEZAAAACgAAAEZpbGVIYW5k" +
           "bGUAB/////8AAAAAAAEAKAEBAAAAAQH/////AAAAAARhggoEAAAAAAAFAAAAQ2xvc2UBAc0CAC8BAD8t" +
           "zQIAAAEB/////wEAAAAVYKkKAgAAAAAADgAAAElucHV0QXJndW1lbnRzAQHOAgAuAETOAgAAlgEAAAAB" +
           "ACoBARkAAAAKAAAARmlsZUhhbmRsZQAH/////wAAAAAAAQAoAQEAAAABAf////8AAAAABGGCCgQAAAAA" +
           "AAQAAABSZWFkAQHPAgAvAQBBLc8CAAABAf////8CAAAAFWCpCgIAAAAAAA4AAABJbnB1dEFyZ3VtZW50" +
           "cwEB0AIALgBE0AIAAJYCAAAAAQAqAQEZAAAACgAAAEZpbGVIYW5kbGUAB/////8AAAAAAAEAKgEBFQAA" +
           "AAYAAABMZW5ndGgABv////8AAAAAAAEAKAEBAAAAAQH/////AAAAABVgqQoCAAAAAAAPAAAAT3V0cHV0" +
           "QXJndW1lbnRzAQHRAgAuAETRAgAAlgEAAAABACoBARMAAAAEAAAARGF0YQAP/////wAAAAAAAQAoAQEA" +
           "AAABAf////8AAAAABGGCCgQAAAAAAAUAAABXcml0ZQEB0gIALwEARC3SAgAAAQH/////AQAAABVgqQoC" +
           "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";
        #endregion
        #endif
        #endregion

        #region Public Properties
        /// <summary>
        /// Recipe ID for identifying the recipe outside the vision system. The ExternalID is only managed by the host system.
        /// </summary>
        public PropertyState<RecipeIdExternalDataType> ExternalId
        {
            get
            {
                return m_externalId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_externalId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_externalId = value;
            }
        }

        /// <summary>
        /// The file handle refers to the recipe data, which are teated as a BLOB, i.e. they are not interpreted outside the system. They are accessed via OPC UA file operations.
        /// </summary>
        public FileState Handle
        {
            get
            {
                return m_handle;
            }

            set
            {
                if (!Object.ReferenceEquals(m_handle, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_handle = value;
            }
        }

        /// <summary>
        /// System-wide unique ID for identifying a recipe. This ID is assigned by the vision system.
        /// </summary>
        public PropertyState<RecipeIdInternalDataType> InternalId
        {
            get
            {
                return m_ınternalId;
            }

            set
            {
                if (!Object.ReferenceEquals(m_ınternalId, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_ınternalId = value;
            }
        }

        /// <summary>
        /// A description for the IsPrepared Property.
        /// </summary>
        public PropertyState<bool> IsPrepared
        {
            get
            {
                return m_ısPrepared;
            }

            set
            {
                if (!Object.ReferenceEquals(m_ısPrepared, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_ısPrepared = value;
            }
        }

        /// <summary>
        /// The time when this recipe was last modified.
        /// </summary>
        public PropertyState<DateTime> LastModified
        {
            get
            {
                return m_lastModified;
            }

            set
            {
                if (!Object.ReferenceEquals(m_lastModified, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_lastModified = value;
            }
        }

        /// <summary>
        /// A description for the LinkedProducts Property.
        /// </summary>
        public PropertyState<ProductIdDataType[]> LinkedProducts
        {
            get
            {
                return m_linkedProducts;
            }

            set
            {
                if (!Object.ReferenceEquals(m_linkedProducts, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_linkedProducts = value;
            }
        }

        /// <summary>
        /// A description for the LinkProduct Method.
        /// </summary>
        public MethodState LinkProduct
        {
            get
            {
                return m_linkProductMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_linkProductMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_linkProductMethod = value;
            }
        }

        /// <summary>
        /// A description for the Prepare Method.
        /// </summary>
        public MethodState Prepare
        {
            get
            {
                return m_prepareMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_prepareMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_prepareMethod = value;
            }
        }

        /// <summary>
        /// A description for the UnlinkProduct Method.
        /// </summary>
        public MethodState UnlinkProduct
        {
            get
            {
                return m_unlinkProductMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_unlinkProductMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_unlinkProductMethod = value;
            }
        }

        /// <summary>
        /// A description for the Unprepare Method.
        /// </summary>
        public MethodState Unprepare
        {
            get
            {
                return m_unprepareMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_unprepareMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_unprepareMethod = value;
            }
        }
        #endregion

        #region Overridden Methods
        /// <summary>
        /// Populates a list with the children that belong to the node.
        /// </summary>
        /// <param name="context">The context for the system being accessed.</param>
        /// <param name="children">The list of children to populate.</param>
        public override void GetChildren(
            ISystemContext context,
            IList<BaseInstanceState> children)
        {
            if (m_externalId != null)
            {
                children.Add(m_externalId);
            }

            if (m_handle != null)
            {
                children.Add(m_handle);
            }

            if (m_ınternalId != null)
            {
                children.Add(m_ınternalId);
            }

            if (m_ısPrepared != null)
            {
                children.Add(m_ısPrepared);
            }

            if (m_lastModified != null)
            {
                children.Add(m_lastModified);
            }

            if (m_linkedProducts != null)
            {
                children.Add(m_linkedProducts);
            }

            if (m_linkProductMethod != null)
            {
                children.Add(m_linkProductMethod);
            }

            if (m_prepareMethod != null)
            {
                children.Add(m_prepareMethod);
            }

            if (m_unlinkProductMethod != null)
            {
                children.Add(m_unlinkProductMethod);
            }

            if (m_unprepareMethod != null)
            {
                children.Add(m_unprepareMethod);
            }

            base.GetChildren(context, children);
        }

        /// <summary>
        /// Finds the child with the specified browse name.
        /// </summary>
        protected override BaseInstanceState FindChild(
            ISystemContext context,
            QualifiedName browseName,
            bool createOrReplace,
            BaseInstanceState replacement)
        {
            if (QualifiedName.IsNull(browseName))
            {
                return null;
            }

            BaseInstanceState instance = null;

            switch (browseName.Name)
            {
                case Prefix2.BrowseNames.ExternalId:
                {
                    if (createOrReplace)
                    {
                        if (ExternalId == null)
                        {
                            if (replacement == null)
                            {
                                ExternalId = new PropertyState<RecipeIdExternalDataType>(this);
                            }
                            else
                            {
                                ExternalId = (PropertyState<RecipeIdExternalDataType>)replacement;
                            }
                        }
                    }

                    instance = ExternalId;
                    break;
                }

                case Prefix2.BrowseNames.Handle:
                {
                    if (createOrReplace)
                    {
                        if (Handle == null)
                        {
                            if (replacement == null)
                            {
                                Handle = new FileState(this);
                            }
                            else
                            {
                                Handle = (FileState)replacement;
                            }
                        }
                    }

                    instance = Handle;
                    break;
                }

                case Prefix2.BrowseNames.InternalId:
                {
                    if (createOrReplace)
                    {
                        if (InternalId == null)
                        {
                            if (replacement == null)
                            {
                                InternalId = new PropertyState<RecipeIdInternalDataType>(this);
                            }
                            else
                            {
                                InternalId = (PropertyState<RecipeIdInternalDataType>)replacement;
                            }
                        }
                    }

                    instance = InternalId;
                    break;
                }

                case Prefix2.BrowseNames.IsPrepared:
                {
                    if (createOrReplace)
                    {
                        if (IsPrepared == null)
                        {
                            if (replacement == null)
                            {
                                IsPrepared = new PropertyState<bool>(this);
                            }
                            else
                            {
                                IsPrepared = (PropertyState<bool>)replacement;
                            }
                        }
                    }

                    instance = IsPrepared;
                    break;
                }

                case Prefix2.BrowseNames.LastModified:
                {
                    if (createOrReplace)
                    {
                        if (LastModified == null)
                        {
                            if (replacement == null)
                            {
                                LastModified = new PropertyState<DateTime>(this);
                            }
                            else
                            {
                                LastModified = (PropertyState<DateTime>)replacement;
                            }
                        }
                    }

                    instance = LastModified;
                    break;
                }

                case Prefix2.BrowseNames.LinkedProducts:
                {
                    if (createOrReplace)
                    {
                        if (LinkedProducts == null)
                        {
                            if (replacement == null)
                            {
                                LinkedProducts = new PropertyState<ProductIdDataType[]>(this);
                            }
                            else
                            {
                                LinkedProducts = (PropertyState<ProductIdDataType[]>)replacement;
                            }
                        }
                    }

                    instance = LinkedProducts;
                    break;
                }

                case Prefix2.BrowseNames.LinkProduct:
                {
                    if (createOrReplace)
                    {
                        if (LinkProduct == null)
                        {
                            if (replacement == null)
                            {
                                LinkProduct = new MethodState(this);
                            }
                            else
                            {
                                LinkProduct = (MethodState)replacement;
                            }
                        }
                    }

                    instance = LinkProduct;
                    break;
                }

                case Prefix2.BrowseNames.Prepare:
                {
                    if (createOrReplace)
                    {
                        if (Prepare == null)
                        {
                            if (replacement == null)
                            {
                                Prepare = new MethodState(this);
                            }
                            else
                            {
                                Prepare = (MethodState)replacement;
                            }
                        }
                    }

                    instance = Prepare;
                    break;
                }

                case Prefix2.BrowseNames.UnlinkProduct:
                {
                    if (createOrReplace)
                    {
                        if (UnlinkProduct == null)
                        {
                            if (replacement == null)
                            {
                                UnlinkProduct = new MethodState(this);
                            }
                            else
                            {
                                UnlinkProduct = (MethodState)replacement;
                            }
                        }
                    }

                    instance = UnlinkProduct;
                    break;
                }

                case Prefix2.BrowseNames.Unprepare:
                {
                    if (createOrReplace)
                    {
                        if (Unprepare == null)
                        {
                            if (replacement == null)
                            {
                                Unprepare = new MethodState(this);
                            }
                            else
                            {
                                Unprepare = (MethodState)replacement;
                            }
                        }
                    }

                    instance = Unprepare;
                    break;
                }
            }

            if (instance != null)
            {
                return instance;
            }

            return base.FindChild(context, browseName, createOrReplace, replacement);
        }
        #endregion

        #region Private Fields
        private PropertyState<RecipeIdExternalDataType> m_externalId;
        private FileState m_handle;
        private PropertyState<RecipeIdInternalDataType> m_ınternalId;
        private PropertyState<bool> m_ısPrepared;
        private PropertyState<DateTime> m_lastModified;
        private PropertyState<ProductIdDataType[]> m_linkedProducts;
        private MethodState m_linkProductMethod;
        private MethodState m_prepareMethod;
        private MethodState m_unlinkProductMethod;
        private MethodState m_unprepareMethod;
        #endregion
    }
    #endif
    #endregion

    #region ResultFolderState Class
    #if (!OPCUA_EXCLUDE_ResultFolderState)
    /// <summary>
    /// Stores an instance of the ResultFolderType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class ResultFolderState : FolderState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public ResultFolderState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.ResultFolderType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);
        }

        #region Initialization String
        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAGAAAAFJlc3VsdEZvbGRlclR5cGVJbnN0YW5jZQEB5wIBAecC/////wAAAAA=";
        #endregion
        #endif
        #endregion

        #region Public Properties
        #endregion

        #region Overridden Methods
        #endregion

        #region Private Fields
        #endregion
    }
    #endif
    #endregion

    #region RecipeManagementState Class
    #if (!OPCUA_EXCLUDE_RecipeManagementState)
    /// <summary>
    /// Stores an instance of the RecipeManagementType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class RecipeManagementState : BaseObjectState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public RecipeManagementState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.RecipeManagementType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);

            if (AddRecipe != null)
            {
                AddRecipe.Initialize(context, AddRecipe_InitializationString);
            }

            if (PrepareProduct != null)
            {
                PrepareProduct.Initialize(context, PrepareProduct_InitializationString);
            }

            if (Products != null)
            {
                Products.Initialize(context, Products_InitializationString);
            }

            if (Recipes != null)
            {
                Recipes.Initialize(context, Recipes_InitializationString);
            }

            if (RecipeTransfer != null)
            {
                RecipeTransfer.Initialize(context, RecipeTransfer_InitializationString);
            }

            if (ReleaseRecipeHandle != null)
            {
                ReleaseRecipeHandle.Initialize(context, ReleaseRecipeHandle_InitializationString);
            }

            if (RemoveRecipe != null)
            {
                RemoveRecipe.Initialize(context, RemoveRecipe_InitializationString);
            }

            if (UnlinkProduct != null)
            {
                UnlinkProduct.Initialize(context, UnlinkProduct_InitializationString);
            }

            if (UnprepareProduct != null)
            {
                UnprepareProduct.Initialize(context, UnprepareProduct_InitializationString);
            }
        }

        #region Initialization String
        private const string AddRecipe_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYYIKBAAA" +
           "AAEACQAAAEFkZFJlY2lwZQEB+gIALwEB+gL6AgAAAQH/////AgAAABdgqQoCAAAAAAAOAAAASW5wdXRB" +
           "cmd1bWVudHMBAfsCAC4ARPsCAACWAAAAAAEAKAEBAAAAAQAAAAIAAAABAf////8AAAAAF2CpCgIAAAAA" +
           "AA8AAABPdXRwdXRBcmd1bWVudHMBAfwCAC4ARPwCAACWAAAAAAEAKAEBAAAAAQAAAAUAAAABAf////8A" +
           "AAAA";

        private const string PrepareProduct_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYYIKBAAA" +
           "AAEADgAAAFByZXBhcmVQcm9kdWN0AQEAAwAvAQEAAwADAAABAf////8CAAAAF2CpCgIAAAAAAA4AAABJ" +
           "bnB1dEFyZ3VtZW50cwEBAQMALgBEAQMAAJYAAAAAAQAoAQEAAAABAAAAAQAAAAEB/////wAAAAAXYKkK" +
           "AgAAAAAADwAAAE91dHB1dEFyZ3VtZW50cwEBAgMALgBEAgMAAJYAAAAAAQAoAQEAAAABAAAAAgAAAAEB" +
           "/////wAAAAA=";

        private const string Products_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAKAQAA" +
           "AAEACAAAAFByb2R1Y3RzAQEGAwAvAQGaAgYDAAD/////AAAAAA==";

        private const string Recipes_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAKAQAA" +
           "AAEABwAAAFJlY2lwZXMBAQcDAC8BAZwCBwMAAP////8AAAAA";

        private const string RecipeTransfer_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAKAQAA" +
           "AAEADgAAAFJlY2lwZVRyYW5zZmVyAQEIAwAvAQEiAwgDAAD/////BAAAABVgiQoCAAAAAAAXAAAAQ2xp" +
           "ZW50UHJvY2Vzc2luZ1RpbWVvdXQBAQkDAC4ARAkDAAABACIB/////wEB/////wAAAAAEYYIKBAAAAAAA" +
           "EwAAAEdlbmVyYXRlRmlsZUZvclJlYWQBAQoDAC8BAII9CgMAAAEB/////wIAAAAXYKkKAgAAAAAADgAA" +
           "AElucHV0QXJndW1lbnRzAQELAwAuAEQLAwAAlgAAAAABACgBAQAAAAEAAAABAAAAAQH/////AAAAABdg" +
           "qQoCAAAAAAAPAAAAT3V0cHV0QXJndW1lbnRzAQEMAwAuAEQMAwAAlgAAAAABACgBAQAAAAEAAAADAAAA" +
           "AQH/////AAAAAARhggoEAAAAAAAUAAAAR2VuZXJhdGVGaWxlRm9yV3JpdGUBAQ0DAC8BAIU9DQMAAAEB" +
           "/////wIAAAAXYKkKAgAAAAAADgAAAElucHV0QXJndW1lbnRzAQEOAwAuAEQOAwAAlgAAAAABACgBAQAA" +
           "AAEAAAABAAAAAQH/////AAAAABdgqQoCAAAAAAAPAAAAT3V0cHV0QXJndW1lbnRzAQEPAwAuAEQPAwAA" +
           "lgAAAAABACgBAQAAAAEAAAACAAAAAQH/////AAAAAARhggoEAAAAAAAOAAAAQ2xvc2VBbmRDb21taXQB" +
           "ARADAC8BAIc9EAMAAAEB/////wIAAAAXYKkKAgAAAAAADgAAAElucHV0QXJndW1lbnRzAQERAwAuAEQR" +
           "AwAAlgAAAAABACgBAQAAAAEAAAABAAAAAQH/////AAAAABdgqQoCAAAAAAAPAAAAT3V0cHV0QXJndW1l" +
           "bnRzAQESAwAuAEQSAwAAlgAAAAABACgBAQAAAAEAAAABAAAAAQH/////AAAAAA==";

        private const string ReleaseRecipeHandle_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYYIKBAAA" +
           "AAEAEwAAAFJlbGVhc2VSZWNpcGVIYW5kbGUBARMDAC8BARMDEwMAAAEB/////wIAAAAXYKkKAgAAAAAA" +
           "DgAAAElucHV0QXJndW1lbnRzAQEUAwAuAEQUAwAAlgAAAAABACgBAQAAAAEAAAABAAAAAQH/////AAAA" +
           "ABdgqQoCAAAAAAAPAAAAT3V0cHV0QXJndW1lbnRzAQEVAwAuAEQVAwAAlgAAAAABACgBAQAAAAEAAAAB" +
           "AAAAAQH/////AAAAAA==";

        private const string RemoveRecipe_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYYIKBAAA" +
           "AAEADAAAAFJlbW92ZVJlY2lwZQEBFgMALwEBFgMWAwAAAQH/////AgAAABdgqQoCAAAAAAAOAAAASW5w" +
           "dXRBcmd1bWVudHMBARcDAC4ARBcDAACWAAAAAAEAKAEBAAAAAQAAAAEAAAABAf////8AAAAAF2CpCgIA" +
           "AAAAAA8AAABPdXRwdXRBcmd1bWVudHMBARgDAC4ARBgDAACWAAAAAAEAKAEBAAAAAQAAAAEAAAABAf//" +
           "//8AAAAA";

        private const string UnlinkProduct_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYYIKBAAA" +
           "AAEADQAAAFVubGlua1Byb2R1Y3QBARkDAC8BARkDGQMAAAEB/////wIAAAAXYKkKAgAAAAAADgAAAElu" +
           "cHV0QXJndW1lbnRzAQEaAwAuAEQaAwAAlgAAAAABACgBAQAAAAEAAAACAAAAAQH/////AAAAABdgqQoC" +
           "AAAAAAAPAAAAT3V0cHV0QXJndW1lbnRzAQEbAwAuAEQbAwAAlgAAAAABACgBAQAAAAEAAAABAAAAAQH/" +
           "////AAAAAA==";

        private const string UnprepareProduct_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYYIKBAAA" +
           "AAEAEAAAAFVucHJlcGFyZVByb2R1Y3QBARwDAC8BARwDHAMAAAEB/////wIAAAAXYKkKAgAAAAAADgAA" +
           "AElucHV0QXJndW1lbnRzAQEdAwAuAEQdAwAAlgAAAAABACgBAQAAAAEAAAABAAAAAQH/////AAAAABdg" +
           "qQoCAAAAAAAPAAAAT3V0cHV0QXJndW1lbnRzAQEeAwAuAEQeAwAAlgAAAAABACgBAQAAAAEAAAACAAAA" +
           "AQH/////AAAAAA==";

        private const string InitializationString =
           "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";
        #endregion
        #endif
        #endregion

        #region Public Properties
        /// <summary>
        /// A description for the AddRecipe Method.
        /// </summary>
        public MethodState AddRecipe
        {
            get
            {
                return m_addRecipeMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_addRecipeMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_addRecipeMethod = value;
            }
        }

        /// <summary>
        /// A description for the GetRecipeListFiltered Method.
        /// </summary>
        public MethodState GetRecipeListFiltered
        {
            get
            {
                return m_getRecipeListFilteredMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_getRecipeListFilteredMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_getRecipeListFilteredMethod = value;
            }
        }

        /// <summary>
        /// A description for the PrepareProduct Method.
        /// </summary>
        public MethodState PrepareProduct
        {
            get
            {
                return m_prepareProductMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_prepareProductMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_prepareProductMethod = value;
            }
        }

        /// <summary>
        /// A description for the PrepareRecipe Method.
        /// </summary>
        public MethodState PrepareRecipe
        {
            get
            {
                return m_prepareRecipeMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_prepareRecipeMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_prepareRecipeMethod = value;
            }
        }

        /// <summary>
        /// A description for the Products Object.
        /// </summary>
        public ProductFolderState Products
        {
            get
            {
                return m_products;
            }

            set
            {
                if (!Object.ReferenceEquals(m_products, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_products = value;
            }
        }

        /// <summary>
        /// A description for the Recipes Object.
        /// </summary>
        public RecipeFolderState Recipes
        {
            get
            {
                return m_recipes;
            }

            set
            {
                if (!Object.ReferenceEquals(m_recipes, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_recipes = value;
            }
        }

        /// <summary>
        /// A description for the RecipeTransfer Object.
        /// </summary>
        public RecipeTransferState RecipeTransfer
        {
            get
            {
                return m_recipeTransfer;
            }

            set
            {
                if (!Object.ReferenceEquals(m_recipeTransfer, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_recipeTransfer = value;
            }
        }

        /// <summary>
        /// A description for the ReleaseRecipeHandle Method.
        /// </summary>
        public MethodState ReleaseRecipeHandle
        {
            get
            {
                return m_releaseRecipeHandleMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_releaseRecipeHandleMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_releaseRecipeHandleMethod = value;
            }
        }

        /// <summary>
        /// A description for the RemoveRecipe Method.
        /// </summary>
        public MethodState RemoveRecipe
        {
            get
            {
                return m_removeRecipeMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_removeRecipeMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_removeRecipeMethod = value;
            }
        }

        /// <summary>
        /// A description for the UnlinkProduct Method.
        /// </summary>
        public MethodState UnlinkProduct
        {
            get
            {
                return m_unlinkProductMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_unlinkProductMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_unlinkProductMethod = value;
            }
        }

        /// <summary>
        /// A description for the UnprepareProduct Method.
        /// </summary>
        public MethodState UnprepareProduct
        {
            get
            {
                return m_unprepareProductMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_unprepareProductMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_unprepareProductMethod = value;
            }
        }

        /// <summary>
        /// A description for the UnprepareRecipe Method.
        /// </summary>
        public MethodState UnprepareRecipe
        {
            get
            {
                return m_unprepareRecipeMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_unprepareRecipeMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_unprepareRecipeMethod = value;
            }
        }
        #endregion

        #region Overridden Methods
        /// <summary>
        /// Populates a list with the children that belong to the node.
        /// </summary>
        /// <param name="context">The context for the system being accessed.</param>
        /// <param name="children">The list of children to populate.</param>
        public override void GetChildren(
            ISystemContext context,
            IList<BaseInstanceState> children)
        {
            if (m_addRecipeMethod != null)
            {
                children.Add(m_addRecipeMethod);
            }

            if (m_getRecipeListFilteredMethod != null)
            {
                children.Add(m_getRecipeListFilteredMethod);
            }

            if (m_prepareProductMethod != null)
            {
                children.Add(m_prepareProductMethod);
            }

            if (m_prepareRecipeMethod != null)
            {
                children.Add(m_prepareRecipeMethod);
            }

            if (m_products != null)
            {
                children.Add(m_products);
            }

            if (m_recipes != null)
            {
                children.Add(m_recipes);
            }

            if (m_recipeTransfer != null)
            {
                children.Add(m_recipeTransfer);
            }

            if (m_releaseRecipeHandleMethod != null)
            {
                children.Add(m_releaseRecipeHandleMethod);
            }

            if (m_removeRecipeMethod != null)
            {
                children.Add(m_removeRecipeMethod);
            }

            if (m_unlinkProductMethod != null)
            {
                children.Add(m_unlinkProductMethod);
            }

            if (m_unprepareProductMethod != null)
            {
                children.Add(m_unprepareProductMethod);
            }

            if (m_unprepareRecipeMethod != null)
            {
                children.Add(m_unprepareRecipeMethod);
            }

            base.GetChildren(context, children);
        }

        /// <summary>
        /// Finds the child with the specified browse name.
        /// </summary>
        protected override BaseInstanceState FindChild(
            ISystemContext context,
            QualifiedName browseName,
            bool createOrReplace,
            BaseInstanceState replacement)
        {
            if (QualifiedName.IsNull(browseName))
            {
                return null;
            }

            BaseInstanceState instance = null;

            switch (browseName.Name)
            {
                case Prefix2.BrowseNames.AddRecipe:
                {
                    if (createOrReplace)
                    {
                        if (AddRecipe == null)
                        {
                            if (replacement == null)
                            {
                                AddRecipe = new MethodState(this);
                            }
                            else
                            {
                                AddRecipe = (MethodState)replacement;
                            }
                        }
                    }

                    instance = AddRecipe;
                    break;
                }

                case Prefix2.BrowseNames.GetRecipeListFiltered:
                {
                    if (createOrReplace)
                    {
                        if (GetRecipeListFiltered == null)
                        {
                            if (replacement == null)
                            {
                                GetRecipeListFiltered = new MethodState(this);
                            }
                            else
                            {
                                GetRecipeListFiltered = (MethodState)replacement;
                            }
                        }
                    }

                    instance = GetRecipeListFiltered;
                    break;
                }

                case Prefix2.BrowseNames.PrepareProduct:
                {
                    if (createOrReplace)
                    {
                        if (PrepareProduct == null)
                        {
                            if (replacement == null)
                            {
                                PrepareProduct = new MethodState(this);
                            }
                            else
                            {
                                PrepareProduct = (MethodState)replacement;
                            }
                        }
                    }

                    instance = PrepareProduct;
                    break;
                }

                case Prefix2.BrowseNames.PrepareRecipe:
                {
                    if (createOrReplace)
                    {
                        if (PrepareRecipe == null)
                        {
                            if (replacement == null)
                            {
                                PrepareRecipe = new MethodState(this);
                            }
                            else
                            {
                                PrepareRecipe = (MethodState)replacement;
                            }
                        }
                    }

                    instance = PrepareRecipe;
                    break;
                }

                case Prefix2.BrowseNames.Products:
                {
                    if (createOrReplace)
                    {
                        if (Products == null)
                        {
                            if (replacement == null)
                            {
                                Products = new ProductFolderState(this);
                            }
                            else
                            {
                                Products = (ProductFolderState)replacement;
                            }
                        }
                    }

                    instance = Products;
                    break;
                }

                case Prefix2.BrowseNames.Recipes:
                {
                    if (createOrReplace)
                    {
                        if (Recipes == null)
                        {
                            if (replacement == null)
                            {
                                Recipes = new RecipeFolderState(this);
                            }
                            else
                            {
                                Recipes = (RecipeFolderState)replacement;
                            }
                        }
                    }

                    instance = Recipes;
                    break;
                }

                case Prefix2.BrowseNames.RecipeTransfer:
                {
                    if (createOrReplace)
                    {
                        if (RecipeTransfer == null)
                        {
                            if (replacement == null)
                            {
                                RecipeTransfer = new RecipeTransferState(this);
                            }
                            else
                            {
                                RecipeTransfer = (RecipeTransferState)replacement;
                            }
                        }
                    }

                    instance = RecipeTransfer;
                    break;
                }

                case Prefix2.BrowseNames.ReleaseRecipeHandle:
                {
                    if (createOrReplace)
                    {
                        if (ReleaseRecipeHandle == null)
                        {
                            if (replacement == null)
                            {
                                ReleaseRecipeHandle = new MethodState(this);
                            }
                            else
                            {
                                ReleaseRecipeHandle = (MethodState)replacement;
                            }
                        }
                    }

                    instance = ReleaseRecipeHandle;
                    break;
                }

                case Prefix2.BrowseNames.RemoveRecipe:
                {
                    if (createOrReplace)
                    {
                        if (RemoveRecipe == null)
                        {
                            if (replacement == null)
                            {
                                RemoveRecipe = new MethodState(this);
                            }
                            else
                            {
                                RemoveRecipe = (MethodState)replacement;
                            }
                        }
                    }

                    instance = RemoveRecipe;
                    break;
                }

                case Prefix2.BrowseNames.UnlinkProduct:
                {
                    if (createOrReplace)
                    {
                        if (UnlinkProduct == null)
                        {
                            if (replacement == null)
                            {
                                UnlinkProduct = new MethodState(this);
                            }
                            else
                            {
                                UnlinkProduct = (MethodState)replacement;
                            }
                        }
                    }

                    instance = UnlinkProduct;
                    break;
                }

                case Prefix2.BrowseNames.UnprepareProduct:
                {
                    if (createOrReplace)
                    {
                        if (UnprepareProduct == null)
                        {
                            if (replacement == null)
                            {
                                UnprepareProduct = new MethodState(this);
                            }
                            else
                            {
                                UnprepareProduct = (MethodState)replacement;
                            }
                        }
                    }

                    instance = UnprepareProduct;
                    break;
                }

                case Prefix2.BrowseNames.UnprepareRecipe:
                {
                    if (createOrReplace)
                    {
                        if (UnprepareRecipe == null)
                        {
                            if (replacement == null)
                            {
                                UnprepareRecipe = new MethodState(this);
                            }
                            else
                            {
                                UnprepareRecipe = (MethodState)replacement;
                            }
                        }
                    }

                    instance = UnprepareRecipe;
                    break;
                }
            }

            if (instance != null)
            {
                return instance;
            }

            return base.FindChild(context, browseName, createOrReplace, replacement);
        }
        #endregion

        #region Private Fields
        private MethodState m_addRecipeMethod;
        private MethodState m_getRecipeListFilteredMethod;
        private MethodState m_prepareProductMethod;
        private MethodState m_prepareRecipeMethod;
        private ProductFolderState m_products;
        private RecipeFolderState m_recipes;
        private RecipeTransferState m_recipeTransfer;
        private MethodState m_releaseRecipeHandleMethod;
        private MethodState m_removeRecipeMethod;
        private MethodState m_unlinkProductMethod;
        private MethodState m_unprepareProductMethod;
        private MethodState m_unprepareRecipeMethod;
        #endregion
    }
    #endif
    #endregion

    #region RecipeTransferState Class
    #if (!OPCUA_EXCLUDE_RecipeTransferState)
    /// <summary>
    /// Stores an instance of the RecipeTransferType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class RecipeTransferState : TemporaryFileTransferState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public RecipeTransferState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.RecipeTransferType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);
        }

        #region Initialization String
        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAGgAAAFJlY2lwZVRyYW5zZmVyVHlwZUluc3RhbmNlAQEiAwEBIgP/////BAAAABVgiQoCAAAAAAAX" +
           "AAAAQ2xpZW50UHJvY2Vzc2luZ1RpbWVvdXQBASMDAC4ARCMDAAABACIB/////wEB/////wAAAAAEYYIK" +
           "BAAAAAAAEwAAAEdlbmVyYXRlRmlsZUZvclJlYWQBASQDAC8BAII9JAMAAAEB/////wIAAAAXYKkKAgAA" +
           "AAAADgAAAElucHV0QXJndW1lbnRzAQElAwAuAEQlAwAAlgAAAAABACgBAQAAAAEAAAABAAAAAQH/////" +
           "AAAAABdgqQoCAAAAAAAPAAAAT3V0cHV0QXJndW1lbnRzAQEmAwAuAEQmAwAAlgAAAAABACgBAQAAAAEA" +
           "AAADAAAAAQH/////AAAAAARhggoEAAAAAAAUAAAAR2VuZXJhdGVGaWxlRm9yV3JpdGUBAScDAC8BAIU9" +
           "JwMAAAEB/////wIAAAAXYKkKAgAAAAAADgAAAElucHV0QXJndW1lbnRzAQEoAwAuAEQoAwAAlgAAAAAB" +
           "ACgBAQAAAAEAAAABAAAAAQH/////AAAAABdgqQoCAAAAAAAPAAAAT3V0cHV0QXJndW1lbnRzAQEpAwAu" +
           "AEQpAwAAlgAAAAABACgBAQAAAAEAAAACAAAAAQH/////AAAAAARhggoEAAAAAAAOAAAAQ2xvc2VBbmRD" +
           "b21taXQBASoDAC8BAIc9KgMAAAEB/////wIAAAAVYKkKAgAAAAAADgAAAElucHV0QXJndW1lbnRzAQEr" +
           "AwAuAEQrAwAAlgEAAAABACoBARkAAAAKAAAARmlsZUhhbmRsZQAH/////wAAAAAAAQAoAQEAAAABAf//" +
           "//8AAAAAFWCpCgIAAAAAAA8AAABPdXRwdXRBcmd1bWVudHMBASwDAC4ARCwDAACWAQAAAAEAKgEBJQAA" +
           "ABYAAABDb21wbGV0aW9uU3RhdGVNYWNoaW5lABH/////AAAAAAABACgBAQAAAAEB/////wAAAAA=";
        #endregion
        #endif
        #endregion

        #region Public Properties
        #endregion

        #region Overridden Methods
        #endregion

        #region Private Fields
        #endregion
    }
    #endif
    #endregion

    #region ResultManagementState Class
    #if (!OPCUA_EXCLUDE_ResultManagementState)
    /// <summary>
    /// Stores an instance of the ResultManagementType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class ResultManagementState : BaseObjectState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public ResultManagementState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.ResultManagementType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);

            if (ReleaseResultHandle != null)
            {
                ReleaseResultHandle.Initialize(context, ReleaseResultHandle_InitializationString);
            }

            if (Results != null)
            {
                Results.Initialize(context, Results_InitializationString);
            }

            if (ResultTransfer != null)
            {
                ResultTransfer.Initialize(context, ResultTransfer_InitializationString);
            }
        }

        #region Initialization String
        private const string ReleaseResultHandle_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYYIKBAAA" +
           "AAEAEwAAAFJlbGVhc2VSZXN1bHRIYW5kbGUBAUYDAC8BAUYDRgMAAAEB/////wIAAAAXYKkKAgAAAAAA" +
           "DgAAAElucHV0QXJndW1lbnRzAQFHAwAuAERHAwAAlgAAAAABACgBAQAAAAEAAAABAAAAAQH/////AAAA" +
           "ABdgqQoCAAAAAAAPAAAAT3V0cHV0QXJndW1lbnRzAQFIAwAuAERIAwAAlgAAAAABACgBAQAAAAEAAAAB" +
           "AAAAAQH/////AAAAAA==";

        private const string Results_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAKAQAA" +
           "AAEABwAAAFJlc3VsdHMBAUkDAC8BAecCSQMAAP////8AAAAA";

        private const string ResultTransfer_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAKAQAA" +
           "AAEADgAAAFJlc3VsdFRyYW5zZmVyAQFKAwAvAQFVA0oDAAD/////BAAAABVgiQoCAAAAAAAXAAAAQ2xp" +
           "ZW50UHJvY2Vzc2luZ1RpbWVvdXQBAUsDAC4AREsDAAABACIB/////wEB/////wAAAAAEYYIKBAAAAAAA" +
           "EwAAAEdlbmVyYXRlRmlsZUZvclJlYWQBAUwDAC8BAII9TAMAAAEB/////wIAAAAXYKkKAgAAAAAADgAA" +
           "AElucHV0QXJndW1lbnRzAQFNAwAuAERNAwAAlgAAAAABACgBAQAAAAEAAAABAAAAAQH/////AAAAABdg" +
           "qQoCAAAAAAAPAAAAT3V0cHV0QXJndW1lbnRzAQFOAwAuAEROAwAAlgAAAAABACgBAQAAAAEAAAADAAAA" +
           "AQH/////AAAAAARhggoEAAAAAAAUAAAAR2VuZXJhdGVGaWxlRm9yV3JpdGUBAU8DAC8BAIU9TwMAAAEB" +
           "/////wIAAAAXYKkKAgAAAAAADgAAAElucHV0QXJndW1lbnRzAQFQAwAuAERQAwAAlgAAAAABACgBAQAA" +
           "AAEAAAABAAAAAQH/////AAAAABdgqQoCAAAAAAAPAAAAT3V0cHV0QXJndW1lbnRzAQFRAwAuAERRAwAA" +
           "lgAAAAABACgBAQAAAAEAAAACAAAAAQH/////AAAAAARhggoEAAAAAAAOAAAAQ2xvc2VBbmRDb21taXQB" +
           "AVIDAC8BAIc9UgMAAAEB/////wIAAAAXYKkKAgAAAAAADgAAAElucHV0QXJndW1lbnRzAQFTAwAuAERT" +
           "AwAAlgAAAAABACgBAQAAAAEAAAABAAAAAQH/////AAAAABdgqQoCAAAAAAAPAAAAT3V0cHV0QXJndW1l" +
           "bnRzAQFUAwAuAERUAwAAlgAAAAABACgBAQAAAAEAAAABAAAAAQH/////AAAAAA==";

        private const string InitializationString =
           "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";
        #endregion
        #endif
        #endregion

        #region Public Properties
        /// <summary>
        /// A description for the GetResultById Method.
        /// </summary>
        public MethodState GetResultById
        {
            get
            {
                return m_getResultByIdMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_getResultByIdMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_getResultByIdMethod = value;
            }
        }

        /// <summary>
        /// A description for the GetResultComponentsById Method.
        /// </summary>
        public MethodState GetResultComponentsById
        {
            get
            {
                return m_getResultComponentsByIdMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_getResultComponentsByIdMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_getResultComponentsByIdMethod = value;
            }
        }

        /// <summary>
        /// A description for the GetResultListFiltered Method.
        /// </summary>
        public MethodState GetResultListFiltered
        {
            get
            {
                return m_getResultListFilteredMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_getResultListFilteredMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_getResultListFilteredMethod = value;
            }
        }

        /// <summary>
        /// A description for the ReleaseResultHandle Method.
        /// </summary>
        public MethodState ReleaseResultHandle
        {
            get
            {
                return m_releaseResultHandleMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_releaseResultHandleMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_releaseResultHandleMethod = value;
            }
        }

        /// <summary>
        /// A description for the Results Object.
        /// </summary>
        public ResultFolderState Results
        {
            get
            {
                return m_results;
            }

            set
            {
                if (!Object.ReferenceEquals(m_results, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_results = value;
            }
        }

        /// <summary>
        /// A description for the ResultTransfer Object.
        /// </summary>
        public ResultTransferState ResultTransfer
        {
            get
            {
                return m_resultTransfer;
            }

            set
            {
                if (!Object.ReferenceEquals(m_resultTransfer, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_resultTransfer = value;
            }
        }
        #endregion

        #region Overridden Methods
        /// <summary>
        /// Populates a list with the children that belong to the node.
        /// </summary>
        /// <param name="context">The context for the system being accessed.</param>
        /// <param name="children">The list of children to populate.</param>
        public override void GetChildren(
            ISystemContext context,
            IList<BaseInstanceState> children)
        {
            if (m_getResultByIdMethod != null)
            {
                children.Add(m_getResultByIdMethod);
            }

            if (m_getResultComponentsByIdMethod != null)
            {
                children.Add(m_getResultComponentsByIdMethod);
            }

            if (m_getResultListFilteredMethod != null)
            {
                children.Add(m_getResultListFilteredMethod);
            }

            if (m_releaseResultHandleMethod != null)
            {
                children.Add(m_releaseResultHandleMethod);
            }

            if (m_results != null)
            {
                children.Add(m_results);
            }

            if (m_resultTransfer != null)
            {
                children.Add(m_resultTransfer);
            }

            base.GetChildren(context, children);
        }

        /// <summary>
        /// Finds the child with the specified browse name.
        /// </summary>
        protected override BaseInstanceState FindChild(
            ISystemContext context,
            QualifiedName browseName,
            bool createOrReplace,
            BaseInstanceState replacement)
        {
            if (QualifiedName.IsNull(browseName))
            {
                return null;
            }

            BaseInstanceState instance = null;

            switch (browseName.Name)
            {
                case Prefix2.BrowseNames.GetResultById:
                {
                    if (createOrReplace)
                    {
                        if (GetResultById == null)
                        {
                            if (replacement == null)
                            {
                                GetResultById = new MethodState(this);
                            }
                            else
                            {
                                GetResultById = (MethodState)replacement;
                            }
                        }
                    }

                    instance = GetResultById;
                    break;
                }

                case Prefix2.BrowseNames.GetResultComponentsById:
                {
                    if (createOrReplace)
                    {
                        if (GetResultComponentsById == null)
                        {
                            if (replacement == null)
                            {
                                GetResultComponentsById = new MethodState(this);
                            }
                            else
                            {
                                GetResultComponentsById = (MethodState)replacement;
                            }
                        }
                    }

                    instance = GetResultComponentsById;
                    break;
                }

                case Prefix2.BrowseNames.GetResultListFiltered:
                {
                    if (createOrReplace)
                    {
                        if (GetResultListFiltered == null)
                        {
                            if (replacement == null)
                            {
                                GetResultListFiltered = new MethodState(this);
                            }
                            else
                            {
                                GetResultListFiltered = (MethodState)replacement;
                            }
                        }
                    }

                    instance = GetResultListFiltered;
                    break;
                }

                case Prefix2.BrowseNames.ReleaseResultHandle:
                {
                    if (createOrReplace)
                    {
                        if (ReleaseResultHandle == null)
                        {
                            if (replacement == null)
                            {
                                ReleaseResultHandle = new MethodState(this);
                            }
                            else
                            {
                                ReleaseResultHandle = (MethodState)replacement;
                            }
                        }
                    }

                    instance = ReleaseResultHandle;
                    break;
                }

                case Prefix2.BrowseNames.Results:
                {
                    if (createOrReplace)
                    {
                        if (Results == null)
                        {
                            if (replacement == null)
                            {
                                Results = new ResultFolderState(this);
                            }
                            else
                            {
                                Results = (ResultFolderState)replacement;
                            }
                        }
                    }

                    instance = Results;
                    break;
                }

                case Prefix2.BrowseNames.ResultTransfer:
                {
                    if (createOrReplace)
                    {
                        if (ResultTransfer == null)
                        {
                            if (replacement == null)
                            {
                                ResultTransfer = new ResultTransferState(this);
                            }
                            else
                            {
                                ResultTransfer = (ResultTransferState)replacement;
                            }
                        }
                    }

                    instance = ResultTransfer;
                    break;
                }
            }

            if (instance != null)
            {
                return instance;
            }

            return base.FindChild(context, browseName, createOrReplace, replacement);
        }
        #endregion

        #region Private Fields
        private MethodState m_getResultByIdMethod;
        private MethodState m_getResultComponentsByIdMethod;
        private MethodState m_getResultListFilteredMethod;
        private MethodState m_releaseResultHandleMethod;
        private ResultFolderState m_results;
        private ResultTransferState m_resultTransfer;
        #endregion
    }
    #endif
    #endregion

    #region ResultTransferState Class
    #if (!OPCUA_EXCLUDE_ResultTransferState)
    /// <summary>
    /// Stores an instance of the ResultTransferType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class ResultTransferState : TemporaryFileTransferState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public ResultTransferState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.ResultTransferType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);
        }

        #region Initialization String
        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAGgAAAFJlc3VsdFRyYW5zZmVyVHlwZUluc3RhbmNlAQFVAwEBVQP/////BAAAABVgiQoCAAAAAAAX" +
           "AAAAQ2xpZW50UHJvY2Vzc2luZ1RpbWVvdXQBAVYDAC4ARFYDAAABACIB/////wEB/////wAAAAAEYYIK" +
           "BAAAAAAAEwAAAEdlbmVyYXRlRmlsZUZvclJlYWQBAVcDAC8BAII9VwMAAAEB/////wIAAAAXYKkKAgAA" +
           "AAAADgAAAElucHV0QXJndW1lbnRzAQFYAwAuAERYAwAAlgAAAAABACgBAQAAAAEAAAABAAAAAQH/////" +
           "AAAAABdgqQoCAAAAAAAPAAAAT3V0cHV0QXJndW1lbnRzAQFZAwAuAERZAwAAlgAAAAABACgBAQAAAAEA" +
           "AAADAAAAAQH/////AAAAAARhggoEAAAAAAAUAAAAR2VuZXJhdGVGaWxlRm9yV3JpdGUBAVoDAC8BAIU9" +
           "WgMAAAEB/////wIAAAAVYKkKAgAAAAAADgAAAElucHV0QXJndW1lbnRzAQFbAwAuAERbAwAAlgEAAAAB" +
           "ACoBAR4AAAAPAAAAR2VuZXJhdGVPcHRpb25zABj/////AAAAAAABACgBAQAAAAEB/////wAAAAAVYKkK" +
           "AgAAAAAADwAAAE91dHB1dEFyZ3VtZW50cwEBXAMALgBEXAMAAJYCAAAAAQAqAQEZAAAACgAAAEZpbGVO" +
           "b2RlSWQAEf////8AAAAAAAEAKgEBGQAAAAoAAABGaWxlSGFuZGxlAAf/////AAAAAAABACgBAQAAAAEB" +
           "/////wAAAAAEYYIKBAAAAAAADgAAAENsb3NlQW5kQ29tbWl0AQFdAwAvAQCHPV0DAAABAf////8CAAAA" +
           "FWCpCgIAAAAAAA4AAABJbnB1dEFyZ3VtZW50cwEBXgMALgBEXgMAAJYBAAAAAQAqAQEZAAAACgAAAEZp" +
           "bGVIYW5kbGUAB/////8AAAAAAAEAKAEBAAAAAQH/////AAAAABVgqQoCAAAAAAAPAAAAT3V0cHV0QXJn" +
           "dW1lbnRzAQFfAwAuAERfAwAAlgEAAAABACoBASUAAAAWAAAAQ29tcGxldGlvblN0YXRlTWFjaGluZQAR" +
           "/////wAAAAAAAQAoAQEAAAABAf////8AAAAA";
        #endregion
        #endif
        #endregion

        #region Public Properties
        #endregion

        #region Overridden Methods
        #endregion

        #region Private Fields
        #endregion
    }
    #endif
    #endregion

    #region SafetyStateManagementState Class
    #if (!OPCUA_EXCLUDE_SafetyStateManagementState)
    /// <summary>
    /// Stores an instance of the SafetyStateManagementType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class SafetyStateManagementState : BaseObjectState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public SafetyStateManagementState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.SafetyStateManagementType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);
        }

        #region Initialization String
        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAIQAAAFNhZmV0eVN0YXRlTWFuYWdlbWVudFR5cGVJbnN0YW5jZQEBbwMBAW8D/////wMAAAAEYYIK" +
           "BAAAAAEAEQAAAFJlcG9ydFNhZmV0eVN0YXRlAQFwAwAvAQFwA3ADAAABAf////8CAAAAF2CpCgIAAAAA" +
           "AA4AAABJbnB1dEFyZ3VtZW50cwEBcQMALgBEcQMAAJYAAAAAAQAoAQEAAAABAAAAAgAAAAEB/////wAA" +
           "AAAXYKkKAgAAAAAADwAAAE91dHB1dEFyZ3VtZW50cwEBcgMALgBEcgMAAJYAAAAAAQAoAQEAAAABAAAA" +
           "AQAAAAEB/////wAAAAAVYIkKAgAAAAEAFwAAAFZpc2lvblNhZmV0eUluZm9ybWF0aW9uAQFzAwAvAD9z" +
           "AwAAAAz/////AwP/////AAAAABVgiQoCAAAAAQAVAAAAVmlzaW9uU2FmZXR5VHJpZ2dlcmVkAQF0AwAv" +
           "AD90AwAAAAH/////AwP/////AAAAAA==";
        #endregion
        #endif
        #endregion

        #region Public Properties
        /// <summary>
        /// A description for the ReportSafetyState Method.
        /// </summary>
        public MethodState ReportSafetyState
        {
            get
            {
                return m_reportSafetyStateMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_reportSafetyStateMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_reportSafetyStateMethod = value;
            }
        }

        /// <summary>
        /// A description for the VisionSafetyInformation Variable.
        /// </summary>
        public BaseDataVariableState<string> VisionSafetyInformation
        {
            get
            {
                return m_visionSafetyInformation;
            }

            set
            {
                if (!Object.ReferenceEquals(m_visionSafetyInformation, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_visionSafetyInformation = value;
            }
        }

        /// <summary>
        /// A description for the VisionSafetyTriggered Variable.
        /// </summary>
        public BaseDataVariableState<bool> VisionSafetyTriggered
        {
            get
            {
                return m_visionSafetyTriggered;
            }

            set
            {
                if (!Object.ReferenceEquals(m_visionSafetyTriggered, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_visionSafetyTriggered = value;
            }
        }
        #endregion

        #region Overridden Methods
        /// <summary>
        /// Populates a list with the children that belong to the node.
        /// </summary>
        /// <param name="context">The context for the system being accessed.</param>
        /// <param name="children">The list of children to populate.</param>
        public override void GetChildren(
            ISystemContext context,
            IList<BaseInstanceState> children)
        {
            if (m_reportSafetyStateMethod != null)
            {
                children.Add(m_reportSafetyStateMethod);
            }

            if (m_visionSafetyInformation != null)
            {
                children.Add(m_visionSafetyInformation);
            }

            if (m_visionSafetyTriggered != null)
            {
                children.Add(m_visionSafetyTriggered);
            }

            base.GetChildren(context, children);
        }

        /// <summary>
        /// Finds the child with the specified browse name.
        /// </summary>
        protected override BaseInstanceState FindChild(
            ISystemContext context,
            QualifiedName browseName,
            bool createOrReplace,
            BaseInstanceState replacement)
        {
            if (QualifiedName.IsNull(browseName))
            {
                return null;
            }

            BaseInstanceState instance = null;

            switch (browseName.Name)
            {
                case Prefix2.BrowseNames.ReportSafetyState:
                {
                    if (createOrReplace)
                    {
                        if (ReportSafetyState == null)
                        {
                            if (replacement == null)
                            {
                                ReportSafetyState = new MethodState(this);
                            }
                            else
                            {
                                ReportSafetyState = (MethodState)replacement;
                            }
                        }
                    }

                    instance = ReportSafetyState;
                    break;
                }

                case Prefix2.BrowseNames.VisionSafetyInformation:
                {
                    if (createOrReplace)
                    {
                        if (VisionSafetyInformation == null)
                        {
                            if (replacement == null)
                            {
                                VisionSafetyInformation = new BaseDataVariableState<string>(this);
                            }
                            else
                            {
                                VisionSafetyInformation = (BaseDataVariableState<string>)replacement;
                            }
                        }
                    }

                    instance = VisionSafetyInformation;
                    break;
                }

                case Prefix2.BrowseNames.VisionSafetyTriggered:
                {
                    if (createOrReplace)
                    {
                        if (VisionSafetyTriggered == null)
                        {
                            if (replacement == null)
                            {
                                VisionSafetyTriggered = new BaseDataVariableState<bool>(this);
                            }
                            else
                            {
                                VisionSafetyTriggered = (BaseDataVariableState<bool>)replacement;
                            }
                        }
                    }

                    instance = VisionSafetyTriggered;
                    break;
                }
            }

            if (instance != null)
            {
                return instance;
            }

            return base.FindChild(context, browseName, createOrReplace, replacement);
        }
        #endregion

        #region Private Fields
        private MethodState m_reportSafetyStateMethod;
        private BaseDataVariableState<string> m_visionSafetyInformation;
        private BaseDataVariableState<bool> m_visionSafetyTriggered;
        #endregion
    }
    #endif
    #endregion

    #region VisionAutomaticModeStateMachineState Class
    #if (!OPCUA_EXCLUDE_VisionAutomaticModeStateMachineState)
    /// <summary>
    /// Stores an instance of the VisionAutomaticModeStateMachineType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class VisionAutomaticModeStateMachineState : FiniteStateMachineState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public VisionAutomaticModeStateMachineState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.VisionAutomaticModeStateMachineType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);

            if (ContinuousExecutionStepModel != null)
            {
                ContinuousExecutionStepModel.Initialize(context, ContinuousExecutionStepModel_InitializationString);
            }

            if (InitializedStepModel != null)
            {
                InitializedStepModel.Initialize(context, InitializedStepModel_InitializationString);
            }

            if (ReadyStepModel != null)
            {
                ReadyStepModel.Initialize(context, ReadyStepModel_InitializationString);
            }

            if (SimulationMode != null)
            {
                SimulationMode.Initialize(context, SimulationMode_InitializationString);
            }

            if (SingleExecutionStepModel != null)
            {
                SingleExecutionStepModel.Initialize(context, SingleExecutionStepModel_InitializationString);
            }
        }

        #region Initialization String
        private const string ContinuousExecutionStepModel_InitializationString =
           "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" +
           "AESsAwAAAAf/////AQH/////AAAAAA==";

        private const string InitializedStepModel_InitializationString =
           "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" +
           "/////wEB/////wAAAAA=";

        private const string ReadyStepModel_InitializationString =
           "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" +
           "/////wAAAAA=";

        private const string SimulationMode_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYYIKBAAA" +
           "AAEADgAAAFNpbXVsYXRpb25Nb2RlAQEVBAAvAQEVBBUEAAABAf////8CAAAAF2CpCgIAAAAAAA4AAABJ" +
           "bnB1dEFyZ3VtZW50cwEBFgQALgBEFgQAAJYAAAAAAQAoAQEAAAABAAAAAwAAAAEB/////wAAAAAXYKkK" +
           "AgAAAAAADwAAAE91dHB1dEFyZ3VtZW50cwEBFwQALgBEFwQAAJYAAAAAAQAoAQEAAAABAAAAAQAAAAEB" +
           "/////wAAAAA=";

        private const string SingleExecutionStepModel_InitializationString =
           "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" +
           "AAAAB/////8BAf////8AAAAA";

        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAKwAAAFZpc2lvbkF1dG9tYXRpY01vZGVTdGF0ZU1hY2hpbmVUeXBlSW5zdGFuY2UBAXUDAQF1A///" +
           "//8eAAAAFWCJCgIAAAAAAAwAAABDdXJyZW50U3RhdGUBAXYDAC8BAMgKdgMAAAAV/////wEB/////wEA" +
           "AAAVYIkKAgAAAAAAAgAAAElkAQF3AwAuAER3AwAAABH/////AQH/////AAAAAARhggoEAAAAAQAFAAAA" +
           "QWJvcnQBAYMDAC8BAYMDgwMAAAEB/////wIAAAAXYKkKAgAAAAAADgAAAElucHV0QXJndW1lbnRzAQGE" +
           "AwAuAESEAwAAlgAAAAABACgBAQAAAAEAAAACAAAAAQH/////AAAAABdgqQoCAAAAAAAPAAAAT3V0cHV0" +
           "QXJndW1lbnRzAQGFAwAuAESFAwAAlgAAAAABACgBAQAAAAEAAAABAAAAAQH/////AAAAAARggAoBAAAA" +
           "AQATAAAAQ29udGludW91c0V4ZWN1dGlvbgEBhgMALwEAAwmGAwAABgAAAAB1AAEBiAMBARsAAAEBrQMB" +
           "ARsAAAEBrwMBARsAAAEBsQMBARoAAAEBBwQBARoAAAEBCQQBAAAAFWCJCgIAAAAAAAsAAABTdGF0ZU51" +
           "bWJlcgEBhwMALgBEhwMAAAAH/////wEB/////wAAAAAEYIAKAQAAAAEAHAAAAENvbnRpbnVvdXNFeGVj" +
           "dXRpb25TdGVwTW9kZWwBAYgDAC8BAU4EiAMAAAEAAAAAdQEBAYYDDAAAABVgiQoCAAAAAAAMAAAAQ3Vy" +
           "cmVudFN0YXRlAQGJAwAvAQDICokDAAAAFf////8BAf////8BAAAAFWCJCgIAAAAAAAIAAABJZAEBigMA" +
           "LgBEigMAAAAR/////wEB/////wAAAAAEYIAKAQAAAAEABQAAAEVudHJ5AQGWAwAvAQAFCZYDAAACAAAA" +
           "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" +
           "////AAAAAA==";
        #endregion
        #endif
        #endregion

        #region Public Properties
        /// <summary>
        /// A description for the Abort Method.
        /// </summary>
        public MethodState Abort
        {
            get
            {
                return m_abortMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_abortMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_abortMethod = value;
            }
        }

        /// <summary>
        /// A description for the ContinuousExecution Object.
        /// </summary>
        public StateMachineStateState ContinuousExecution
        {
            get
            {
                return m_continuousExecution;
            }

            set
            {
                if (!Object.ReferenceEquals(m_continuousExecution, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_continuousExecution = value;
            }
        }

        /// <summary>
        /// A description for the ContinuousExecutionStepModel Object.
        /// </summary>
        public VisionStepModelStateMachineState ContinuousExecutionStepModel
        {
            get
            {
                return m_continuousExecutionStepModel;
            }

            set
            {
                if (!Object.ReferenceEquals(m_continuousExecutionStepModel, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_continuousExecutionStepModel = value;
            }
        }

        /// <summary>
        /// A description for the ContinuousExecutionToReadyAbort Object.
        /// </summary>
        public StateMachineTransitionState ContinuousExecutionToReadyAbort
        {
            get
            {
                return m_continuousExecutionToReadyAbort;
            }

            set
            {
                if (!Object.ReferenceEquals(m_continuousExecutionToReadyAbort, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_continuousExecutionToReadyAbort = value;
            }
        }

        /// <summary>
        /// A description for the ContinuousExecutionToReadyAuto Object.
        /// </summary>
        public StateMachineTransitionState ContinuousExecutionToReadyAuto
        {
            get
            {
                return m_continuousExecutionToReadyAuto;
            }

            set
            {
                if (!Object.ReferenceEquals(m_continuousExecutionToReadyAuto, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_continuousExecutionToReadyAuto = value;
            }
        }

        /// <summary>
        /// A description for the ContinuousExecutionToReadyStop Object.
        /// </summary>
        public StateMachineTransitionState ContinuousExecutionToReadyStop
        {
            get
            {
                return m_continuousExecutionToReadyStop;
            }

            set
            {
                if (!Object.ReferenceEquals(m_continuousExecutionToReadyStop, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_continuousExecutionToReadyStop = value;
            }
        }

        /// <summary>
        /// A description for the Initialized Object.
        /// </summary>
        public StateMachineStateState Initialized
        {
            get
            {
                return m_ınitialized;
            }

            set
            {
                if (!Object.ReferenceEquals(m_ınitialized, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_ınitialized = value;
            }
        }

        /// <summary>
        /// A description for the InitializedStepModel Object.
        /// </summary>
        public VisionStepModelStateMachineState InitializedStepModel
        {
            get
            {
                return m_ınitializedStepModel;
            }

            set
            {
                if (!Object.ReferenceEquals(m_ınitializedStepModel, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_ınitializedStepModel = value;
            }
        }

        /// <summary>
        /// A description for the InitializedToReadyAuto Object.
        /// </summary>
        public StateMachineTransitionState InitializedToReadyAuto
        {
            get
            {
                return m_ınitializedToReadyAuto;
            }

            set
            {
                if (!Object.ReferenceEquals(m_ınitializedToReadyAuto, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_ınitializedToReadyAuto = value;
            }
        }

        /// <summary>
        /// A description for the InitializedToReadyProduct Object.
        /// </summary>
        public StateMachineTransitionState InitializedToReadyProduct
        {
            get
            {
                return m_ınitializedToReadyProduct;
            }

            set
            {
                if (!Object.ReferenceEquals(m_ınitializedToReadyProduct, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_ınitializedToReadyProduct = value;
            }
        }

        /// <summary>
        /// A description for the InitializedToReadyRecipe Object.
        /// </summary>
        public StateMachineTransitionState InitializedToReadyRecipe
        {
            get
            {
                return m_ınitializedToReadyRecipe;
            }

            set
            {
                if (!Object.ReferenceEquals(m_ınitializedToReadyRecipe, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_ınitializedToReadyRecipe = value;
            }
        }

        /// <summary>
        /// A description for the Ready Object.
        /// </summary>
        public StateMachineStateState Ready
        {
            get
            {
                return m_ready;
            }

            set
            {
                if (!Object.ReferenceEquals(m_ready, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_ready = value;
            }
        }

        /// <summary>
        /// A description for the ReadyStepModel Object.
        /// </summary>
        public VisionStepModelStateMachineState ReadyStepModel
        {
            get
            {
                return m_readyStepModel;
            }

            set
            {
                if (!Object.ReferenceEquals(m_readyStepModel, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_readyStepModel = value;
            }
        }

        /// <summary>
        /// A description for the ReadyToContinuousExecution Object.
        /// </summary>
        public StateMachineTransitionState ReadyToContinuousExecution
        {
            get
            {
                return m_readyToContinuousExecution;
            }

            set
            {
                if (!Object.ReferenceEquals(m_readyToContinuousExecution, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_readyToContinuousExecution = value;
            }
        }

        /// <summary>
        /// A description for the ReadyToContinuousExecutionAuto Object.
        /// </summary>
        public StateMachineTransitionState ReadyToContinuousExecutionAuto
        {
            get
            {
                return m_readyToContinuousExecutionAuto;
            }

            set
            {
                if (!Object.ReferenceEquals(m_readyToContinuousExecutionAuto, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_readyToContinuousExecutionAuto = value;
            }
        }

        /// <summary>
        /// A description for the ReadyToInitializedAuto Object.
        /// </summary>
        public StateMachineTransitionState ReadyToInitializedAuto
        {
            get
            {
                return m_readyToInitializedAuto;
            }

            set
            {
                if (!Object.ReferenceEquals(m_readyToInitializedAuto, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_readyToInitializedAuto = value;
            }
        }

        /// <summary>
        /// A description for the ReadyToInitializedProduct Object.
        /// </summary>
        public StateMachineTransitionState ReadyToInitializedProduct
        {
            get
            {
                return m_readyToInitializedProduct;
            }

            set
            {
                if (!Object.ReferenceEquals(m_readyToInitializedProduct, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_readyToInitializedProduct = value;
            }
        }

        /// <summary>
        /// A description for the ReadyToInitializedRecipe Object.
        /// </summary>
        public StateMachineTransitionState ReadyToInitializedRecipe
        {
            get
            {
                return m_readyToInitializedRecipe;
            }

            set
            {
                if (!Object.ReferenceEquals(m_readyToInitializedRecipe, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_readyToInitializedRecipe = value;
            }
        }

        /// <summary>
        /// A description for the ReadyToSingleExecution Object.
        /// </summary>
        public StateMachineTransitionState ReadyToSingleExecution
        {
            get
            {
                return m_readyToSingleExecution;
            }

            set
            {
                if (!Object.ReferenceEquals(m_readyToSingleExecution, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_readyToSingleExecution = value;
            }
        }

        /// <summary>
        /// A description for the ReadyToSingleExecutionAuto Object.
        /// </summary>
        public StateMachineTransitionState ReadyToSingleExecutionAuto
        {
            get
            {
                return m_readyToSingleExecutionAuto;
            }

            set
            {
                if (!Object.ReferenceEquals(m_readyToSingleExecutionAuto, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_readyToSingleExecutionAuto = value;
            }
        }

        /// <summary>
        /// A description for the SimulationMode Method.
        /// </summary>
        public MethodState SimulationMode
        {
            get
            {
                return m_simulationModeMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_simulationModeMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_simulationModeMethod = value;
            }
        }

        /// <summary>
        /// A description for the SingleExecution Object.
        /// </summary>
        public StateMachineStateState SingleExecution
        {
            get
            {
                return m_singleExecution;
            }

            set
            {
                if (!Object.ReferenceEquals(m_singleExecution, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_singleExecution = value;
            }
        }

        /// <summary>
        /// A description for the SingleExecutionStepModel Object.
        /// </summary>
        public VisionStepModelStateMachineState SingleExecutionStepModel
        {
            get
            {
                return m_singleExecutionStepModel;
            }

            set
            {
                if (!Object.ReferenceEquals(m_singleExecutionStepModel, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_singleExecutionStepModel = value;
            }
        }

        /// <summary>
        /// A description for the SingleExecutionToReadyAbort Object.
        /// </summary>
        public StateMachineTransitionState SingleExecutionToReadyAbort
        {
            get
            {
                return m_singleExecutionToReadyAbort;
            }

            set
            {
                if (!Object.ReferenceEquals(m_singleExecutionToReadyAbort, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_singleExecutionToReadyAbort = value;
            }
        }

        /// <summary>
        /// A description for the SingleExecutionToReadyAuto Object.
        /// </summary>
        public StateMachineTransitionState SingleExecutionToReadyAuto
        {
            get
            {
                return m_singleExecutionToReadyAuto;
            }

            set
            {
                if (!Object.ReferenceEquals(m_singleExecutionToReadyAuto, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_singleExecutionToReadyAuto = value;
            }
        }

        /// <summary>
        /// A description for the SingleExecutionToReadyStop Object.
        /// </summary>
        public StateMachineTransitionState SingleExecutionToReadyStop
        {
            get
            {
                return m_singleExecutionToReadyStop;
            }

            set
            {
                if (!Object.ReferenceEquals(m_singleExecutionToReadyStop, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_singleExecutionToReadyStop = value;
            }
        }

        /// <summary>
        /// A description for the StartContinuous Method.
        /// </summary>
        public MethodState StartContinuous
        {
            get
            {
                return m_startContinuousMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_startContinuousMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_startContinuousMethod = value;
            }
        }

        /// <summary>
        /// A description for the StartSingleJob Method.
        /// </summary>
        public MethodState StartSingleJob
        {
            get
            {
                return m_startSingleJobMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_startSingleJobMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_startSingleJobMethod = value;
            }
        }

        /// <summary>
        /// A description for the Stop Method.
        /// </summary>
        public MethodState Stop
        {
            get
            {
                return m_stopMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_stopMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_stopMethod = value;
            }
        }
        #endregion

        #region Overridden Methods
        /// <summary>
        /// Populates a list with the children that belong to the node.
        /// </summary>
        /// <param name="context">The context for the system being accessed.</param>
        /// <param name="children">The list of children to populate.</param>
        public override void GetChildren(
            ISystemContext context,
            IList<BaseInstanceState> children)
        {
            if (m_abortMethod != null)
            {
                children.Add(m_abortMethod);
            }

            if (m_continuousExecution != null)
            {
                children.Add(m_continuousExecution);
            }

            if (m_continuousExecutionStepModel != null)
            {
                children.Add(m_continuousExecutionStepModel);
            }

            if (m_continuousExecutionToReadyAbort != null)
            {
                children.Add(m_continuousExecutionToReadyAbort);
            }

            if (m_continuousExecutionToReadyAuto != null)
            {
                children.Add(m_continuousExecutionToReadyAuto);
            }

            if (m_continuousExecutionToReadyStop != null)
            {
                children.Add(m_continuousExecutionToReadyStop);
            }

            if (m_ınitialized != null)
            {
                children.Add(m_ınitialized);
            }

            if (m_ınitializedStepModel != null)
            {
                children.Add(m_ınitializedStepModel);
            }

            if (m_ınitializedToReadyAuto != null)
            {
                children.Add(m_ınitializedToReadyAuto);
            }

            if (m_ınitializedToReadyProduct != null)
            {
                children.Add(m_ınitializedToReadyProduct);
            }

            if (m_ınitializedToReadyRecipe != null)
            {
                children.Add(m_ınitializedToReadyRecipe);
            }

            if (m_ready != null)
            {
                children.Add(m_ready);
            }

            if (m_readyStepModel != null)
            {
                children.Add(m_readyStepModel);
            }

            if (m_readyToContinuousExecution != null)
            {
                children.Add(m_readyToContinuousExecution);
            }

            if (m_readyToContinuousExecutionAuto != null)
            {
                children.Add(m_readyToContinuousExecutionAuto);
            }

            if (m_readyToInitializedAuto != null)
            {
                children.Add(m_readyToInitializedAuto);
            }

            if (m_readyToInitializedProduct != null)
            {
                children.Add(m_readyToInitializedProduct);
            }

            if (m_readyToInitializedRecipe != null)
            {
                children.Add(m_readyToInitializedRecipe);
            }

            if (m_readyToSingleExecution != null)
            {
                children.Add(m_readyToSingleExecution);
            }

            if (m_readyToSingleExecutionAuto != null)
            {
                children.Add(m_readyToSingleExecutionAuto);
            }

            if (m_simulationModeMethod != null)
            {
                children.Add(m_simulationModeMethod);
            }

            if (m_singleExecution != null)
            {
                children.Add(m_singleExecution);
            }

            if (m_singleExecutionStepModel != null)
            {
                children.Add(m_singleExecutionStepModel);
            }

            if (m_singleExecutionToReadyAbort != null)
            {
                children.Add(m_singleExecutionToReadyAbort);
            }

            if (m_singleExecutionToReadyAuto != null)
            {
                children.Add(m_singleExecutionToReadyAuto);
            }

            if (m_singleExecutionToReadyStop != null)
            {
                children.Add(m_singleExecutionToReadyStop);
            }

            if (m_startContinuousMethod != null)
            {
                children.Add(m_startContinuousMethod);
            }

            if (m_startSingleJobMethod != null)
            {
                children.Add(m_startSingleJobMethod);
            }

            if (m_stopMethod != null)
            {
                children.Add(m_stopMethod);
            }

            base.GetChildren(context, children);
        }

        /// <summary>
        /// Finds the child with the specified browse name.
        /// </summary>
        protected override BaseInstanceState FindChild(
            ISystemContext context,
            QualifiedName browseName,
            bool createOrReplace,
            BaseInstanceState replacement)
        {
            if (QualifiedName.IsNull(browseName))
            {
                return null;
            }

            BaseInstanceState instance = null;

            switch (browseName.Name)
            {
                case Prefix2.BrowseNames.Abort:
                {
                    if (createOrReplace)
                    {
                        if (Abort == null)
                        {
                            if (replacement == null)
                            {
                                Abort = new MethodState(this);
                            }
                            else
                            {
                                Abort = (MethodState)replacement;
                            }
                        }
                    }

                    instance = Abort;
                    break;
                }

                case Prefix2.BrowseNames.ContinuousExecution:
                {
                    if (createOrReplace)
                    {
                        if (ContinuousExecution == null)
                        {
                            if (replacement == null)
                            {
                                ContinuousExecution = new StateMachineStateState(this);
                            }
                            else
                            {
                                ContinuousExecution = (StateMachineStateState)replacement;
                            }
                        }
                    }

                    instance = ContinuousExecution;
                    break;
                }

                case Prefix2.BrowseNames.ContinuousExecutionStepModel:
                {
                    if (createOrReplace)
                    {
                        if (ContinuousExecutionStepModel == null)
                        {
                            if (replacement == null)
                            {
                                ContinuousExecutionStepModel = new VisionStepModelStateMachineState(this);
                            }
                            else
                            {
                                ContinuousExecutionStepModel = (VisionStepModelStateMachineState)replacement;
                            }
                        }
                    }

                    instance = ContinuousExecutionStepModel;
                    break;
                }

                case Prefix2.BrowseNames.ContinuousExecutionToReadyAbort:
                {
                    if (createOrReplace)
                    {
                        if (ContinuousExecutionToReadyAbort == null)
                        {
                            if (replacement == null)
                            {
                                ContinuousExecutionToReadyAbort = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                ContinuousExecutionToReadyAbort = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = ContinuousExecutionToReadyAbort;
                    break;
                }

                case Prefix2.BrowseNames.ContinuousExecutionToReadyAuto:
                {
                    if (createOrReplace)
                    {
                        if (ContinuousExecutionToReadyAuto == null)
                        {
                            if (replacement == null)
                            {
                                ContinuousExecutionToReadyAuto = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                ContinuousExecutionToReadyAuto = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = ContinuousExecutionToReadyAuto;
                    break;
                }

                case Prefix2.BrowseNames.ContinuousExecutionToReadyStop:
                {
                    if (createOrReplace)
                    {
                        if (ContinuousExecutionToReadyStop == null)
                        {
                            if (replacement == null)
                            {
                                ContinuousExecutionToReadyStop = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                ContinuousExecutionToReadyStop = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = ContinuousExecutionToReadyStop;
                    break;
                }

                case Prefix2.BrowseNames.Initialized:
                {
                    if (createOrReplace)
                    {
                        if (Initialized == null)
                        {
                            if (replacement == null)
                            {
                                Initialized = new StateMachineStateState(this);
                            }
                            else
                            {
                                Initialized = (StateMachineStateState)replacement;
                            }
                        }
                    }

                    instance = Initialized;
                    break;
                }

                case Prefix2.BrowseNames.InitializedStepModel:
                {
                    if (createOrReplace)
                    {
                        if (InitializedStepModel == null)
                        {
                            if (replacement == null)
                            {
                                InitializedStepModel = new VisionStepModelStateMachineState(this);
                            }
                            else
                            {
                                InitializedStepModel = (VisionStepModelStateMachineState)replacement;
                            }
                        }
                    }

                    instance = InitializedStepModel;
                    break;
                }

                case Prefix2.BrowseNames.InitializedToReadyAuto:
                {
                    if (createOrReplace)
                    {
                        if (InitializedToReadyAuto == null)
                        {
                            if (replacement == null)
                            {
                                InitializedToReadyAuto = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                InitializedToReadyAuto = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = InitializedToReadyAuto;
                    break;
                }

                case Prefix2.BrowseNames.InitializedToReadyProduct:
                {
                    if (createOrReplace)
                    {
                        if (InitializedToReadyProduct == null)
                        {
                            if (replacement == null)
                            {
                                InitializedToReadyProduct = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                InitializedToReadyProduct = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = InitializedToReadyProduct;
                    break;
                }

                case Prefix2.BrowseNames.InitializedToReadyRecipe:
                {
                    if (createOrReplace)
                    {
                        if (InitializedToReadyRecipe == null)
                        {
                            if (replacement == null)
                            {
                                InitializedToReadyRecipe = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                InitializedToReadyRecipe = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = InitializedToReadyRecipe;
                    break;
                }

                case Prefix2.BrowseNames.Ready:
                {
                    if (createOrReplace)
                    {
                        if (Ready == null)
                        {
                            if (replacement == null)
                            {
                                Ready = new StateMachineStateState(this);
                            }
                            else
                            {
                                Ready = (StateMachineStateState)replacement;
                            }
                        }
                    }

                    instance = Ready;
                    break;
                }

                case Prefix2.BrowseNames.ReadyStepModel:
                {
                    if (createOrReplace)
                    {
                        if (ReadyStepModel == null)
                        {
                            if (replacement == null)
                            {
                                ReadyStepModel = new VisionStepModelStateMachineState(this);
                            }
                            else
                            {
                                ReadyStepModel = (VisionStepModelStateMachineState)replacement;
                            }
                        }
                    }

                    instance = ReadyStepModel;
                    break;
                }

                case Prefix2.BrowseNames.ReadyToContinuousExecution:
                {
                    if (createOrReplace)
                    {
                        if (ReadyToContinuousExecution == null)
                        {
                            if (replacement == null)
                            {
                                ReadyToContinuousExecution = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                ReadyToContinuousExecution = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = ReadyToContinuousExecution;
                    break;
                }

                case Prefix2.BrowseNames.ReadyToContinuousExecutionAuto:
                {
                    if (createOrReplace)
                    {
                        if (ReadyToContinuousExecutionAuto == null)
                        {
                            if (replacement == null)
                            {
                                ReadyToContinuousExecutionAuto = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                ReadyToContinuousExecutionAuto = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = ReadyToContinuousExecutionAuto;
                    break;
                }

                case Prefix2.BrowseNames.ReadyToInitializedAuto:
                {
                    if (createOrReplace)
                    {
                        if (ReadyToInitializedAuto == null)
                        {
                            if (replacement == null)
                            {
                                ReadyToInitializedAuto = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                ReadyToInitializedAuto = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = ReadyToInitializedAuto;
                    break;
                }

                case Prefix2.BrowseNames.ReadyToInitializedProduct:
                {
                    if (createOrReplace)
                    {
                        if (ReadyToInitializedProduct == null)
                        {
                            if (replacement == null)
                            {
                                ReadyToInitializedProduct = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                ReadyToInitializedProduct = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = ReadyToInitializedProduct;
                    break;
                }

                case Prefix2.BrowseNames.ReadyToInitializedRecipe:
                {
                    if (createOrReplace)
                    {
                        if (ReadyToInitializedRecipe == null)
                        {
                            if (replacement == null)
                            {
                                ReadyToInitializedRecipe = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                ReadyToInitializedRecipe = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = ReadyToInitializedRecipe;
                    break;
                }

                case Prefix2.BrowseNames.ReadyToSingleExecution:
                {
                    if (createOrReplace)
                    {
                        if (ReadyToSingleExecution == null)
                        {
                            if (replacement == null)
                            {
                                ReadyToSingleExecution = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                ReadyToSingleExecution = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = ReadyToSingleExecution;
                    break;
                }

                case Prefix2.BrowseNames.ReadyToSingleExecutionAuto:
                {
                    if (createOrReplace)
                    {
                        if (ReadyToSingleExecutionAuto == null)
                        {
                            if (replacement == null)
                            {
                                ReadyToSingleExecutionAuto = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                ReadyToSingleExecutionAuto = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = ReadyToSingleExecutionAuto;
                    break;
                }

                case Prefix2.BrowseNames.SimulationMode:
                {
                    if (createOrReplace)
                    {
                        if (SimulationMode == null)
                        {
                            if (replacement == null)
                            {
                                SimulationMode = new MethodState(this);
                            }
                            else
                            {
                                SimulationMode = (MethodState)replacement;
                            }
                        }
                    }

                    instance = SimulationMode;
                    break;
                }

                case Prefix2.BrowseNames.SingleExecution:
                {
                    if (createOrReplace)
                    {
                        if (SingleExecution == null)
                        {
                            if (replacement == null)
                            {
                                SingleExecution = new StateMachineStateState(this);
                            }
                            else
                            {
                                SingleExecution = (StateMachineStateState)replacement;
                            }
                        }
                    }

                    instance = SingleExecution;
                    break;
                }

                case Prefix2.BrowseNames.SingleExecutionStepModel:
                {
                    if (createOrReplace)
                    {
                        if (SingleExecutionStepModel == null)
                        {
                            if (replacement == null)
                            {
                                SingleExecutionStepModel = new VisionStepModelStateMachineState(this);
                            }
                            else
                            {
                                SingleExecutionStepModel = (VisionStepModelStateMachineState)replacement;
                            }
                        }
                    }

                    instance = SingleExecutionStepModel;
                    break;
                }

                case Prefix2.BrowseNames.SingleExecutionToReadyAbort:
                {
                    if (createOrReplace)
                    {
                        if (SingleExecutionToReadyAbort == null)
                        {
                            if (replacement == null)
                            {
                                SingleExecutionToReadyAbort = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                SingleExecutionToReadyAbort = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = SingleExecutionToReadyAbort;
                    break;
                }

                case Prefix2.BrowseNames.SingleExecutionToReadyAuto:
                {
                    if (createOrReplace)
                    {
                        if (SingleExecutionToReadyAuto == null)
                        {
                            if (replacement == null)
                            {
                                SingleExecutionToReadyAuto = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                SingleExecutionToReadyAuto = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = SingleExecutionToReadyAuto;
                    break;
                }

                case Prefix2.BrowseNames.SingleExecutionToReadyStop:
                {
                    if (createOrReplace)
                    {
                        if (SingleExecutionToReadyStop == null)
                        {
                            if (replacement == null)
                            {
                                SingleExecutionToReadyStop = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                SingleExecutionToReadyStop = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = SingleExecutionToReadyStop;
                    break;
                }

                case Prefix2.BrowseNames.StartContinuous:
                {
                    if (createOrReplace)
                    {
                        if (StartContinuous == null)
                        {
                            if (replacement == null)
                            {
                                StartContinuous = new MethodState(this);
                            }
                            else
                            {
                                StartContinuous = (MethodState)replacement;
                            }
                        }
                    }

                    instance = StartContinuous;
                    break;
                }

                case Prefix2.BrowseNames.StartSingleJob:
                {
                    if (createOrReplace)
                    {
                        if (StartSingleJob == null)
                        {
                            if (replacement == null)
                            {
                                StartSingleJob = new MethodState(this);
                            }
                            else
                            {
                                StartSingleJob = (MethodState)replacement;
                            }
                        }
                    }

                    instance = StartSingleJob;
                    break;
                }

                case Prefix2.BrowseNames.Stop:
                {
                    if (createOrReplace)
                    {
                        if (Stop == null)
                        {
                            if (replacement == null)
                            {
                                Stop = new MethodState(this);
                            }
                            else
                            {
                                Stop = (MethodState)replacement;
                            }
                        }
                    }

                    instance = Stop;
                    break;
                }
            }

            if (instance != null)
            {
                return instance;
            }

            return base.FindChild(context, browseName, createOrReplace, replacement);
        }
        #endregion

        #region Private Fields
        private MethodState m_abortMethod;
        private StateMachineStateState m_continuousExecution;
        private VisionStepModelStateMachineState m_continuousExecutionStepModel;
        private StateMachineTransitionState m_continuousExecutionToReadyAbort;
        private StateMachineTransitionState m_continuousExecutionToReadyAuto;
        private StateMachineTransitionState m_continuousExecutionToReadyStop;
        private StateMachineStateState m_ınitialized;
        private VisionStepModelStateMachineState m_ınitializedStepModel;
        private StateMachineTransitionState m_ınitializedToReadyAuto;
        private StateMachineTransitionState m_ınitializedToReadyProduct;
        private StateMachineTransitionState m_ınitializedToReadyRecipe;
        private StateMachineStateState m_ready;
        private VisionStepModelStateMachineState m_readyStepModel;
        private StateMachineTransitionState m_readyToContinuousExecution;
        private StateMachineTransitionState m_readyToContinuousExecutionAuto;
        private StateMachineTransitionState m_readyToInitializedAuto;
        private StateMachineTransitionState m_readyToInitializedProduct;
        private StateMachineTransitionState m_readyToInitializedRecipe;
        private StateMachineTransitionState m_readyToSingleExecution;
        private StateMachineTransitionState m_readyToSingleExecutionAuto;
        private MethodState m_simulationModeMethod;
        private StateMachineStateState m_singleExecution;
        private VisionStepModelStateMachineState m_singleExecutionStepModel;
        private StateMachineTransitionState m_singleExecutionToReadyAbort;
        private StateMachineTransitionState m_singleExecutionToReadyAuto;
        private StateMachineTransitionState m_singleExecutionToReadyStop;
        private MethodState m_startContinuousMethod;
        private MethodState m_startSingleJobMethod;
        private MethodState m_stopMethod;
        #endregion
    }
    #endif
    #endregion

    #region VisionStepModelStateMachineState Class
    #if (!OPCUA_EXCLUDE_VisionStepModelStateMachineState)
    /// <summary>
    /// Stores an instance of the VisionStepModelStateMachineType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class VisionStepModelStateMachineState : FiniteStateMachineState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public VisionStepModelStateMachineState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.VisionStepModelStateMachineType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);
        }

        #region Initialization String
        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAJwAAAFZpc2lvblN0ZXBNb2RlbFN0YXRlTWFjaGluZVR5cGVJbnN0YW5jZQEBTgQBAU4E/////wwA" +
           "AAAVYIkKAgAAAAAADAAAAEN1cnJlbnRTdGF0ZQEBTwQALwEAyApPBAAAABX/////AQH/////AQAAABVg" +
           "iQoCAAAAAAACAAAASWQBAVAEAC4ARFAEAAAAEf////8BAf////8AAAAABGCACgEAAAABAAUAAABFbnRy" +
           "eQEBXAQALwEABQlcBAAAAgAAAAEBGwAAAQFeBAEBGwAAAQFgBAEAAAAVYIkKAgAAAAAACwAAAFN0YXRl" +
           "TnVtYmVyAQFdBAAuAERdBAAAAAf/////AQH/////AAAAAARggAoBAAAAAQAPAAAARW50cnlUb0V4aXRB" +
           "dXRvAQFeBAAvAQAGCV4EAAAEAAAAAQEbAAEBAVwEADYBAQFeBAAzAQEBXgQANAABAWIEAQAAABVgiQoC" +
           "AAAAAAAQAAAAVHJhbnNpdGlvbk51bWJlcgEBXwQALgBEXwQAAAAH/////wEB/////wAAAAAEYIAKAQAA" +
           "AAEADwAAAEVudHJ5VG9XYWl0QXV0bwEBYAQALwEABglgBAAABAAAAAEBGwABAQFcBAA2AQEBYAQAMwEB" +
           "AWAEADQAAQFtBAEAAAAVYIkKAgAAAAAAEAAAAFRyYW5zaXRpb25OdW1iZXIBAWEEAC4ARGEEAAAAB///" +
           "//8BAf////8AAAAABGCACgEAAAABAAQAAABFeGl0AQFiBAAvAQADCWIEAAADAAAAADQBAQFeBAEBGgAB" +
           "AQFiBAEBGgAAAQFmBAEAAAAVYIkKAgAAAAAACwAAAFN0YXRlTnVtYmVyAQFjBAAuAERjBAAAAAf/////" +
           "AQH/////AAAAAARggAoBAAAAAQAEAAAAU3RlcAEBZAQALwEAAwlkBAAABAAAAAEBGwAAAQFmBAEBGwAA" +
           "AQFoBAEBGgAAAQFvBAEBGgAAAQFxBAEAAAAVYIkKAgAAAAAACwAAAFN0YXRlTnVtYmVyAQFlBAAuAERl" +
           "BAAAAAf/////AQH/////AAAAAARggAoBAAAAAQAOAAAAU3RlcFRvRXhpdEF1dG8BAWYEAC8BAAYJZgQA" +
           "AAUAAAABARoAAQEBYgQBARsAAQEBZAQANgEBAWYEADQBAQFmBAAzAQEBZgQBAAAAFWCJCgIAAAAAABAA" +
           "AABUcmFuc2l0aW9uTnVtYmVyAQFnBAAuAERnBAAAAAf/////AQH/////AAAAAARggAoBAAAAAQAOAAAA" +
           "U3RlcFRvV2FpdEF1dG8BAWgEAC8BAAYJaAQAAAQAAAABARsAAQEBZAQANgEBAWgEADMBAQFoBAA0AAEB" +
           "bQQBAAAAFWCJCgIAAAAAABAAAABUcmFuc2l0aW9uTnVtYmVyAQFpBAAuAERpBAAAAAf/////AQH/////" +
           "AAAAAARhggoEAAAAAQAEAAAAU3luYwEBagQALwEBagRqBAAAAQH/////AgAAABdgqQoCAAAAAAAOAAAA" +
           "SW5wdXRBcmd1bWVudHMBAWsEAC4ARGsEAACWAAAAAAEAKAEBAAAAAQAAAAIAAAABAf////8AAAAAF2Cp" +
           "CgIAAAAAAA8AAABPdXRwdXRBcmd1bWVudHMBAWwEAC4ARGwEAACWAAAAAAEAKAEBAAAAAQAAAAEAAAAB" +
           "Af////8AAAAABGCACgEAAAABAAQAAABXYWl0AQFtBAAvAQADCW0EAAAFAAAAADQBAQFgBAA0AQEBaAQB" +
           "ARoAAQEBbQQBARsAAAEBbwQBARsAAAEBcQQBAAAAFWCJCgIAAAAAAAsAAABTdGF0ZU51bWJlcgEBbgQA" +
           "LgBEbgQAAAAH/////wEB/////wAAAAAEYIAKAQAAAAEACgAAAFdhaXRUb1N0ZXABAW8EAC8BAAYJbwQA" +
           "AAYAAAABARoAAQEBZAQBARsAAQEBbQQANgEBAW8EADQBAQFvBAA1AQEBbwQAMwEBAW8EAQAAABVgiQoC" +
           "AAAAAAAQAAAAVHJhbnNpdGlvbk51bWJlcgEBcAQALgBEcAQAAAAH/////wEB/////wAAAAAEYIAKAQAA" +
           "AAEADgAAAFdhaXRUb1N0ZXBBdXRvAQFxBAAvAQAGCXEEAAAFAAAAAQEaAAEBAWQEAQEbAAEBAW0EADYB" +
           "AQFxBAA0AQEBcQQAMwEBAXEEAQAAABVgiQoCAAAAAAAQAAAAVHJhbnNpdGlvbk51bWJlcgEBcgQALgBE" +
           "cgQAAAAH/////wEB/////wAAAAA=";
        #endregion
        #endif
        #endregion

        #region Public Properties
        /// <summary>
        /// A description for the Entry Object.
        /// </summary>
        public StateMachineInitialStateState Entry
        {
            get
            {
                return m_entry;
            }

            set
            {
                if (!Object.ReferenceEquals(m_entry, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_entry = value;
            }
        }

        /// <summary>
        /// A description for the EntryToExitAuto Object.
        /// </summary>
        public StateMachineTransitionState EntryToExitAuto
        {
            get
            {
                return m_entryToExitAuto;
            }

            set
            {
                if (!Object.ReferenceEquals(m_entryToExitAuto, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_entryToExitAuto = value;
            }
        }

        /// <summary>
        /// A description for the EntryToWaitAuto Object.
        /// </summary>
        public StateMachineTransitionState EntryToWaitAuto
        {
            get
            {
                return m_entryToWaitAuto;
            }

            set
            {
                if (!Object.ReferenceEquals(m_entryToWaitAuto, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_entryToWaitAuto = value;
            }
        }

        /// <summary>
        /// A description for the Exit Object.
        /// </summary>
        public StateMachineStateState Exit
        {
            get
            {
                return m_exit;
            }

            set
            {
                if (!Object.ReferenceEquals(m_exit, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_exit = value;
            }
        }

        /// <summary>
        /// A description for the Step Object.
        /// </summary>
        public StateMachineStateState Step
        {
            get
            {
                return m_step;
            }

            set
            {
                if (!Object.ReferenceEquals(m_step, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_step = value;
            }
        }

        /// <summary>
        /// A description for the StepToExitAuto Object.
        /// </summary>
        public StateMachineTransitionState StepToExitAuto
        {
            get
            {
                return m_stepToExitAuto;
            }

            set
            {
                if (!Object.ReferenceEquals(m_stepToExitAuto, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_stepToExitAuto = value;
            }
        }

        /// <summary>
        /// A description for the StepToWaitAuto Object.
        /// </summary>
        public StateMachineTransitionState StepToWaitAuto
        {
            get
            {
                return m_stepToWaitAuto;
            }

            set
            {
                if (!Object.ReferenceEquals(m_stepToWaitAuto, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_stepToWaitAuto = value;
            }
        }

        /// <summary>
        /// A description for the Sync Method.
        /// </summary>
        public MethodState Sync
        {
            get
            {
                return m_syncMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_syncMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_syncMethod = value;
            }
        }

        /// <summary>
        /// A description for the Wait Object.
        /// </summary>
        public StateMachineStateState Wait
        {
            get
            {
                return m_wait;
            }

            set
            {
                if (!Object.ReferenceEquals(m_wait, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_wait = value;
            }
        }

        /// <summary>
        /// A description for the WaitToStep Object.
        /// </summary>
        public StateMachineTransitionState WaitToStep
        {
            get
            {
                return m_waitToStep;
            }

            set
            {
                if (!Object.ReferenceEquals(m_waitToStep, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_waitToStep = value;
            }
        }

        /// <summary>
        /// A description for the WaitToStepAuto Object.
        /// </summary>
        public StateMachineTransitionState WaitToStepAuto
        {
            get
            {
                return m_waitToStepAuto;
            }

            set
            {
                if (!Object.ReferenceEquals(m_waitToStepAuto, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_waitToStepAuto = value;
            }
        }
        #endregion

        #region Overridden Methods
        /// <summary>
        /// Populates a list with the children that belong to the node.
        /// </summary>
        /// <param name="context">The context for the system being accessed.</param>
        /// <param name="children">The list of children to populate.</param>
        public override void GetChildren(
            ISystemContext context,
            IList<BaseInstanceState> children)
        {
            if (m_entry != null)
            {
                children.Add(m_entry);
            }

            if (m_entryToExitAuto != null)
            {
                children.Add(m_entryToExitAuto);
            }

            if (m_entryToWaitAuto != null)
            {
                children.Add(m_entryToWaitAuto);
            }

            if (m_exit != null)
            {
                children.Add(m_exit);
            }

            if (m_step != null)
            {
                children.Add(m_step);
            }

            if (m_stepToExitAuto != null)
            {
                children.Add(m_stepToExitAuto);
            }

            if (m_stepToWaitAuto != null)
            {
                children.Add(m_stepToWaitAuto);
            }

            if (m_syncMethod != null)
            {
                children.Add(m_syncMethod);
            }

            if (m_wait != null)
            {
                children.Add(m_wait);
            }

            if (m_waitToStep != null)
            {
                children.Add(m_waitToStep);
            }

            if (m_waitToStepAuto != null)
            {
                children.Add(m_waitToStepAuto);
            }

            base.GetChildren(context, children);
        }

        /// <summary>
        /// Finds the child with the specified browse name.
        /// </summary>
        protected override BaseInstanceState FindChild(
            ISystemContext context,
            QualifiedName browseName,
            bool createOrReplace,
            BaseInstanceState replacement)
        {
            if (QualifiedName.IsNull(browseName))
            {
                return null;
            }

            BaseInstanceState instance = null;

            switch (browseName.Name)
            {
                case Prefix2.BrowseNames.Entry:
                {
                    if (createOrReplace)
                    {
                        if (Entry == null)
                        {
                            if (replacement == null)
                            {
                                Entry = new StateMachineInitialStateState(this);
                            }
                            else
                            {
                                Entry = (StateMachineInitialStateState)replacement;
                            }
                        }
                    }

                    instance = Entry;
                    break;
                }

                case Prefix2.BrowseNames.EntryToExitAuto:
                {
                    if (createOrReplace)
                    {
                        if (EntryToExitAuto == null)
                        {
                            if (replacement == null)
                            {
                                EntryToExitAuto = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                EntryToExitAuto = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = EntryToExitAuto;
                    break;
                }

                case Prefix2.BrowseNames.EntryToWaitAuto:
                {
                    if (createOrReplace)
                    {
                        if (EntryToWaitAuto == null)
                        {
                            if (replacement == null)
                            {
                                EntryToWaitAuto = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                EntryToWaitAuto = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = EntryToWaitAuto;
                    break;
                }

                case Prefix2.BrowseNames.Exit:
                {
                    if (createOrReplace)
                    {
                        if (Exit == null)
                        {
                            if (replacement == null)
                            {
                                Exit = new StateMachineStateState(this);
                            }
                            else
                            {
                                Exit = (StateMachineStateState)replacement;
                            }
                        }
                    }

                    instance = Exit;
                    break;
                }

                case Prefix2.BrowseNames.Step:
                {
                    if (createOrReplace)
                    {
                        if (Step == null)
                        {
                            if (replacement == null)
                            {
                                Step = new StateMachineStateState(this);
                            }
                            else
                            {
                                Step = (StateMachineStateState)replacement;
                            }
                        }
                    }

                    instance = Step;
                    break;
                }

                case Prefix2.BrowseNames.StepToExitAuto:
                {
                    if (createOrReplace)
                    {
                        if (StepToExitAuto == null)
                        {
                            if (replacement == null)
                            {
                                StepToExitAuto = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                StepToExitAuto = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = StepToExitAuto;
                    break;
                }

                case Prefix2.BrowseNames.StepToWaitAuto:
                {
                    if (createOrReplace)
                    {
                        if (StepToWaitAuto == null)
                        {
                            if (replacement == null)
                            {
                                StepToWaitAuto = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                StepToWaitAuto = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = StepToWaitAuto;
                    break;
                }

                case Prefix2.BrowseNames.Sync:
                {
                    if (createOrReplace)
                    {
                        if (Sync == null)
                        {
                            if (replacement == null)
                            {
                                Sync = new MethodState(this);
                            }
                            else
                            {
                                Sync = (MethodState)replacement;
                            }
                        }
                    }

                    instance = Sync;
                    break;
                }

                case Prefix2.BrowseNames.Wait:
                {
                    if (createOrReplace)
                    {
                        if (Wait == null)
                        {
                            if (replacement == null)
                            {
                                Wait = new StateMachineStateState(this);
                            }
                            else
                            {
                                Wait = (StateMachineStateState)replacement;
                            }
                        }
                    }

                    instance = Wait;
                    break;
                }

                case Prefix2.BrowseNames.WaitToStep:
                {
                    if (createOrReplace)
                    {
                        if (WaitToStep == null)
                        {
                            if (replacement == null)
                            {
                                WaitToStep = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                WaitToStep = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = WaitToStep;
                    break;
                }

                case Prefix2.BrowseNames.WaitToStepAuto:
                {
                    if (createOrReplace)
                    {
                        if (WaitToStepAuto == null)
                        {
                            if (replacement == null)
                            {
                                WaitToStepAuto = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                WaitToStepAuto = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = WaitToStepAuto;
                    break;
                }
            }

            if (instance != null)
            {
                return instance;
            }

            return base.FindChild(context, browseName, createOrReplace, replacement);
        }
        #endregion

        #region Private Fields
        private StateMachineInitialStateState m_entry;
        private StateMachineTransitionState m_entryToExitAuto;
        private StateMachineTransitionState m_entryToWaitAuto;
        private StateMachineStateState m_exit;
        private StateMachineStateState m_step;
        private StateMachineTransitionState m_stepToExitAuto;
        private StateMachineTransitionState m_stepToWaitAuto;
        private MethodState m_syncMethod;
        private StateMachineStateState m_wait;
        private StateMachineTransitionState m_waitToStep;
        private StateMachineTransitionState m_waitToStepAuto;
        #endregion
    }
    #endif
    #endregion

    #region VisionStateMachineState Class
    #if (!OPCUA_EXCLUDE_VisionStateMachineState)
    /// <summary>
    /// Stores an instance of the VisionStateMachineType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class VisionStateMachineState : FiniteStateMachineState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public VisionStateMachineState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.VisionStateMachineType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);

            if (AutomaticModeStateMachine != null)
            {
                AutomaticModeStateMachine.Initialize(context, AutomaticModeStateMachine_InitializationString);
            }

            if (ConfirmAll != null)
            {
                ConfirmAll.Initialize(context, ConfirmAll_InitializationString);
            }

            if (ErrorStepModel != null)
            {
                ErrorStepModel.Initialize(context, ErrorStepModel_InitializationString);
            }

            if (HaltedStepModel != null)
            {
                HaltedStepModel.Initialize(context, HaltedStepModel_InitializationString);
            }

            if (PreoperationalStepModel != null)
            {
                PreoperationalStepModel.Initialize(context, PreoperationalStepModel_InitializationString);
            }

            if (SelectModeAutomatic != null)
            {
                SelectModeAutomatic.Initialize(context, SelectModeAutomatic_InitializationString);
            }
        }

        #region Initialization String
        private const string AutomaticModeStateMachine_InitializationString =
           "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" +
           "AQH/////AAAAAA==";

        private const string ConfirmAll_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYYIKBAAA" +
           "AAEACgAAAENvbmZpcm1BbGwBAVoFAC8BAVoFWgUAAAEB/////wEAAAAXYKkKAgAAAAAADgAAAElucHV0" +
           "QXJndW1lbnRzAQFbBQAuAERbBQAAlgAAAAABACgBAQAAAAEAAAABAAAAAQH/////AAAAAA==";

        private const string ErrorStepModel_InitializationString =
           "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" +
           "/////wAAAAA=";

        private const string HaltedStepModel_InitializationString =
           "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" +
           "Af////8AAAAA";

        private const string PreoperationalStepModel_InitializationString =
           "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" +
           "AAAH/////wEB/////wAAAAA=";

        private const string SelectModeAutomatic_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYYIKBAAA" +
           "AAEAEwAAAFNlbGVjdE1vZGVBdXRvbWF0aWMBAf8FAC8BAf8F/wUAAAEBAgAAAAA1AQEB9AUANQEBAfgF" +
           "AQAAABdgqQoCAAAAAAAPAAAAT3V0cHV0QXJndW1lbnRzAQEABgAuAEQABgAAlgAAAAABACgBAQAAAAEA" +
           "AAABAAAAAQH/////AAAAAA==";

        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAHgAAAFZpc2lvblN0YXRlTWFjaGluZVR5cGVJbnN0YW5jZQEBcwQBAXME/////yAAAAAVYIkKAgAA" +
           "AAAADAAAAEN1cnJlbnRTdGF0ZQEBdAQALwEAyAp0BAAAABX/////AQH/////AQAAABVgiQoCAAAAAAAC" +
           "AAAASWQBAXUEAC4ARHUEAAAAEf////8BAf////8AAAAABGCACgEAAAABABkAAABBdXRvbWF0aWNNb2Rl" +
           "U3RhdGVNYWNoaW5lAQGBBAAvAQF1A4EEAAD/////GQAAABVgiQoCAAAAAAAMAAAAQ3VycmVudFN0YXRl" +
           "AQGCBAAvAQDICoIEAAAAFf////8BAf////8BAAAAFWCJCgIAAAAAAAIAAABJZAEBgwQALgBEgwQAAAAR" +
           "/////wEB/////wAAAAAEYYIKBAAAAAEABQAAAEFib3J0AQGPBAAvAQGDA48EAAABAf////8CAAAAF2Cp" +
           "CgIAAAAAAA4AAABJbnB1dEFyZ3VtZW50cwEBkAQALgBEkAQAAJYAAAAAAQAoAQEAAAABAAAAAgAAAAEB" +
           "/////wAAAAAXYKkKAgAAAAAADwAAAE91dHB1dEFyZ3VtZW50cwEBkQQALgBEkQQAAJYAAAAAAQAoAQEA" +
           "AAABAAAAAQAAAAEB/////wAAAAAEYIAKAQAAAAEAEwAAAENvbnRpbnVvdXNFeGVjdXRpb24BAZIEAC8B" +
           "AAMJkgQAAAYAAAAAdQABAZQEAQEbAAABAbkEAQEbAAABAbsEAQEbAAABAb0EAQEaAAABARMFAQEaAAAB" +
           "ARUFAQAAABVgiQoCAAAAAAALAAAAU3RhdGVOdW1iZXIBAZMEAC4ARJMEAAAAB/////8BAf////8AAAAA" +
           "BGCACgEAAAABAB8AAABDb250aW51b3VzRXhlY3V0aW9uVG9SZWFkeUFib3J0AQG5BAAvAQAGCbkEAAAF" +
           "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" +
           "AAABAAAAAQAAAAEB/////wAAAAA=";
        #endregion
        #endif
        #endregion

        #region Public Properties
        /// <summary>
        /// A description for the AutomaticModeStateMachine Object.
        /// </summary>
        public VisionAutomaticModeStateMachineState AutomaticModeStateMachine
        {
            get
            {
                return m_automaticModeStateMachine;
            }

            set
            {
                if (!Object.ReferenceEquals(m_automaticModeStateMachine, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_automaticModeStateMachine = value;
            }
        }

        /// <summary>
        /// A description for the ConfirmAll Method.
        /// </summary>
        public MethodState ConfirmAll
        {
            get
            {
                return m_confirmAllMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_confirmAllMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_confirmAllMethod = value;
            }
        }

        /// <summary>
        /// A description for the Error Object.
        /// </summary>
        public StateMachineStateState Error
        {
            get
            {
                return m_error;
            }

            set
            {
                if (!Object.ReferenceEquals(m_error, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_error = value;
            }
        }

        /// <summary>
        /// A description for the ErrorStepModel Object.
        /// </summary>
        public VisionStepModelStateMachineState ErrorStepModel
        {
            get
            {
                return m_errorStepModel;
            }

            set
            {
                if (!Object.ReferenceEquals(m_errorStepModel, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_errorStepModel = value;
            }
        }

        /// <summary>
        /// A description for the ErrorToHalted Object.
        /// </summary>
        public StateMachineTransitionState ErrorToHalted
        {
            get
            {
                return m_errorToHalted;
            }

            set
            {
                if (!Object.ReferenceEquals(m_errorToHalted, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_errorToHalted = value;
            }
        }

        /// <summary>
        /// A description for the ErrorToHaltedAuto Object.
        /// </summary>
        public StateMachineTransitionState ErrorToHaltedAuto
        {
            get
            {
                return m_errorToHaltedAuto;
            }

            set
            {
                if (!Object.ReferenceEquals(m_errorToHaltedAuto, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_errorToHaltedAuto = value;
            }
        }

        /// <summary>
        /// A description for the ErrorToOperationalAuto Object.
        /// </summary>
        public StateMachineTransitionState ErrorToOperationalAuto
        {
            get
            {
                return m_errorToOperationalAuto;
            }

            set
            {
                if (!Object.ReferenceEquals(m_errorToOperationalAuto, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_errorToOperationalAuto = value;
            }
        }

        /// <summary>
        /// A description for the ErrorToPreoperational Object.
        /// </summary>
        public StateMachineTransitionState ErrorToPreoperational
        {
            get
            {
                return m_errorToPreoperational;
            }

            set
            {
                if (!Object.ReferenceEquals(m_errorToPreoperational, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_errorToPreoperational = value;
            }
        }

        /// <summary>
        /// A description for the ErrorToPreoperationalAuto Object.
        /// </summary>
        public StateMachineTransitionState ErrorToPreoperationalAuto
        {
            get
            {
                return m_errorToPreoperationalAuto;
            }

            set
            {
                if (!Object.ReferenceEquals(m_errorToPreoperationalAuto, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_errorToPreoperationalAuto = value;
            }
        }

        /// <summary>
        /// A description for the Halt Method.
        /// </summary>
        public MethodState Halt
        {
            get
            {
                return m_haltMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_haltMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_haltMethod = value;
            }
        }

        /// <summary>
        /// A description for the Halted Object.
        /// </summary>
        public StateMachineStateState Halted
        {
            get
            {
                return m_halted;
            }

            set
            {
                if (!Object.ReferenceEquals(m_halted, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_halted = value;
            }
        }

        /// <summary>
        /// A description for the HaltedStepModel Object.
        /// </summary>
        public VisionStepModelStateMachineState HaltedStepModel
        {
            get
            {
                return m_haltedStepModel;
            }

            set
            {
                if (!Object.ReferenceEquals(m_haltedStepModel, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_haltedStepModel = value;
            }
        }

        /// <summary>
        /// A description for the HaltedToPreoperational Object.
        /// </summary>
        public StateMachineTransitionState HaltedToPreoperational
        {
            get
            {
                return m_haltedToPreoperational;
            }

            set
            {
                if (!Object.ReferenceEquals(m_haltedToPreoperational, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_haltedToPreoperational = value;
            }
        }

        /// <summary>
        /// A description for the HaltedToPreoperationalAuto Object.
        /// </summary>
        public StateMachineTransitionState HaltedToPreoperationalAuto
        {
            get
            {
                return m_haltedToPreoperationalAuto;
            }

            set
            {
                if (!Object.ReferenceEquals(m_haltedToPreoperationalAuto, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_haltedToPreoperationalAuto = value;
            }
        }

        /// <summary>
        /// A description for the Operational Object.
        /// </summary>
        public StateMachineStateState Operational
        {
            get
            {
                return m_operational;
            }

            set
            {
                if (!Object.ReferenceEquals(m_operational, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_operational = value;
            }
        }

        /// <summary>
        /// A description for the OperationalToErrorAuto Object.
        /// </summary>
        public StateMachineTransitionState OperationalToErrorAuto
        {
            get
            {
                return m_operationalToErrorAuto;
            }

            set
            {
                if (!Object.ReferenceEquals(m_operationalToErrorAuto, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_operationalToErrorAuto = value;
            }
        }

        /// <summary>
        /// A description for the OperationalToHalted Object.
        /// </summary>
        public StateMachineTransitionState OperationalToHalted
        {
            get
            {
                return m_operationalToHalted;
            }

            set
            {
                if (!Object.ReferenceEquals(m_operationalToHalted, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_operationalToHalted = value;
            }
        }

        /// <summary>
        /// A description for the OperationalToHaltedAuto Object.
        /// </summary>
        public StateMachineTransitionState OperationalToHaltedAuto
        {
            get
            {
                return m_operationalToHaltedAuto;
            }

            set
            {
                if (!Object.ReferenceEquals(m_operationalToHaltedAuto, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_operationalToHaltedAuto = value;
            }
        }

        /// <summary>
        /// A description for the OperationalToPreoperational Object.
        /// </summary>
        public StateMachineTransitionState OperationalToPreoperational
        {
            get
            {
                return m_operationalToPreoperational;
            }

            set
            {
                if (!Object.ReferenceEquals(m_operationalToPreoperational, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_operationalToPreoperational = value;
            }
        }

        /// <summary>
        /// A description for the OperationalToPreoperationalAuto Object.
        /// </summary>
        public StateMachineTransitionState OperationalToPreoperationalAuto
        {
            get
            {
                return m_operationalToPreoperationalAuto;
            }

            set
            {
                if (!Object.ReferenceEquals(m_operationalToPreoperationalAuto, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_operationalToPreoperationalAuto = value;
            }
        }

        /// <summary>
        /// A description for the Preoperational Object.
        /// </summary>
        public StateMachineStateState Preoperational
        {
            get
            {
                return m_preoperational;
            }

            set
            {
                if (!Object.ReferenceEquals(m_preoperational, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_preoperational = value;
            }
        }

        /// <summary>
        /// A description for the PreoperationalStepModel Object.
        /// </summary>
        public VisionStepModelStateMachineState PreoperationalStepModel
        {
            get
            {
                return m_preoperationalStepModel;
            }

            set
            {
                if (!Object.ReferenceEquals(m_preoperationalStepModel, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_preoperationalStepModel = value;
            }
        }

        /// <summary>
        /// A description for the PreoperationalToErrorAuto Object.
        /// </summary>
        public StateMachineTransitionState PreoperationalToErrorAuto
        {
            get
            {
                return m_preoperationalToErrorAuto;
            }

            set
            {
                if (!Object.ReferenceEquals(m_preoperationalToErrorAuto, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_preoperationalToErrorAuto = value;
            }
        }

        /// <summary>
        /// A description for the PreoperationalToHalted Object.
        /// </summary>
        public StateMachineTransitionState PreoperationalToHalted
        {
            get
            {
                return m_preoperationalToHalted;
            }

            set
            {
                if (!Object.ReferenceEquals(m_preoperationalToHalted, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_preoperationalToHalted = value;
            }
        }

        /// <summary>
        /// A description for the PreoperationalToHaltedAuto Object.
        /// </summary>
        public StateMachineTransitionState PreoperationalToHaltedAuto
        {
            get
            {
                return m_preoperationalToHaltedAuto;
            }

            set
            {
                if (!Object.ReferenceEquals(m_preoperationalToHaltedAuto, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_preoperationalToHaltedAuto = value;
            }
        }

        /// <summary>
        /// A description for the PreoperationalToInitialized Object.
        /// </summary>
        public StateMachineTransitionState PreoperationalToInitialized
        {
            get
            {
                return m_preoperationalToInitialized;
            }

            set
            {
                if (!Object.ReferenceEquals(m_preoperationalToInitialized, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_preoperationalToInitialized = value;
            }
        }

        /// <summary>
        /// A description for the PreoperationalToInitializedAuto Object.
        /// </summary>
        public StateMachineTransitionState PreoperationalToInitializedAuto
        {
            get
            {
                return m_preoperationalToInitializedAuto;
            }

            set
            {
                if (!Object.ReferenceEquals(m_preoperationalToInitializedAuto, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_preoperationalToInitializedAuto = value;
            }
        }

        /// <summary>
        /// A description for the PreoperationalToOperational Object.
        /// </summary>
        public StateMachineTransitionState PreoperationalToOperational
        {
            get
            {
                return m_preoperationalToOperational;
            }

            set
            {
                if (!Object.ReferenceEquals(m_preoperationalToOperational, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_preoperationalToOperational = value;
            }
        }

        /// <summary>
        /// A description for the PreoperationalToOperationalAuto Object.
        /// </summary>
        public StateMachineTransitionState PreoperationalToOperationalAuto
        {
            get
            {
                return m_preoperationalToOperationalAuto;
            }

            set
            {
                if (!Object.ReferenceEquals(m_preoperationalToOperationalAuto, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_preoperationalToOperationalAuto = value;
            }
        }

        /// <summary>
        /// A description for the Reset Method.
        /// </summary>
        public MethodState Reset
        {
            get
            {
                return m_resetMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_resetMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_resetMethod = value;
            }
        }

        /// <summary>
        /// A description for the SelectModeAutomatic Method.
        /// </summary>
        public MethodState SelectModeAutomatic
        {
            get
            {
                return m_selectModeAutomaticMethod;
            }

            set
            {
                if (!Object.ReferenceEquals(m_selectModeAutomaticMethod, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_selectModeAutomaticMethod = value;
            }
        }
        #endregion

        #region Overridden Methods
        /// <summary>
        /// Populates a list with the children that belong to the node.
        /// </summary>
        /// <param name="context">The context for the system being accessed.</param>
        /// <param name="children">The list of children to populate.</param>
        public override void GetChildren(
            ISystemContext context,
            IList<BaseInstanceState> children)
        {
            if (m_automaticModeStateMachine != null)
            {
                children.Add(m_automaticModeStateMachine);
            }

            if (m_confirmAllMethod != null)
            {
                children.Add(m_confirmAllMethod);
            }

            if (m_error != null)
            {
                children.Add(m_error);
            }

            if (m_errorStepModel != null)
            {
                children.Add(m_errorStepModel);
            }

            if (m_errorToHalted != null)
            {
                children.Add(m_errorToHalted);
            }

            if (m_errorToHaltedAuto != null)
            {
                children.Add(m_errorToHaltedAuto);
            }

            if (m_errorToOperationalAuto != null)
            {
                children.Add(m_errorToOperationalAuto);
            }

            if (m_errorToPreoperational != null)
            {
                children.Add(m_errorToPreoperational);
            }

            if (m_errorToPreoperationalAuto != null)
            {
                children.Add(m_errorToPreoperationalAuto);
            }

            if (m_haltMethod != null)
            {
                children.Add(m_haltMethod);
            }

            if (m_halted != null)
            {
                children.Add(m_halted);
            }

            if (m_haltedStepModel != null)
            {
                children.Add(m_haltedStepModel);
            }

            if (m_haltedToPreoperational != null)
            {
                children.Add(m_haltedToPreoperational);
            }

            if (m_haltedToPreoperationalAuto != null)
            {
                children.Add(m_haltedToPreoperationalAuto);
            }

            if (m_operational != null)
            {
                children.Add(m_operational);
            }

            if (m_operationalToErrorAuto != null)
            {
                children.Add(m_operationalToErrorAuto);
            }

            if (m_operationalToHalted != null)
            {
                children.Add(m_operationalToHalted);
            }

            if (m_operationalToHaltedAuto != null)
            {
                children.Add(m_operationalToHaltedAuto);
            }

            if (m_operationalToPreoperational != null)
            {
                children.Add(m_operationalToPreoperational);
            }

            if (m_operationalToPreoperationalAuto != null)
            {
                children.Add(m_operationalToPreoperationalAuto);
            }

            if (m_preoperational != null)
            {
                children.Add(m_preoperational);
            }

            if (m_preoperationalStepModel != null)
            {
                children.Add(m_preoperationalStepModel);
            }

            if (m_preoperationalToErrorAuto != null)
            {
                children.Add(m_preoperationalToErrorAuto);
            }

            if (m_preoperationalToHalted != null)
            {
                children.Add(m_preoperationalToHalted);
            }

            if (m_preoperationalToHaltedAuto != null)
            {
                children.Add(m_preoperationalToHaltedAuto);
            }

            if (m_preoperationalToInitialized != null)
            {
                children.Add(m_preoperationalToInitialized);
            }

            if (m_preoperationalToInitializedAuto != null)
            {
                children.Add(m_preoperationalToInitializedAuto);
            }

            if (m_preoperationalToOperational != null)
            {
                children.Add(m_preoperationalToOperational);
            }

            if (m_preoperationalToOperationalAuto != null)
            {
                children.Add(m_preoperationalToOperationalAuto);
            }

            if (m_resetMethod != null)
            {
                children.Add(m_resetMethod);
            }

            if (m_selectModeAutomaticMethod != null)
            {
                children.Add(m_selectModeAutomaticMethod);
            }

            base.GetChildren(context, children);
        }

        /// <summary>
        /// Finds the child with the specified browse name.
        /// </summary>
        protected override BaseInstanceState FindChild(
            ISystemContext context,
            QualifiedName browseName,
            bool createOrReplace,
            BaseInstanceState replacement)
        {
            if (QualifiedName.IsNull(browseName))
            {
                return null;
            }

            BaseInstanceState instance = null;

            switch (browseName.Name)
            {
                case Prefix2.BrowseNames.AutomaticModeStateMachine:
                {
                    if (createOrReplace)
                    {
                        if (AutomaticModeStateMachine == null)
                        {
                            if (replacement == null)
                            {
                                AutomaticModeStateMachine = new VisionAutomaticModeStateMachineState(this);
                            }
                            else
                            {
                                AutomaticModeStateMachine = (VisionAutomaticModeStateMachineState)replacement;
                            }
                        }
                    }

                    instance = AutomaticModeStateMachine;
                    break;
                }

                case Prefix2.BrowseNames.ConfirmAll:
                {
                    if (createOrReplace)
                    {
                        if (ConfirmAll == null)
                        {
                            if (replacement == null)
                            {
                                ConfirmAll = new MethodState(this);
                            }
                            else
                            {
                                ConfirmAll = (MethodState)replacement;
                            }
                        }
                    }

                    instance = ConfirmAll;
                    break;
                }

                case Prefix2.BrowseNames.Error:
                {
                    if (createOrReplace)
                    {
                        if (Error == null)
                        {
                            if (replacement == null)
                            {
                                Error = new StateMachineStateState(this);
                            }
                            else
                            {
                                Error = (StateMachineStateState)replacement;
                            }
                        }
                    }

                    instance = Error;
                    break;
                }

                case Prefix2.BrowseNames.ErrorStepModel:
                {
                    if (createOrReplace)
                    {
                        if (ErrorStepModel == null)
                        {
                            if (replacement == null)
                            {
                                ErrorStepModel = new VisionStepModelStateMachineState(this);
                            }
                            else
                            {
                                ErrorStepModel = (VisionStepModelStateMachineState)replacement;
                            }
                        }
                    }

                    instance = ErrorStepModel;
                    break;
                }

                case Prefix2.BrowseNames.ErrorToHalted:
                {
                    if (createOrReplace)
                    {
                        if (ErrorToHalted == null)
                        {
                            if (replacement == null)
                            {
                                ErrorToHalted = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                ErrorToHalted = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = ErrorToHalted;
                    break;
                }

                case Prefix2.BrowseNames.ErrorToHaltedAuto:
                {
                    if (createOrReplace)
                    {
                        if (ErrorToHaltedAuto == null)
                        {
                            if (replacement == null)
                            {
                                ErrorToHaltedAuto = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                ErrorToHaltedAuto = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = ErrorToHaltedAuto;
                    break;
                }

                case Prefix2.BrowseNames.ErrorToOperationalAuto:
                {
                    if (createOrReplace)
                    {
                        if (ErrorToOperationalAuto == null)
                        {
                            if (replacement == null)
                            {
                                ErrorToOperationalAuto = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                ErrorToOperationalAuto = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = ErrorToOperationalAuto;
                    break;
                }

                case Prefix2.BrowseNames.ErrorToPreoperational:
                {
                    if (createOrReplace)
                    {
                        if (ErrorToPreoperational == null)
                        {
                            if (replacement == null)
                            {
                                ErrorToPreoperational = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                ErrorToPreoperational = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = ErrorToPreoperational;
                    break;
                }

                case Prefix2.BrowseNames.ErrorToPreoperationalAuto:
                {
                    if (createOrReplace)
                    {
                        if (ErrorToPreoperationalAuto == null)
                        {
                            if (replacement == null)
                            {
                                ErrorToPreoperationalAuto = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                ErrorToPreoperationalAuto = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = ErrorToPreoperationalAuto;
                    break;
                }

                case Prefix2.BrowseNames.Halt:
                {
                    if (createOrReplace)
                    {
                        if (Halt == null)
                        {
                            if (replacement == null)
                            {
                                Halt = new MethodState(this);
                            }
                            else
                            {
                                Halt = (MethodState)replacement;
                            }
                        }
                    }

                    instance = Halt;
                    break;
                }

                case Prefix2.BrowseNames.Halted:
                {
                    if (createOrReplace)
                    {
                        if (Halted == null)
                        {
                            if (replacement == null)
                            {
                                Halted = new StateMachineStateState(this);
                            }
                            else
                            {
                                Halted = (StateMachineStateState)replacement;
                            }
                        }
                    }

                    instance = Halted;
                    break;
                }

                case Prefix2.BrowseNames.HaltedStepModel:
                {
                    if (createOrReplace)
                    {
                        if (HaltedStepModel == null)
                        {
                            if (replacement == null)
                            {
                                HaltedStepModel = new VisionStepModelStateMachineState(this);
                            }
                            else
                            {
                                HaltedStepModel = (VisionStepModelStateMachineState)replacement;
                            }
                        }
                    }

                    instance = HaltedStepModel;
                    break;
                }

                case Prefix2.BrowseNames.HaltedToPreoperational:
                {
                    if (createOrReplace)
                    {
                        if (HaltedToPreoperational == null)
                        {
                            if (replacement == null)
                            {
                                HaltedToPreoperational = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                HaltedToPreoperational = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = HaltedToPreoperational;
                    break;
                }

                case Prefix2.BrowseNames.HaltedToPreoperationalAuto:
                {
                    if (createOrReplace)
                    {
                        if (HaltedToPreoperationalAuto == null)
                        {
                            if (replacement == null)
                            {
                                HaltedToPreoperationalAuto = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                HaltedToPreoperationalAuto = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = HaltedToPreoperationalAuto;
                    break;
                }

                case Prefix2.BrowseNames.Operational:
                {
                    if (createOrReplace)
                    {
                        if (Operational == null)
                        {
                            if (replacement == null)
                            {
                                Operational = new StateMachineStateState(this);
                            }
                            else
                            {
                                Operational = (StateMachineStateState)replacement;
                            }
                        }
                    }

                    instance = Operational;
                    break;
                }

                case Prefix2.BrowseNames.OperationalToErrorAuto:
                {
                    if (createOrReplace)
                    {
                        if (OperationalToErrorAuto == null)
                        {
                            if (replacement == null)
                            {
                                OperationalToErrorAuto = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                OperationalToErrorAuto = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = OperationalToErrorAuto;
                    break;
                }

                case Prefix2.BrowseNames.OperationalToHalted:
                {
                    if (createOrReplace)
                    {
                        if (OperationalToHalted == null)
                        {
                            if (replacement == null)
                            {
                                OperationalToHalted = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                OperationalToHalted = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = OperationalToHalted;
                    break;
                }

                case Prefix2.BrowseNames.OperationalToHaltedAuto:
                {
                    if (createOrReplace)
                    {
                        if (OperationalToHaltedAuto == null)
                        {
                            if (replacement == null)
                            {
                                OperationalToHaltedAuto = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                OperationalToHaltedAuto = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = OperationalToHaltedAuto;
                    break;
                }

                case Prefix2.BrowseNames.OperationalToPreoperational:
                {
                    if (createOrReplace)
                    {
                        if (OperationalToPreoperational == null)
                        {
                            if (replacement == null)
                            {
                                OperationalToPreoperational = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                OperationalToPreoperational = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = OperationalToPreoperational;
                    break;
                }

                case Prefix2.BrowseNames.OperationalToPreoperationalAuto:
                {
                    if (createOrReplace)
                    {
                        if (OperationalToPreoperationalAuto == null)
                        {
                            if (replacement == null)
                            {
                                OperationalToPreoperationalAuto = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                OperationalToPreoperationalAuto = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = OperationalToPreoperationalAuto;
                    break;
                }

                case Prefix2.BrowseNames.Preoperational:
                {
                    if (createOrReplace)
                    {
                        if (Preoperational == null)
                        {
                            if (replacement == null)
                            {
                                Preoperational = new StateMachineStateState(this);
                            }
                            else
                            {
                                Preoperational = (StateMachineStateState)replacement;
                            }
                        }
                    }

                    instance = Preoperational;
                    break;
                }

                case Prefix2.BrowseNames.PreoperationalStepModel:
                {
                    if (createOrReplace)
                    {
                        if (PreoperationalStepModel == null)
                        {
                            if (replacement == null)
                            {
                                PreoperationalStepModel = new VisionStepModelStateMachineState(this);
                            }
                            else
                            {
                                PreoperationalStepModel = (VisionStepModelStateMachineState)replacement;
                            }
                        }
                    }

                    instance = PreoperationalStepModel;
                    break;
                }

                case Prefix2.BrowseNames.PreoperationalToErrorAuto:
                {
                    if (createOrReplace)
                    {
                        if (PreoperationalToErrorAuto == null)
                        {
                            if (replacement == null)
                            {
                                PreoperationalToErrorAuto = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                PreoperationalToErrorAuto = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = PreoperationalToErrorAuto;
                    break;
                }

                case Prefix2.BrowseNames.PreoperationalToHalted:
                {
                    if (createOrReplace)
                    {
                        if (PreoperationalToHalted == null)
                        {
                            if (replacement == null)
                            {
                                PreoperationalToHalted = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                PreoperationalToHalted = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = PreoperationalToHalted;
                    break;
                }

                case Prefix2.BrowseNames.PreoperationalToHaltedAuto:
                {
                    if (createOrReplace)
                    {
                        if (PreoperationalToHaltedAuto == null)
                        {
                            if (replacement == null)
                            {
                                PreoperationalToHaltedAuto = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                PreoperationalToHaltedAuto = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = PreoperationalToHaltedAuto;
                    break;
                }

                case Prefix2.BrowseNames.PreoperationalToInitialized:
                {
                    if (createOrReplace)
                    {
                        if (PreoperationalToInitialized == null)
                        {
                            if (replacement == null)
                            {
                                PreoperationalToInitialized = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                PreoperationalToInitialized = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = PreoperationalToInitialized;
                    break;
                }

                case Prefix2.BrowseNames.PreoperationalToInitializedAuto:
                {
                    if (createOrReplace)
                    {
                        if (PreoperationalToInitializedAuto == null)
                        {
                            if (replacement == null)
                            {
                                PreoperationalToInitializedAuto = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                PreoperationalToInitializedAuto = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = PreoperationalToInitializedAuto;
                    break;
                }

                case Prefix2.BrowseNames.PreoperationalToOperational:
                {
                    if (createOrReplace)
                    {
                        if (PreoperationalToOperational == null)
                        {
                            if (replacement == null)
                            {
                                PreoperationalToOperational = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                PreoperationalToOperational = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = PreoperationalToOperational;
                    break;
                }

                case Prefix2.BrowseNames.PreoperationalToOperationalAuto:
                {
                    if (createOrReplace)
                    {
                        if (PreoperationalToOperationalAuto == null)
                        {
                            if (replacement == null)
                            {
                                PreoperationalToOperationalAuto = new StateMachineTransitionState(this);
                            }
                            else
                            {
                                PreoperationalToOperationalAuto = (StateMachineTransitionState)replacement;
                            }
                        }
                    }

                    instance = PreoperationalToOperationalAuto;
                    break;
                }

                case Prefix2.BrowseNames.Reset:
                {
                    if (createOrReplace)
                    {
                        if (Reset == null)
                        {
                            if (replacement == null)
                            {
                                Reset = new MethodState(this);
                            }
                            else
                            {
                                Reset = (MethodState)replacement;
                            }
                        }
                    }

                    instance = Reset;
                    break;
                }

                case Prefix2.BrowseNames.SelectModeAutomatic:
                {
                    if (createOrReplace)
                    {
                        if (SelectModeAutomatic == null)
                        {
                            if (replacement == null)
                            {
                                SelectModeAutomatic = new MethodState(this);
                            }
                            else
                            {
                                SelectModeAutomatic = (MethodState)replacement;
                            }
                        }
                    }

                    instance = SelectModeAutomatic;
                    break;
                }
            }

            if (instance != null)
            {
                return instance;
            }

            return base.FindChild(context, browseName, createOrReplace, replacement);
        }
        #endregion

        #region Private Fields
        private VisionAutomaticModeStateMachineState m_automaticModeStateMachine;
        private MethodState m_confirmAllMethod;
        private StateMachineStateState m_error;
        private VisionStepModelStateMachineState m_errorStepModel;
        private StateMachineTransitionState m_errorToHalted;
        private StateMachineTransitionState m_errorToHaltedAuto;
        private StateMachineTransitionState m_errorToOperationalAuto;
        private StateMachineTransitionState m_errorToPreoperational;
        private StateMachineTransitionState m_errorToPreoperationalAuto;
        private MethodState m_haltMethod;
        private StateMachineStateState m_halted;
        private VisionStepModelStateMachineState m_haltedStepModel;
        private StateMachineTransitionState m_haltedToPreoperational;
        private StateMachineTransitionState m_haltedToPreoperationalAuto;
        private StateMachineStateState m_operational;
        private StateMachineTransitionState m_operationalToErrorAuto;
        private StateMachineTransitionState m_operationalToHalted;
        private StateMachineTransitionState m_operationalToHaltedAuto;
        private StateMachineTransitionState m_operationalToPreoperational;
        private StateMachineTransitionState m_operationalToPreoperationalAuto;
        private StateMachineStateState m_preoperational;
        private VisionStepModelStateMachineState m_preoperationalStepModel;
        private StateMachineTransitionState m_preoperationalToErrorAuto;
        private StateMachineTransitionState m_preoperationalToHalted;
        private StateMachineTransitionState m_preoperationalToHaltedAuto;
        private StateMachineTransitionState m_preoperationalToInitialized;
        private StateMachineTransitionState m_preoperationalToInitializedAuto;
        private StateMachineTransitionState m_preoperationalToOperational;
        private StateMachineTransitionState m_preoperationalToOperationalAuto;
        private MethodState m_resetMethod;
        private MethodState m_selectModeAutomaticMethod;
        #endregion
    }
    #endif
    #endregion

    #region VisionSystemState Class
    #if (!OPCUA_EXCLUDE_VisionSystemState)
    /// <summary>
    /// Stores an instance of the VisionSystemType ObjectType.
    /// </summary>
    /// <exclude />
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Opc.Ua.ModelCompiler", "1.0.0.0")]
    public partial class VisionSystemState : BaseObjectState
    {
        #region Constructors
        /// <summary>
        /// Initializes the type with its default attribute values.
        /// </summary>
        public VisionSystemState(NodeState parent) : base(parent)
        {
        }

        /// <summary>
        /// Returns the id of the default type definition node for the instance.
        /// </summary>
        protected override NodeId GetDefaultTypeDefinitionId(NamespaceTable namespaceUris)
        {
            return Opc.Ua.NodeId.Create(Prefix2.ObjectTypes.VisionSystemType, Prefix2.Namespaces.Name2, namespaceUris);
        }

        #if (!OPCUA_EXCLUDE_InitializationStrings)
        /// <summary>
        /// Initializes the instance.
        /// </summary>
        protected override void Initialize(ISystemContext context)
        {
            Initialize(context, InitializationString);
            InitializeOptionalChildren(context);
        }

        protected override void Initialize(ISystemContext context, NodeState source)
        {
            InitializeOptionalChildren(context);
            base.Initialize(context, source);
        }

        /// <summary>
        /// Initializes the any option children defined for the instance.
        /// </summary>
        protected override void InitializeOptionalChildren(ISystemContext context)
        {
            base.InitializeOptionalChildren(context);

            if (ConfigurationManagement != null)
            {
                ConfigurationManagement.Initialize(context, ConfigurationManagement_InitializationString);
            }

            if (DiagnosticLevel != null)
            {
                DiagnosticLevel.Initialize(context, DiagnosticLevel_InitializationString);
            }

            if (RecipeManagement != null)
            {
                RecipeManagement.Initialize(context, RecipeManagement_InitializationString);
            }

            if (ResultManagement != null)
            {
                ResultManagement.Initialize(context, ResultManagement_InitializationString);
            }

            if (SafetyStateManagement != null)
            {
                SafetyStateManagement.Initialize(context, SafetyStateManagement_InitializationString);
            }

            if (SystemState != null)
            {
                SystemState.Initialize(context, SystemState_InitializationString);
            }
        }

        #region Initialization String
        private const string ConfigurationManagement_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAKAQAA" +
           "AAEAFwAAAENvbmZpZ3VyYXRpb25NYW5hZ2VtZW50AQECBgAvAQFeAgIGAAD/////BAAAAARhggoEAAAA" +
           "AQAVAAAAQWN0aXZhdGVDb25maWd1cmF0aW9uAQEDBgAvAQFfAgMGAAABAf////8CAAAAF2CpCgIAAAAA" +
           "AA4AAABJbnB1dEFyZ3VtZW50cwEBBAYALgBEBAYAAJYAAAAAAQAoAQEAAAABAAAAAQAAAAEB/////wAA" +
           "AAAXYKkKAgAAAAAADwAAAE91dHB1dEFyZ3VtZW50cwEBBQYALgBEBQYAAJYAAAAAAQAoAQEAAAABAAAA" +
           "AQAAAAEB/////wAAAAAVYKkKAgAAAAEAEwAAAEFjdGl2ZUNvbmZpZ3VyYXRpb24BAQYGAC8APwYGAAAW" +
           "AQHhEwLcAAAAPENvbmZpZ3VyYXRpb25EYXRhVHlwZSB4bWxucz0iaHR0cDovL29wY2ZvdW5kYXRpb24u" +
           "b3JnL1VBL01hY2hpbmVWaXNpb24vVHlwZXMueHNkIj48RW5jb2RpbmdNYXNrPjA8L0VuY29kaW5nTWFz" +
           "az48SW50ZXJuYWxJZD48SWQ+PC9JZD48L0ludGVybmFsSWQ+PExhc3RNb2RpZmllZD4xOTAwLTAxLTAx" +
           "VDAwOjAwOjAwWjwvTGFzdE1vZGlmaWVkPjwvQ29uZmlndXJhdGlvbkRhdGFUeXBlPgEBDQD/////AwP/" +
           "////AAAAAARhggoEAAAAAQAUAAAAR2V0Q29uZmlndXJhdGlvbkJ5SWQBARYGAC8BAXICFgYAAAEB////" +
           "/wIAAAAXYKkKAgAAAAAADgAAAElucHV0QXJndW1lbnRzAQEXBgAuAEQXBgAAlgAAAAABACgBAQAAAAEA" +
           "AAACAAAAAQH/////AAAAABdgqQoCAAAAAAAPAAAAT3V0cHV0QXJndW1lbnRzAQEYBgAuAEQYBgAAlgAA" +
           "AAABACgBAQAAAAEAAAADAAAAAQH/////AAAAAARhggoEAAAAAQAUAAAAR2V0Q29uZmlndXJhdGlvbkxp" +
           "c3QBARkGAC8BAXUCGQYAAAEB/////wIAAAAXYKkKAgAAAAAADgAAAElucHV0QXJndW1lbnRzAQEaBgAu" +
           "AEQaBgAAlgAAAAABACgBAQAAAAEAAAADAAAAAQH/////AAAAABdgqQoCAAAAAAAPAAAAT3V0cHV0QXJn" +
           "dW1lbnRzAQEbBgAuAEQbBgAAlgAAAAABACgBAQAAAAEAAAAFAAAAAQH/////AAAAAA==";

        private const string DiagnosticLevel_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYIkKAgAA" +
           "AAEADwAAAERpYWdub3N0aWNMZXZlbAEBIgYALwA/IgYAAAAF/////wMD/////wAAAAA=";

        private const string RecipeManagement_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAKAQAA" +
           "AAEAEAAAAFJlY2lwZU1hbmFnZW1lbnQBASMGAC8BAfkCIwYAAP////8DAAAABGGCCgQAAAABABUAAABH" +
           "ZXRSZWNpcGVMaXN0RmlsdGVyZWQBAScGAC8BAf0CJwYAAAEB/////wIAAAAXYKkKAgAAAAAADgAAAElu" +
           "cHV0QXJndW1lbnRzAQEoBgAuAEQoBgAAlgAAAAABACgBAQAAAAEAAAAGAAAAAQH/////AAAAABdgqQoC" +
           "AAAAAAAPAAAAT3V0cHV0QXJndW1lbnRzAQEpBgAuAEQpBgAAlgAAAAABACgBAQAAAAEAAAAFAAAAAQH/" +
           "////AAAAAARhggoEAAAAAQANAAAAUHJlcGFyZVJlY2lwZQEBLQYALwEBAwMtBgAAAQH/////AgAAABdg" +
           "qQoCAAAAAAAOAAAASW5wdXRBcmd1bWVudHMBAS4GAC4ARC4GAACWAAAAAAEAKAEBAAAAAQAAAAIAAAAB" +
           "Af////8AAAAAF2CpCgIAAAAAAA8AAABPdXRwdXRBcmd1bWVudHMBAS8GAC4ARC8GAACWAAAAAAEAKAEB" +
           "AAAAAQAAAAMAAAABAf////8AAAAABGGCCgQAAAABAA8AAABVbnByZXBhcmVSZWNpcGUBAUkGAC8BAR8D" +
           "SQYAAAEB/////wIAAAAXYKkKAgAAAAAADgAAAElucHV0QXJndW1lbnRzAQFKBgAuAERKBgAAlgAAAAAB" +
           "ACgBAQAAAAEAAAACAAAAAQH/////AAAAABdgqQoCAAAAAAAPAAAAT3V0cHV0QXJndW1lbnRzAQFLBgAu" +
           "AERLBgAAlgAAAAABACgBAQAAAAEAAAACAAAAAQH/////AAAAAA==";

        private const string ResultManagement_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAKAQAA" +
           "AAEAEAAAAFJlc3VsdE1hbmFnZW1lbnQBAUwGAC8BATwDTAYAAP////8DAAAABGGCCgQAAAABAA0AAABH" +
           "ZXRSZXN1bHRCeUlkAQFNBgAvAQE9A00GAAABAf////8CAAAAF2CpCgIAAAAAAA4AAABJbnB1dEFyZ3Vt" +
           "ZW50cwEBTgYALgBETgYAAJYAAAAAAQAoAQEAAAABAAAAAgAAAAEB/////wAAAAAXYKkKAgAAAAAADwAA" +
           "AE91dHB1dEFyZ3VtZW50cwEBTwYALgBETwYAAJYAAAAAAQAoAQEAAAABAAAAAwAAAAEB/////wAAAAAE" +
           "YYIKBAAAAAEAFwAAAEdldFJlc3VsdENvbXBvbmVudHNCeUlkAQFQBgAvAQFAA1AGAAABAf////8CAAAA" +
           "F2CpCgIAAAAAAA4AAABJbnB1dEFyZ3VtZW50cwEBUQYALgBEUQYAAJYAAAAAAQAoAQEAAAABAAAAAgAA" +
           "AAEB/////wAAAAAXYKkKAgAAAAAADwAAAE91dHB1dEFyZ3VtZW50cwEBUgYALgBEUgYAAJYAAAAAAQAo" +
           "AQEAAAABAAAAEQAAAAEB/////wAAAAAEYYIKBAAAAAEAFQAAAEdldFJlc3VsdExpc3RGaWx0ZXJlZAEB" +
           "UwYALwEBQwNTBgAAAQH/////AgAAABdgqQoCAAAAAAAOAAAASW5wdXRBcmd1bWVudHMBAVQGAC4ARFQG" +
           "AACWAAAAAAEAKAEBAAAAAQAAAAwAAAABAf////8AAAAAF2CpCgIAAAAAAA8AAABPdXRwdXRBcmd1bWVu" +
           "dHMBAVUGAC4ARFUGAACWAAAAAAEAKAEBAAAAAQAAAAUAAAABAf////8AAAAA";

        private const string SafetyStateManagement_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAKAQAA" +
           "AAEAFQAAAFNhZmV0eVN0YXRlTWFuYWdlbWVudAEBZQYALwEBbwNlBgAA/////wMAAAAEYYIKBAAAAAEA" +
           "EQAAAFJlcG9ydFNhZmV0eVN0YXRlAQFmBgAvAQFwA2YGAAABAf////8CAAAAF2CpCgIAAAAAAA4AAABJ" +
           "bnB1dEFyZ3VtZW50cwEBZwYALgBEZwYAAJYAAAAAAQAoAQEAAAABAAAAAgAAAAEB/////wAAAAAXYKkK" +
           "AgAAAAAADwAAAE91dHB1dEFyZ3VtZW50cwEBaAYALgBEaAYAAJYAAAAAAQAoAQEAAAABAAAAAQAAAAEB" +
           "/////wAAAAAVYIkKAgAAAAEAFwAAAFZpc2lvblNhZmV0eUluZm9ybWF0aW9uAQFpBgAvAD9pBgAAAAz/" +
           "////AwP/////AAAAABVgiQoCAAAAAQAVAAAAVmlzaW9uU2FmZXR5VHJpZ2dlcmVkAQFqBgAvAD9qBgAA" +
           "AAH/////AwP/////AAAAAA==";

        private const string SystemState_InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8VYKkKAgAA" +
           "AAEACwAAAFN5c3RlbVN0YXRlAQFrBgAvAD9rBgAAFgEBnxQCsQAAADxTeXN0ZW1TdGF0ZURlc2NyaXB0" +
           "aW9uRGF0YVR5cGUgeG1sbnM9Imh0dHA6Ly9vcGNmb3VuZGF0aW9uLm9yZy9VQS9NYWNoaW5lVmlzaW9u" +
           "L1R5cGVzLnhzZCI+PEVuY29kaW5nTWFzaz4wPC9FbmNvZGluZ01hc2s+PFN0YXRlPk5TVF82XzY8L1N0" +
           "YXRlPjwvU3lzdGVtU3RhdGVEZXNjcmlwdGlvbkRhdGFUeXBlPgEBGQD/////AwP/////AAAAAA==";

        private const string InitializationString =
           "AQAAACkAAABodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbv////8EYIAAAQAA" +
           "AAEAGAAAAFZpc2lvblN5c3RlbVR5cGVJbnN0YW5jZQEBAQYBAQEG/////wcAAAAEYIAKAQAAAAEAFwAA" +
           "AENvbmZpZ3VyYXRpb25NYW5hZ2VtZW50AQECBgAvAQFeAgIGAAD/////BAAAAARhggoEAAAAAQAVAAAA" +
           "QWN0aXZhdGVDb25maWd1cmF0aW9uAQEDBgAvAQFfAgMGAAABAf////8CAAAAF2CpCgIAAAAAAA4AAABJ" +
           "bnB1dEFyZ3VtZW50cwEBBAYALgBEBAYAAJYAAAAAAQAoAQEAAAABAAAAAQAAAAEB/////wAAAAAXYKkK" +
           "AgAAAAAADwAAAE91dHB1dEFyZ3VtZW50cwEBBQYALgBEBQYAAJYAAAAAAQAoAQEAAAABAAAAAQAAAAEB" +
           "/////wAAAAAVYKkKAgAAAAEAEwAAAEFjdGl2ZUNvbmZpZ3VyYXRpb24BAQYGAC8APwYGAAAWAQHhEwLc" +
           "AAAAPENvbmZpZ3VyYXRpb25EYXRhVHlwZSB4bWxucz0iaHR0cDovL29wY2ZvdW5kYXRpb24ub3JnL1VB" +
           "L01hY2hpbmVWaXNpb24vVHlwZXMueHNkIj48RW5jb2RpbmdNYXNrPjA8L0VuY29kaW5nTWFzaz48SW50" +
           "ZXJuYWxJZD48SWQ+PC9JZD48L0ludGVybmFsSWQ+PExhc3RNb2RpZmllZD4xOTAwLTAxLTAxVDAwOjAw" +
           "OjAwWjwvTGFzdE1vZGlmaWVkPjwvQ29uZmlndXJhdGlvbkRhdGFUeXBlPgEBDQD/////AwP/////AAAA" +
           "AARhggoEAAAAAQAUAAAAR2V0Q29uZmlndXJhdGlvbkJ5SWQBARYGAC8BAXICFgYAAAEB/////wIAAAAX" +
           "YKkKAgAAAAAADgAAAElucHV0QXJndW1lbnRzAQEXBgAuAEQXBgAAlgAAAAABACgBAQAAAAEAAAACAAAA" +
           "AQH/////AAAAABdgqQoCAAAAAAAPAAAAT3V0cHV0QXJndW1lbnRzAQEYBgAuAEQYBgAAlgAAAAABACgB" +
           "AQAAAAEAAAADAAAAAQH/////AAAAAARhggoEAAAAAQAUAAAAR2V0Q29uZmlndXJhdGlvbkxpc3QBARkG" +
           "AC8BAXUCGQYAAAEB/////wIAAAAXYKkKAgAAAAAADgAAAElucHV0QXJndW1lbnRzAQEaBgAuAEQaBgAA" +
           "lgAAAAABACgBAQAAAAEAAAADAAAAAQH/////AAAAABdgqQoCAAAAAAAPAAAAT3V0cHV0QXJndW1lbnRz" +
           "AQEbBgAuAEQbBgAAlgAAAAABACgBAQAAAAEAAAAFAAAAAQH/////AAAAABVgiQoCAAAAAQAPAAAARGlh" +
           "Z25vc3RpY0xldmVsAQEiBgAvAD8iBgAAAAX/////AwP/////AAAAAARggAoBAAAAAQAQAAAAUmVjaXBl" +
           "TWFuYWdlbWVudAEBIwYALwEB+QIjBgAA/////wMAAAAEYYIKBAAAAAEAFQAAAEdldFJlY2lwZUxpc3RG" +
           "aWx0ZXJlZAEBJwYALwEB/QInBgAAAQH/////AgAAABdgqQoCAAAAAAAOAAAASW5wdXRBcmd1bWVudHMB" +
           "ASgGAC4ARCgGAACWAAAAAAEAKAEBAAAAAQAAAAYAAAABAf////8AAAAAF2CpCgIAAAAAAA8AAABPdXRw" +
           "dXRBcmd1bWVudHMBASkGAC4ARCkGAACWAAAAAAEAKAEBAAAAAQAAAAUAAAABAf////8AAAAABGGCCgQA" +
           "AAABAA0AAABQcmVwYXJlUmVjaXBlAQEtBgAvAQEDAy0GAAABAf////8CAAAAF2CpCgIAAAAAAA4AAABJ" +
           "bnB1dEFyZ3VtZW50cwEBLgYALgBELgYAAJYAAAAAAQAoAQEAAAABAAAAAgAAAAEB/////wAAAAAXYKkK" +
           "AgAAAAAADwAAAE91dHB1dEFyZ3VtZW50cwEBLwYALgBELwYAAJYAAAAAAQAoAQEAAAABAAAAAwAAAAEB" +
           "/////wAAAAAEYYIKBAAAAAEADwAAAFVucHJlcGFyZVJlY2lwZQEBSQYALwEBHwNJBgAAAQH/////AgAA" +
           "ABdgqQoCAAAAAAAOAAAASW5wdXRBcmd1bWVudHMBAUoGAC4AREoGAACWAAAAAAEAKAEBAAAAAQAAAAIA" +
           "AAABAf////8AAAAAF2CpCgIAAAAAAA8AAABPdXRwdXRBcmd1bWVudHMBAUsGAC4AREsGAACWAAAAAAEA" +
           "KAEBAAAAAQAAAAIAAAABAf////8AAAAABGCACgEAAAABABAAAABSZXN1bHRNYW5hZ2VtZW50AQFMBgAv" +
           "AQE8A0wGAAD/////AwAAAARhggoEAAAAAQANAAAAR2V0UmVzdWx0QnlJZAEBTQYALwEBPQNNBgAAAQH/" +
           "////AgAAABdgqQoCAAAAAAAOAAAASW5wdXRBcmd1bWVudHMBAU4GAC4ARE4GAACWAAAAAAEAKAEBAAAA" +
           "AQAAAAIAAAABAf////8AAAAAF2CpCgIAAAAAAA8AAABPdXRwdXRBcmd1bWVudHMBAU8GAC4ARE8GAACW" +
           "AAAAAAEAKAEBAAAAAQAAAAMAAAABAf////8AAAAABGGCCgQAAAABABcAAABHZXRSZXN1bHRDb21wb25l" +
           "bnRzQnlJZAEBUAYALwEBQANQBgAAAQH/////AgAAABdgqQoCAAAAAAAOAAAASW5wdXRBcmd1bWVudHMB" +
           "AVEGAC4ARFEGAACWAAAAAAEAKAEBAAAAAQAAAAIAAAABAf////8AAAAAF2CpCgIAAAAAAA8AAABPdXRw" +
           "dXRBcmd1bWVudHMBAVIGAC4ARFIGAACWAAAAAAEAKAEBAAAAAQAAABEAAAABAf////8AAAAABGGCCgQA" +
           "AAABABUAAABHZXRSZXN1bHRMaXN0RmlsdGVyZWQBAVMGAC8BAUMDUwYAAAEB/////wIAAAAXYKkKAgAA" +
           "AAAADgAAAElucHV0QXJndW1lbnRzAQFUBgAuAERUBgAAlgAAAAABACgBAQAAAAEAAAAMAAAAAQH/////" +
           "AAAAABdgqQoCAAAAAAAPAAAAT3V0cHV0QXJndW1lbnRzAQFVBgAuAERVBgAAlgAAAAABACgBAQAAAAEA" +
           "AAAFAAAAAQH/////AAAAAARggAoBAAAAAQAVAAAAU2FmZXR5U3RhdGVNYW5hZ2VtZW50AQFlBgAvAQFv" +
           "A2UGAAD/////AwAAAARhggoEAAAAAQARAAAAUmVwb3J0U2FmZXR5U3RhdGUBAWYGAC8BAXADZgYAAAEB" +
           "/////wIAAAAXYKkKAgAAAAAADgAAAElucHV0QXJndW1lbnRzAQFnBgAuAERnBgAAlgAAAAABACgBAQAA" +
           "AAEAAAACAAAAAQH/////AAAAABdgqQoCAAAAAAAPAAAAT3V0cHV0QXJndW1lbnRzAQFoBgAuAERoBgAA" +
           "lgAAAAABACgBAQAAAAEAAAABAAAAAQH/////AAAAABVgiQoCAAAAAQAXAAAAVmlzaW9uU2FmZXR5SW5m" +
           "b3JtYXRpb24BAWkGAC8AP2kGAAAADP////8DA/////8AAAAAFWCJCgIAAAABABUAAABWaXNpb25TYWZl" +
           "dHlUcmlnZ2VyZWQBAWoGAC8AP2oGAAAAAf////8DA/////8AAAAAFWCpCgIAAAABAAsAAABTeXN0ZW1T" +
           "dGF0ZQEBawYALwA/awYAABYBAZ8UArEAAAA8U3lzdGVtU3RhdGVEZXNjcmlwdGlvbkRhdGFUeXBlIHht" +
           "bG5zPSJodHRwOi8vb3BjZm91bmRhdGlvbi5vcmcvVUEvTWFjaGluZVZpc2lvbi9UeXBlcy54c2QiPjxF" +
           "bmNvZGluZ01hc2s+MDwvRW5jb2RpbmdNYXNrPjxTdGF0ZT5OU1RfNl82PC9TdGF0ZT48L1N5c3RlbVN0" +
           "YXRlRGVzY3JpcHRpb25EYXRhVHlwZT4BARkA/////wMD/////wAAAAAEYIAKAQAAAAEAEgAAAFZpc2lv" +
           "blN0YXRlTWFjaGluZQEBbAYALwEBcwRsBgAA/////xoAAAAVYIkKAgAAAAAADAAAAEN1cnJlbnRTdGF0" +
           "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" +
           "AAABACgBAQAAAAEAAAABAAAAAQH/////AAAAAA==";
        #endregion
        #endif
        #endregion

        #region Public Properties
        /// <summary>
        /// A description for the ConfigurationManagement Object.
        /// </summary>
        public ConfigurationManagementState ConfigurationManagement
        {
            get
            {
                return m_configurationManagement;
            }

            set
            {
                if (!Object.ReferenceEquals(m_configurationManagement, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_configurationManagement = value;
            }
        }

        /// <summary>
        /// A description for the DiagnosticLevel Variable.
        /// </summary>
        public BaseDataVariableState<ushort> DiagnosticLevel
        {
            get
            {
                return m_diagnosticLevel;
            }

            set
            {
                if (!Object.ReferenceEquals(m_diagnosticLevel, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_diagnosticLevel = value;
            }
        }

        /// <summary>
        /// A description for the RecipeManagement Object.
        /// </summary>
        public RecipeManagementState RecipeManagement
        {
            get
            {
                return m_recipeManagement;
            }

            set
            {
                if (!Object.ReferenceEquals(m_recipeManagement, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_recipeManagement = value;
            }
        }

        /// <summary>
        /// A description for the ResultManagement Object.
        /// </summary>
        public ResultManagementState ResultManagement
        {
            get
            {
                return m_resultManagement;
            }

            set
            {
                if (!Object.ReferenceEquals(m_resultManagement, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_resultManagement = value;
            }
        }

        /// <summary>
        /// A description for the SafetyStateManagement Object.
        /// </summary>
        public SafetyStateManagementState SafetyStateManagement
        {
            get
            {
                return m_safetyStateManagement;
            }

            set
            {
                if (!Object.ReferenceEquals(m_safetyStateManagement, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_safetyStateManagement = value;
            }
        }

        /// <summary>
        /// A description for the SystemState Variable.
        /// </summary>
        public BaseDataVariableState<SystemStateDescriptionDataType> SystemState
        {
            get
            {
                return m_systemState;
            }

            set
            {
                if (!Object.ReferenceEquals(m_systemState, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_systemState = value;
            }
        }

        /// <summary>
        /// A description for the VisionStateMachine Object.
        /// </summary>
        public VisionStateMachineState VisionStateMachine
        {
            get
            {
                return m_visionStateMachine;
            }

            set
            {
                if (!Object.ReferenceEquals(m_visionStateMachine, value))
                {
                    ChangeMasks |= NodeStateChangeMasks.Children;
                }

                m_visionStateMachine = value;
            }
        }
        #endregion

        #region Overridden Methods
        /// <summary>
        /// Populates a list with the children that belong to the node.
        /// </summary>
        /// <param name="context">The context for the system being accessed.</param>
        /// <param name="children">The list of children to populate.</param>
        public override void GetChildren(
            ISystemContext context,
            IList<BaseInstanceState> children)
        {
            if (m_configurationManagement != null)
            {
                children.Add(m_configurationManagement);
            }

            if (m_diagnosticLevel != null)
            {
                children.Add(m_diagnosticLevel);
            }

            if (m_recipeManagement != null)
            {
                children.Add(m_recipeManagement);
            }

            if (m_resultManagement != null)
            {
                children.Add(m_resultManagement);
            }

            if (m_safetyStateManagement != null)
            {
                children.Add(m_safetyStateManagement);
            }

            if (m_systemState != null)
            {
                children.Add(m_systemState);
            }

            if (m_visionStateMachine != null)
            {
                children.Add(m_visionStateMachine);
            }

            base.GetChildren(context, children);
        }

        /// <summary>
        /// Finds the child with the specified browse name.
        /// </summary>
        protected override BaseInstanceState FindChild(
            ISystemContext context,
            QualifiedName browseName,
            bool createOrReplace,
            BaseInstanceState replacement)
        {
            if (QualifiedName.IsNull(browseName))
            {
                return null;
            }

            BaseInstanceState instance = null;

            switch (browseName.Name)
            {
                case Prefix2.BrowseNames.ConfigurationManagement:
                {
                    if (createOrReplace)
                    {
                        if (ConfigurationManagement == null)
                        {
                            if (replacement == null)
                            {
                                ConfigurationManagement = new ConfigurationManagementState(this);
                            }
                            else
                            {
                                ConfigurationManagement = (ConfigurationManagementState)replacement;
                            }
                        }
                    }

                    instance = ConfigurationManagement;
                    break;
                }

                case Prefix2.BrowseNames.DiagnosticLevel:
                {
                    if (createOrReplace)
                    {
                        if (DiagnosticLevel == null)
                        {
                            if (replacement == null)
                            {
                                DiagnosticLevel = new BaseDataVariableState<ushort>(this);
                            }
                            else
                            {
                                DiagnosticLevel = (BaseDataVariableState<ushort>)replacement;
                            }
                        }
                    }

                    instance = DiagnosticLevel;
                    break;
                }

                case Prefix2.BrowseNames.RecipeManagement:
                {
                    if (createOrReplace)
                    {
                        if (RecipeManagement == null)
                        {
                            if (replacement == null)
                            {
                                RecipeManagement = new RecipeManagementState(this);
                            }
                            else
                            {
                                RecipeManagement = (RecipeManagementState)replacement;
                            }
                        }
                    }

                    instance = RecipeManagement;
                    break;
                }

                case Prefix2.BrowseNames.ResultManagement:
                {
                    if (createOrReplace)
                    {
                        if (ResultManagement == null)
                        {
                            if (replacement == null)
                            {
                                ResultManagement = new ResultManagementState(this);
                            }
                            else
                            {
                                ResultManagement = (ResultManagementState)replacement;
                            }
                        }
                    }

                    instance = ResultManagement;
                    break;
                }

                case Prefix2.BrowseNames.SafetyStateManagement:
                {
                    if (createOrReplace)
                    {
                        if (SafetyStateManagement == null)
                        {
                            if (replacement == null)
                            {
                                SafetyStateManagement = new SafetyStateManagementState(this);
                            }
                            else
                            {
                                SafetyStateManagement = (SafetyStateManagementState)replacement;
                            }
                        }
                    }

                    instance = SafetyStateManagement;
                    break;
                }

                case Prefix2.BrowseNames.SystemState:
                {
                    if (createOrReplace)
                    {
                        if (SystemState == null)
                        {
                            if (replacement == null)
                            {
                                SystemState = new BaseDataVariableState<SystemStateDescriptionDataType>(this);
                            }
                            else
                            {
                                SystemState = (BaseDataVariableState<SystemStateDescriptionDataType>)replacement;
                            }
                        }
                    }

                    instance = SystemState;
                    break;
                }

                case Prefix2.BrowseNames.VisionStateMachine:
                {
                    if (createOrReplace)
                    {
                        if (VisionStateMachine == null)
                        {
                            if (replacement == null)
                            {
                                VisionStateMachine = new VisionStateMachineState(this);
                            }
                            else
                            {
                                VisionStateMachine = (VisionStateMachineState)replacement;
                            }
                        }
                    }

                    instance = VisionStateMachine;
                    break;
                }
            }

            if (instance != null)
            {
                return instance;
            }

            return base.FindChild(context, browseName, createOrReplace, replacement);
        }
        #endregion

        #region Private Fields
        private ConfigurationManagementState m_configurationManagement;
        private BaseDataVariableState<ushort> m_diagnosticLevel;
        private RecipeManagementState m_recipeManagement;
        private ResultManagementState m_resultManagement;
        private SafetyStateManagementState m_safetyStateManagement;
        private BaseDataVariableState<SystemStateDescriptionDataType> m_systemState;
        private VisionStateMachineState m_visionStateMachine;
        #endregion
    }
    #endif
    #endregion
}